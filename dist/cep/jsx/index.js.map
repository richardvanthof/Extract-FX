{"version":3,"file":"index.js","sources":["../../../secrets.ts","../../../cep.config.ts","../../../src/shared/shared.ts","../../../src/jsx/ppro/ppro.ts","../../../src/jsx/index.ts"],"sourcesContent":["export const signSecret = 'Engine2-Sleek-Magical'","import { CEP_Config } from \"vite-cep-plugin\";\nimport { version } from \"./package.json\";\nimport { signSecret } from './secrets';\n\nconst config: CEP_Config = {\n  version,\n  id: \"richardspace.extractFX\",\n  displayName: \"Extract FX\",\n  symlink: \"local\",\n  port: 3000,\n  servePort: 5000,\n  startingDebugPort: 8860,\n  extensionManifestVersion: 6.0,\n  requiredRuntimeVersion: 9.0,\n  hosts: [\n    { name: \"PPRO\", version: \"[0.0,99.9]\" }\n  ],\n  type: \"Panel\",\n  iconDarkNormal: \"./src/assets/light-icon.png\",\n  iconNormal: \"./src/assets/dark-icon.png\",\n  iconDarkNormalRollOver: \"./src/assets/light-icon.png\",\n  iconNormalRollOver: \"./src/assets/dark-icon.png\",\n  parameters: [\"--v=0\", \"--enable-nodejs\", \"--mixed-context\"],\n  width: 500,\n  height: 550,\n\n  panels: [\n    {\n      mainPath: \"./main/index.html\",\n      name: \"main\",\n      panelDisplayName: \"Extract FX\",\n      autoVisible: true,\n      width: 600,\n      height: 650,\n    },\n\n  ],\n  build: {\n    jsxBin: \"off\",\n    sourceMap: true,\n  },\n  zxp: {\n    country: \"NL\",\n    province: \"ZH\",\n    org: \"Richard Space\",\n    password: signSecret,\n    tsa: \"http://timestamp.digicert.com/\",\n    sourceMap: false,\n    jsxBin: \"off\",\n  },\n  installModules: [],\n  copyAssets: [],\n  copyZipAssets: ['src/static/installation-assets/*'],\n};\nexport default config;\n","import config from \"../../cep.config\";\r\nexport const ns = config.id;\r\n","export const example = () => {};","// @include './lib/json2.js'\n\nimport { ns } from \"../shared/shared\";\n\nimport * as ppro from \"./ppro/ppro\";\n\n//@ts-ignore\nconst host = typeof $ !== \"undefined\" ? $ : window;\n\n// A safe way to get the app name since some versions of Adobe Apps broken BridgeTalk in various places (e.g. After Effects 24-25)\n// in that case we have to do various checks per app to deterimine the app name\n\nconst getAppNameSafely = (): ApplicationName | \"unknown\" => {\n  const compare = (a: string, b: string) => {\n    return a.toLowerCase().indexOf(b.toLowerCase()) > -1;\n  };\n  const exists = (a: any) => typeof a !== \"undefined\";\n  const isBridgeTalkWorking =\n    typeof BridgeTalk !== \"undefined\" &&\n    typeof BridgeTalk.appName !== \"undefined\";\n\n  if (isBridgeTalkWorking) {\n    return BridgeTalk.appName;\n  } else if (app) {\n    //@ts-ignore\n    if (exists(app.name)) {\n      //@ts-ignore\n      const name: string = app.name;\n      if (compare(name, \"photoshop\")) return \"photoshop\";\n      if (compare(name, \"illustrator\")) return \"illustrator\";\n      if (compare(name, \"audition\")) return \"audition\";\n      if (compare(name, \"bridge\")) return \"bridge\";\n      if (compare(name, \"indesign\")) return \"indesign\";\n    }\n    //@ts-ignore\n    if (exists(app.appName)) {\n      //@ts-ignore\n      const appName: string = app.appName;\n      if (compare(appName, \"after effects\")) return \"aftereffects\";\n      if (compare(appName, \"animate\")) return \"animate\";\n    }\n    //@ts-ignore\n    if (exists(app.path)) {\n      //@ts-ignore\n      const path = app.path;\n      if (compare(path, \"premiere\")) return \"premierepro\";\n    }\n    //@ts-ignore\n    if (exists(app.getEncoderHost) && exists(AMEFrontendEvent)) {\n      return \"ame\";\n    }\n  }\n  return \"unknown\";\n};\n\nswitch (getAppNameSafely()) {\n  case \"premierepro\":\n  case \"premiereprobeta\":\n    host[ns] = ppro;\n    break;\n}\n\nexport type Scripts = typeof ppro\n\n// https://extendscript.docsforadobe.dev/interapplication-communication/bridgetalk-class.html?highlight=bridgetalk#appname\ntype ApplicationName =\n  | \"aftereffects\"\n  | \"aftereffectsbeta\"\n  | \"ame\"\n  | \"amebeta\"\n  | \"audition\"\n  | \"auditionbeta\"\n  | \"animate\"\n  | \"animatebeta\"\n  | \"bridge\"\n  | \"bridgebeta\"\n  // | \"flash\"\n  | \"illustrator\"\n  | \"illustratorbeta\"\n  | \"indesign\"\n  | \"indesignbeta\"\n  // | \"indesignserver\"\n  | \"photoshop\"\n  | \"photoshopbeta\"\n  | \"premierepro\"\n  | \"premiereprobeta\";\n"],"names":["version","id","displayName","symlink","port","servePort","startingDebugPort","extensionManifestVersion","requiredRuntimeVersion","hosts","name","type","iconDarkNormal","iconNormal","iconDarkNormalRollOver","iconNormalRollOver","parameters","width","height","panels","mainPath","panelDisplayName","autoVisible","build","jsxBin","sourceMap","zxp","country","province","org","password","tsa","installModules","copyAssets","host"],"mappings":";;AAAA;;ACIA;AACEA;AACAC;AACAC;AACAC;AACAC;AACAC;AACAC;AACAC;AACAC;AACAC;AACIC;AAAcV;AAAsB;AAExCW;AACAC;AACAC;AACAC;AACAC;AACAC;AACAC;AACAC;AAEAC;AAEIC;AACAV;AACAW;AACAC;AACAL;AACAC;AACF;AAGFK;AACEC;AACAC;;AAEFC;AACEC;AACAC;AACAC;AACAC;AACAC;AACAN;AACAD;;AAEFQ;AACAC;;AAEF;;ACpDA;;ACDA;;;;;;;ACOA;;AAEA;AACA;;AAEA;;AAEI;;AAEF;;AAAmD;AACnD;AAIA;;;AAGE;AACA;AACE;AACA;;;;;;AAMF;AACA;AACA;AACE;AACA;;;AAGF;AACA;AACA;AACE;AACA;;AAEF;AACA;;AAEE;AACF;AACF;AACA;AACF;AAEA;AACE;AACA;AACEC;AACA;AACJ;;AAIA"}