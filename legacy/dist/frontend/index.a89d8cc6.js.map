{"mappings":"ACCA,MAAM,EAAqB,SAAS,aAAa,CAAC,gBAAgB,KAAK,CAEjE,EAAyB,CAC7B,EACA,EACA,EAA2B,MAAiB,IAE5C,GAAI,CACF,IAAM,EAAc,IAAI,YACxB,kBAAkB,CAAA,GAClB,kBAAkB,iBAGlB,IAAI,EAA4B,EAAE,CAYjC,GAXD,EAAsB,OAAO,CAAC,CAAC,EAAI,KAClB,MAAZ,EAAG,KAAK,EACT,EAAiB,IAAI,CAAC,EAAG,KAAK,EAEhC,kBAAkB,CAAC,0BAA0B,EAAE,EAAM,CAAC,EAAE,EAAsB,MAAM,CAAC,CAAC,CAAC,CACzF,GAEC,QAAQ,GAAG,CAAC,GACZ,QAAQ,GAAG,CAAC,GACZ,QAAQ,GAAG,CAAC,GAET,CAAC,EAAa,KAAM,2BACvB,GAAG,CAAC,EAAkB,KAAM,mCAE5B,GAAG,AAAqB,SAArB,EAA6B,CAC5B,IAAM,EAAS,CAAC,0BAA0B,EAAE,EAAY,EAAE,EAAE,KAAK,SAAS,CAAC,GAAkB,CAAC,CAAC,CAC/F,kBAAkB,6BAClB,EAAY,UAAU,CAAC,EAAQ,eACnC,KAAO,CACH,IAAM,EAAS,CAAC,0CAA0C,EAAE,EAAY,EAAE,EAAE,KAAK,SAAS,CAAC,GAAkB,CAAC,CAAC,CAC/G,kBAAkB,qCAClB,EAAY,UAAU,CAAC,EAAQ,eACnC,CACH,CAAE,MAAO,EAAK,CACZ,MAAM,AAAI,MAAM,EAClB,CACF,EAGQ,EAAa,SAAS,aAAa,CAAC,gBACtB,IAAI,YAExB,EAAW,gBAAgB,CAAC,QAAS,AAAA,IAEnC,EAAE,cAAc,GAIhB,EAAuB,EAHO,SAAS,gBAAgB,CAAC,uBAE/B,AADE,SAAS,aAAa,CAAC,yBACN,YAAY,CAAC,oBAE3D,GAMA,SAAS,gBAAgB,CAAC,UAAU,OAAO,CAAC,AAAA,IAC1C,MAAQ,EAAE,SAAS,CAAC,MAAM,CAAC,QAAU,EAAE,SAAS,CAAC,GAAG,CAAC,OACvD","sources":["<anon>","src/frontend/scripts/handleExtractions.ts"],"sourcesContent":["const targetTrack = document.querySelector('#sourceTrack').value;\nconst handleEffectExtraction = (targetTrack, effectExclusionsElems, destinationValue = 'file')=>{\n    try {\n        const csInterface = new CSInterface();\n        showLoadingScreen(true);\n        setLoadingCaption('Initiating...');\n        // Get effect exclusions\n        let effectExclusions = [];\n        effectExclusionsElems.forEach((fx, index)=>{\n            if (fx.value != null) effectExclusions.push(fx.value);\n            setLoadingCaption(`Fetching effect exclusion ${index}/${effectExclusionsElems.length}}`);\n        });\n        console.log(targetTrack);\n        console.log(effectExclusionsElems);\n        console.log(effectExclusions);\n        if (!targetTrack) throw 'TargetTrack is undefined';\n        if (!effectExclusions) throw 'Effect exclusions are undefined.';\n        if (destinationValue === 'file') {\n            const script = `$._PPP_.saveEffectstoFile(${targetTrack}, ${JSON.stringify(effectExclusions)})`;\n            setLoadingCaption('Saving effects to file...');\n            csInterface.evalScript(script, handleCallback);\n        } else {\n            const script = `$._PPP_.copyClipEffectsToAdjustmentLayers(${targetTrack}, ${JSON.stringify(effectExclusions)})`;\n            setLoadingCaption('Extracting effects to timeline...');\n            csInterface.evalScript(script, handleCallback);\n        }\n    } catch (err) {\n        throw new Error(err);\n    }\n};\nconst extractBtn = document.querySelector('#extract-btn');\nconst csInterface = new CSInterface();\nextractBtn.addEventListener(\"click\", (e)=>{\n    // get target video track\n    e.preventDefault();\n    const effectExclusionsElems = document.querySelectorAll('.exclusion-dropdown');\n    const activeSwitchOption = document.querySelector('.switch-option.active');\n    const destinationValue = activeSwitchOption.getAttribute('data-destination');\n    handleEffectExtraction(targetTrack, effectExclusionsElems, destinationValue);\n});\n// csInterface.evalScript('$.getVersion()', function(version) {\n//   console.log('ExtendScript engine version: ' + version);\n// });\ndocument.querySelectorAll('.debug').forEach((e)=>{\n    debug ? e.classList.remove('hide') : e.classList.add('hide');\n});\n\n//# sourceMappingURL=index.a89d8cc6.js.map\n","\nconst targetTrack:number = document.querySelector('#sourceTrack').value;\n\nconst handleEffectExtraction = (\n  targetTrack: number, \n  effectExclusionsElems:HTMLElement[], \n  destinationValue: string = 'file' || 'track'\n) => {\n  try {\n    const csInterface = new CSInterface();\n    showLoadingScreen(true)\n    setLoadingCaption('Initiating...')\n\n    // Get effect exclusions\n    let effectExclusions:string[] = [];\n    effectExclusionsElems.forEach((fx, index) => {\n      if(fx.value != null) {\n        effectExclusions.push(fx.value)\n      }\n      setLoadingCaption(`Fetching effect exclusion ${index}/${effectExclusionsElems.length}}`)\n    })\n\n     console.log(targetTrack)\n     console.log(effectExclusionsElems)\n     console.log(effectExclusions)\n     \n     if(!targetTrack) throw 'TargetTrack is undefined'\n     if(!effectExclusions) throw 'Effect exclusions are undefined.'\n\n     if(destinationValue === 'file') {\n         const script = `$._PPP_.saveEffectstoFile(${targetTrack}, ${JSON.stringify(effectExclusions)})`;\n         setLoadingCaption('Saving effects to file...')\n         csInterface.evalScript(script, handleCallback);\n     } else {\n         const script = `$._PPP_.copyClipEffectsToAdjustmentLayers(${targetTrack}, ${JSON.stringify(effectExclusions)})`;\n         setLoadingCaption('Extracting effects to timeline...')\n         csInterface.evalScript(script, handleCallback);\n     }\n  } catch (err) {\n    throw new Error(err)\n  }\n}\n\n\n  const extractBtn = document.querySelector('#extract-btn');\n  const csInterface = new CSInterface();\n\n  extractBtn.addEventListener(\"click\", e => {\n    // get target video track\n    e.preventDefault();\n    const effectExclusionsElems = document.querySelectorAll('.exclusion-dropdown');\n    const activeSwitchOption = document.querySelector('.switch-option.active');\n    const destinationValue = activeSwitchOption.getAttribute('data-destination');\n    handleEffectExtraction(targetTrack, effectExclusionsElems, destinationValue);\n  })\n  \n  // csInterface.evalScript('$.getVersion()', function(version) {\n  //   console.log('ExtendScript engine version: ' + version);\n  // });\n\n  document.querySelectorAll('.debug').forEach(e => {\n    debug ? e.classList.remove('hide') : e.classList.add('hide')\n  });\n"],"names":["targetTrack","document","querySelector","value","handleEffectExtraction","effectExclusionsElems","destinationValue","csInterface","CSInterface","showLoadingScreen","setLoadingCaption","effectExclusions","forEach","fx","index","push","length","console","log","script","JSON","stringify","evalScript","handleCallback","err","Error","extractBtn","addEventListener","e","preventDefault","querySelectorAll","activeSwitchOption","getAttribute","debug","classList","remove","add"],"version":3,"file":"index.a89d8cc6.js.map"}