{"mappings":"ACAA,MAAM,EAAW,KACf,IAAI,EAAc,IAAI,YAClB,EAAc,EAAY,gBAAgB,GAE1C,EAAO,2GAEX,GAAI,EAAU,OAAO,CAAC,YAAa,EAC3B,IAAI,EAAO,yHAEnB,EAAY,uBAAuB,CAAC,EACtC,EAEM,EAAkB,CAAC,EAAc,KAIrC,AAHmB,MAAM,IAAI,CAAC,EAAW,QAAQ,EAGtC,OAAO,CAAC,AAAA,GAAU,EAAO,SAAS,CAAC,MAAM,CAAC,WAIrD,AADe,EAAM,aAAa,CAC3B,SAAS,CAAC,GAAG,CAAC,SACvB,EAEC,AAAA,CAAA,KAIC,AAF4B,SAAS,aAAa,CAAC,aAE3C,gBAAgB,CAAC,QAAS,AAAA,IAChC,EAAE,cAAc,GAChB,GACF,GAGA,IAAM,EAAc,SAAS,aAAa,CAAC,iBAEvC,GAIA,AAHsB,MAAM,IAAI,CAAC,EAAY,QAAQ,EAGvC,OAAO,CAAC,AAAA,IAClB,EAAO,gBAAgB,CAAC,QAAS,AAAA,GAAK,EAAgB,EAAG,GAC7D,EAGN,CAAA","sources":["<anon>","src/frontend/scripts/handleButtons.ts"],"sourcesContent":["const openHelp = ()=>{\n    var csInterface = new CSInterface();\n    var OSVersion = csInterface.getOSInformation();\n    var path = \"file:///Library/Application Support/Adobe/CEP/extensions/space.therichard.ExtractFX/payloads/manual.html\";\n    if (OSVersion.indexOf(\"Windows\") >= 0) var path = \"file:///C:/Program%20Files%20(x86)/Common%20Files/Adobe/CEP/extensions/space.therichard.ExtractFX/payloads/manual.html\";\n    csInterface.openURLInDefaultBrowser(path);\n};\nconst switchSelection = (event, parentElem)=>{\n    const allOptions = Array.from(parentElem.children); // Convert HTMLCollection to Array\n    // Remove 'active' class from all options\n    allOptions.forEach((option)=>option.classList.remove('active'));\n    // Add 'active' class to the clicked element\n    const target = event.currentTarget;\n    target.classList.add('active');\n};\n(()=>{\n    // Open help page in default browser\n    const helpBtn = document.querySelector('#help-btn');\n    helpBtn.addEventListener(\"click\", (e)=>{\n        e.preventDefault();\n        openHelp();\n    });\n    // Handle extraction destination selector\n    const switchInput = document.querySelector('.switch-input'); // Assuming this is a container for options\n    if (switchInput) {\n        const switchOptions = Array.from(switchInput.children); // Convert HTMLCollection to Array\n        // Add event listeners to each switch option\n        switchOptions.forEach((option)=>{\n            option.addEventListener('click', (e)=>switchSelection(e, switchInput));\n        });\n    }\n})();\n\n//# sourceMappingURL=index.acd02e87.js.map\n","const openHelp = () => {\n  var csInterface = new CSInterface();\n  var OSVersion   = csInterface.getOSInformation();\n  \n  var path = \"file:///Library/Application Support/Adobe/CEP/extensions/space.therichard.ExtractFX/payloads/manual.html\";\n  \n  if (OSVersion.indexOf(\"Windows\") >=0){\n          var path = \"file:///C:/Program%20Files%20(x86)/Common%20Files/Adobe/CEP/extensions/space.therichard.ExtractFX/payloads/manual.html\"\n  }\n  csInterface.openURLInDefaultBrowser(path);\t\n}\n\nconst switchSelection = (event: Event, parentElem: HTMLElement) => {\n  const allOptions = Array.from(parentElem.children) as HTMLElement[];  // Convert HTMLCollection to Array\n  \n  // Remove 'active' class from all options\n  allOptions.forEach(option => option.classList.remove('active'));\n  \n  // Add 'active' class to the clicked element\n  const target = event.currentTarget as HTMLElement;\n  target.classList.add('active');\n};\n\n(()=>{\n  // Open help page in default browser\n  const helpBtn:HTMLElement = document.querySelector('#help-btn');\n  \n  helpBtn.addEventListener(\"click\", e => {\n    e.preventDefault();\n    openHelp();\n  })  \n\n  // Handle extraction destination selector\n  const switchInput = document.querySelector('.switch-input') as HTMLElement; // Assuming this is a container for options\n    \n  if (switchInput) {\n      const switchOptions = Array.from(switchInput.children) as HTMLElement[];  // Convert HTMLCollection to Array\n  \n      // Add event listeners to each switch option\n      switchOptions.forEach(option => {\n          option.addEventListener('click', e => switchSelection(e, switchInput));\n      });\n  }\n\n})()"],"names":["openHelp","csInterface","CSInterface","OSVersion","getOSInformation","path","indexOf","openURLInDefaultBrowser","switchSelection","event","parentElem","allOptions","Array","from","children","forEach","option","classList","remove","target","currentTarget","add","helpBtn","document","querySelector","addEventListener","e","preventDefault","switchInput","switchOptions"],"version":3,"file":"index.acd02e87.js.map"}