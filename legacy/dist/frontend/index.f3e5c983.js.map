{"mappings":"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","sources":["<anon>","src/frontend/lib/Vulcan.ts"],"sourcesContent":["/**************************************************************************************************\n*\n* ADOBE INC.\n* Copyright 2013 Adobe Inc.\n* All Rights Reserved.\n*\n* NOTICE:  Adobe permits you to use, modify, and distribute this file in accordance with the\n* terms of the Adobe license agreement accompanying it.  If you have received this file from a\n* source other than Adobe, then your use, modification, or distribution of it requires the prior\n* written permission of Adobe.\n*\n**************************************************************************************************/ /** Vulcan - v6.1.0 */ /**\n * @class Vulcan\n *\n * The singleton instance, <tt>VulcanInterface</tt>, provides an interface\n * to the Vulcan. Allows you to launch CC applications\n * and discover information about them.\n */ function Vulcan() {}\n/**\n * Gets all available application specifiers on the local machine.\n *\n * @return The array of all available application specifiers.\n */ Vulcan.prototype.getTargetSpecifiers = function() {\n    var params = {};\n    return JSON.parse(window.__adobe_cep__.invokeSync(\"vulcanGetTargetSpecifiers\", JSON.stringify(params)));\n};\n/**\n * Launches a CC application on the local machine, if it is not already running.\n *\n * @param targetSpecifier The application specifier; for example \"indesign\".\n *\n *        Note: In Windows 7 64-bit or Windows 8 64-bit system, some target applications (like Photoshop and Illustrator) have both 32-bit version\n *        and 64-bit version. Therefore, we need to specify the version by this parameter with \"photoshop-70.032\" or \"photoshop-70.064\". If you\n *        installed Photoshop 32-bit and 64-bit on one Windows 64-bit system and invoke this interface with parameter \"photoshop-70.032\", you may\n *        receive wrong result.\n *        The specifiers for Illustrator is \"illustrator-17.032\", \"illustrator-17.064\", \"illustrator-17\" and \"illustrator\".\n *\n *        In other platforms there is no such issue, so we can use \"photoshop\" or \"photoshop-70\" as specifier.\n * @param focus           True to launch in foreground, or false to launch in the background.\n * @param cmdLine         Optional, command-line parameters to supply to the launch command.\n * @return True if the app can be launched, false otherwise.\n */ Vulcan.prototype.launchApp = function(targetSpecifier, focus, cmdLine) {\n    if (!requiredParamsValid(targetSpecifier)) return false;\n    var params = {};\n    params.targetSpecifier = targetSpecifier;\n    params.focus = focus ? \"true\" : \"false\";\n    params.cmdLine = cmdLine === undefined || cmdLine === null ? \"\" : cmdLine;\n    return JSON.parse(window.__adobe_cep__.invokeSync(\"vulcanLaunchApp\", JSON.stringify(params))).result;\n};\n/**\n * Checks whether a CC application is running on the local machine.\n *\n * @param targetSpecifier The application specifier; for example \"indesign\".\n *\n *        Note: In Windows 7 64-bit or Windows 8 64-bit system, some target applications (like Photoshop and Illustrator) have both 32-bit version\n *        and 64-bit version. Therefore, we need to specify the version by this parameter with \"photoshop-70.032\" or \"photoshop-70.064\". If you\n *        installed Photoshop 32-bit and 64-bit on one Windows 64-bit system and invoke this interface with parameter \"photoshop-70.032\", you may\n *        receive wrong result.\n *        The specifiers for Illustrator is \"illustrator-17.032\", \"illustrator-17.064\", \"illustrator-17\" and \"illustrator\".\n *\n *        In other platforms there is no such issue, so we can use \"photoshop\" or \"photoshop-70\" as specifier.\n * @return True if the app is running, false otherwise.\n */ Vulcan.prototype.isAppRunning = function(targetSpecifier) {\n    if (!requiredParamsValid(targetSpecifier)) return false;\n    var params = {};\n    params.targetSpecifier = targetSpecifier;\n    return JSON.parse(window.__adobe_cep__.invokeSync(\"vulcanIsAppRunning\", JSON.stringify(params))).result;\n};\n/**\n * Checks whether a CC application is installed on the local machine.\n *\n * @param targetSpecifier The application specifier; for example \"indesign\".\n *\n *        Note: In Windows 7 64-bit or Windows 8 64-bit system, some target applications (like Photoshop and Illustrator) have both 32-bit version\n *        and 64-bit version. Therefore, we need to specify the version by this parameter with \"photoshop-70.032\" or \"photoshop-70.064\". If you\n *        installed Photoshop 32-bit and 64-bit on one Windows 64-bit system and invoke this interface with parameter \"photoshop-70.032\", you may\n *        receive wrong result.\n *        The specifiers for Illustrator is \"illustrator-17.032\", \"illustrator-17.064\", \"illustrator-17\" and \"illustrator\".\n *\n *        In other platforms there is no such issue, so we can use \"photoshop\" or \"photoshop-70\" as specifier.\n * @return True if the app is installed, false otherwise.\n */ Vulcan.prototype.isAppInstalled = function(targetSpecifier) {\n    if (!requiredParamsValid(targetSpecifier)) return false;\n    var params = {};\n    params.targetSpecifier = targetSpecifier;\n    return JSON.parse(window.__adobe_cep__.invokeSync(\"vulcanIsAppInstalled\", JSON.stringify(params))).result;\n};\n/**\n * Retrieves the local install path of a CC application.\n *\n * @param targetSpecifier The application specifier; for example \"indesign\".\n *\n *        Note: In Windows 7 64-bit or Windows 8 64-bit system, some target applications (like Photoshop and Illustrator) have both 32-bit version\n *        and 64-bit version. Therefore, we need to specify the version by this parameter with \"photoshop-70.032\" or \"photoshop-70.064\". If you\n *        installed Photoshop 32-bit and 64-bit on one Windows 64-bit system and invoke this interface with parameter \"photoshop-70.032\", you may\n *        receive wrong result.\n *        The specifiers for Illustrator is \"illustrator-17.032\", \"illustrator-17.064\", \"illustrator-17\" and \"illustrator\".\n *\n *        In other platforms there is no such issue, so we can use \"photoshop\" or \"photoshop-70\" as specifier.\n * @return The path string if the application is found, \"\" otherwise.\n */ Vulcan.prototype.getAppPath = function(targetSpecifier) {\n    if (!requiredParamsValid(targetSpecifier)) return \"\";\n    var params = {};\n    params.targetSpecifier = targetSpecifier;\n    return JSON.parse(window.__adobe_cep__.invokeSync(\"vulcanGetAppPath\", JSON.stringify(params))).result;\n};\n/**\n * Registers a message listener callback function for a Vulcan message.\n *\n * @param type            The message type.\n * @param callback        The callback function that handles the message.\n *            Takes one argument, the message object.\n * @param obj             Optional, the object containing the callback method, if any.\n *            Default is null.\n */ Vulcan.prototype.addMessageListener = function(type, callback, obj) {\n    if (!requiredParamsValid(type, callback) || !strStartsWith(type, VulcanMessage.TYPE_PREFIX)) return;\n    var params = {};\n    params.type = type;\n    window.__adobe_cep__.invokeAsync(\"vulcanAddMessageListener\", JSON.stringify(params), callback, obj);\n};\n/**\n * Removes a registered message listener callback function for a Vulcan message.\n *\n * @param type            The message type.\n * @param callback        The callback function that was registered.\n *            Takes one argument, the message object.\n * @param obj             Optional, the object containing the callback method, if any.\n *            Default is null.\n */ Vulcan.prototype.removeMessageListener = function(type, callback, obj) {\n    if (!requiredParamsValid(type, callback) || !strStartsWith(type, VulcanMessage.TYPE_PREFIX)) return;\n    var params = {};\n    params.type = type;\n    window.__adobe_cep__.invokeAsync(\"vulcanRemoveMessageListener\", JSON.stringify(params), callback, obj);\n};\n/**\n * Dispatches a Vulcan message.\n *\n * @param vulcanMessage   The message object.\n */ Vulcan.prototype.dispatchMessage = function(vulcanMessage) {\n    if (!requiredParamsValid(vulcanMessage) || !strStartsWith(vulcanMessage.type, VulcanMessage.TYPE_PREFIX)) return;\n    var params = {};\n    var message = new VulcanMessage(vulcanMessage.type);\n    message.initialize(vulcanMessage);\n    params.vulcanMessage = message;\n    window.__adobe_cep__.invokeSync(\"vulcanDispatchMessage\", JSON.stringify(params));\n};\n/**\n * Retrieves the message payload of a Vulcan message for the registered message listener callback function.\n *\n * @param vulcanMessage   The message object.\n * @return                A string containing the message payload.\n */ Vulcan.prototype.getPayload = function(vulcanMessage) {\n    if (!requiredParamsValid(vulcanMessage) || !strStartsWith(vulcanMessage.type, VulcanMessage.TYPE_PREFIX)) return null;\n    var message = new VulcanMessage(vulcanMessage.type);\n    message.initialize(vulcanMessage);\n    return message.getPayload();\n};\n/** Singleton instance of Vulcan **/ var VulcanInterface = new Vulcan();\n//--------------------------------- Vulcan Message ------------------------------\n/**\n * @class VulcanMessage\n * Message type for sending messages between host applications.\n * A message of this type can be broadcast to all running\n * Vulcan-enabled apps.\n *\n * To send a message between extensions running within one\n * application, use the <code>CSEvent</code> type in CSInterface.js.\n *\n * @param type            The message type.\n *\n */ function VulcanMessage(type) {\n    this.type = type;\n    this.scope = VulcanMessage.SCOPE_SUITE;\n    this.appId = VulcanMessage.DEFAULT_APP_ID;\n    this.appVersion = VulcanMessage.DEFAULT_APP_VERSION;\n    this.data = VulcanMessage.DEFAULT_DATA;\n}\nVulcanMessage.TYPE_PREFIX = \"vulcan.SuiteMessage.\";\nVulcanMessage.SCOPE_SUITE = \"GLOBAL\";\nVulcanMessage.DEFAULT_APP_ID = \"UNKNOWN\";\nVulcanMessage.DEFAULT_APP_VERSION = \"UNKNOWN\";\nVulcanMessage.DEFAULT_DATA = \"<data><payload></payload></data>\";\nVulcanMessage.dataTemplate = \"<data>{0}</data>\";\nVulcanMessage.payloadTemplate = \"<payload>{0}</payload>\";\n/**\n * Initializes this message instance.\n *\n * @param message         A \\c message instance to use for initialization.\n */ VulcanMessage.prototype.initialize = function(message) {\n    this.type = message.type;\n    this.scope = message.scope;\n    this.appId = message.appId;\n    this.appVersion = message.appVersion;\n    this.data = message.data;\n};\n/**\n * Retrieve the message data.\n *\n * @return A data string in XML format.\n */ VulcanMessage.prototype.xmlData = function() {\n    if (this.data === undefined) {\n        var str = \"\";\n        str = String.format(VulcanMessage.payloadTemplate, str);\n        this.data = String.format(VulcanMessage.dataTemplate, str);\n    }\n    return this.data;\n};\n/**\n * Sets the message payload of this message.\n *\n * @param payload         A string containing the message payload.\n */ VulcanMessage.prototype.setPayload = function(payload) {\n    var str = cep.encoding.convertion.utf8_to_b64(payload);\n    str = String.format(VulcanMessage.payloadTemplate, str);\n    this.data = String.format(VulcanMessage.dataTemplate, str);\n};\n/**\n * Retrieves the message payload of this message.\n *\n * @return                A string containing the message payload.\n */ VulcanMessage.prototype.getPayload = function() {\n    var str = GetValueByKey(this.data, \"payload\");\n    if (str !== null) return cep.encoding.convertion.b64_to_utf8(str);\n    return null;\n};\n/**\n * Converts the properties of this instance to a string.\n *\n * @return The string version of this instance.\n */ VulcanMessage.prototype.toString = function() {\n    var str = \"type=\" + this.type;\n    str += \", scope=\" + this.scope;\n    str += \", appId=\" + this.appId;\n    str += \", appVersion=\" + this.appVersion;\n    str += \", data=\" + this.xmlData();\n    return str;\n};\n//--------------------------------------- Util --------------------------------\n/**\n * Formats a string based on a template.\n *\n * @param src The format template.\n *\n * @return The formatted string\n */ String.format = function(src) {\n    if (arguments.length === 0) return null;\n    var args = Array.prototype.slice.call(arguments, 1);\n    return src.replace(/\\{(\\d+)\\}/g, function(m, i) {\n        return args[i];\n    });\n};\n/**\n * Retrieves the content of an XML element.\n *\n * @param xmlStr    The XML string.\n * @param key       The name of the tag.\n *\n * @return          The content of the tag, or the empty string if such tag is found\n *          or the tag has no content.\n */ function GetValueByKey(xmlStr, key) {\n    if (window.DOMParser) {\n        var parser = new window.DOMParser();\n        try {\n            var xmlDoc = parser.parseFromString(xmlStr, \"text/xml\");\n            var node = xmlDoc.getElementsByTagName(key)[0];\n            if (node && node.childNodes[0]) return node.childNodes[0].nodeValue;\n        } catch (e) {\n        //log the error\n        }\n    }\n    return \"\";\n}\n/**\n * Reports whether required parameters are valid.\n *\n * @return    True if all required parameters are valid,\n *            false if any of the required parameters are invalid.\n */ function requiredParamsValid() {\n    for(var i = 0; i < arguments.length; i++){\n        var argument = arguments[i];\n        if (argument === undefined || argument === null) return false;\n    }\n    return true;\n}\n/**\n * Reports whether a string has a given prefix.\n *\n * @param str       The target string.\n * @param prefix    The specific prefix string.\n *\n * @return          True if the string has the prefix, false if not.\n */ function strStartsWith(str, prefix) {\n    if (typeof str != \"string\") return false;\n    return str.indexOf(prefix) === 0;\n}\n\n//# sourceMappingURL=index.f3e5c983.js.map\n","/**************************************************************************************************\n*\n* ADOBE INC.\n* Copyright 2013 Adobe Inc.\n* All Rights Reserved.\n*\n* NOTICE:  Adobe permits you to use, modify, and distribute this file in accordance with the\n* terms of the Adobe license agreement accompanying it.  If you have received this file from a\n* source other than Adobe, then your use, modification, or distribution of it requires the prior\n* written permission of Adobe.\n*\n**************************************************************************************************/\n\n/** Vulcan - v6.1.0 */\n\n/**\n * @class Vulcan\n *\n * The singleton instance, <tt>VulcanInterface</tt>, provides an interface\n * to the Vulcan. Allows you to launch CC applications\n * and discover information about them.\n */\nfunction Vulcan()\n{\n}\n\n/**\n * Gets all available application specifiers on the local machine.\n *\n * @return The array of all available application specifiers.\n */\nVulcan.prototype.getTargetSpecifiers = function()\n{\t\n\tvar params = {};\n\treturn JSON.parse(window.__adobe_cep__.invokeSync(\"vulcanGetTargetSpecifiers\", JSON.stringify(params)));\n};\n\n/**\n * Launches a CC application on the local machine, if it is not already running.\n *\n * @param targetSpecifier The application specifier; for example \"indesign\".\n *\n *        Note: In Windows 7 64-bit or Windows 8 64-bit system, some target applications (like Photoshop and Illustrator) have both 32-bit version\n *        and 64-bit version. Therefore, we need to specify the version by this parameter with \"photoshop-70.032\" or \"photoshop-70.064\". If you\n *        installed Photoshop 32-bit and 64-bit on one Windows 64-bit system and invoke this interface with parameter \"photoshop-70.032\", you may\n *        receive wrong result.\n *        The specifiers for Illustrator is \"illustrator-17.032\", \"illustrator-17.064\", \"illustrator-17\" and \"illustrator\".\n *\n *        In other platforms there is no such issue, so we can use \"photoshop\" or \"photoshop-70\" as specifier.\n * @param focus           True to launch in foreground, or false to launch in the background.\n * @param cmdLine         Optional, command-line parameters to supply to the launch command.\n * @return True if the app can be launched, false otherwise.\n */\nVulcan.prototype.launchApp = function(targetSpecifier, focus, cmdLine)\n{\n    if(!requiredParamsValid(targetSpecifier) )\n    {\n        return false;\n    }\n\t\n\tvar params = {};\n\tparams.targetSpecifier = targetSpecifier;\n\tparams.focus = focus ? \"true\" : \"false\";\n\tparams.cmdLine = (cmdLine === undefined || cmdLine === null) ? \"\" : cmdLine;\n\t\n\treturn JSON.parse(window.__adobe_cep__.invokeSync(\"vulcanLaunchApp\", JSON.stringify(params))).result;\n};\n\n/**\n * Checks whether a CC application is running on the local machine.\n *\n * @param targetSpecifier The application specifier; for example \"indesign\".\n *\n *        Note: In Windows 7 64-bit or Windows 8 64-bit system, some target applications (like Photoshop and Illustrator) have both 32-bit version\n *        and 64-bit version. Therefore, we need to specify the version by this parameter with \"photoshop-70.032\" or \"photoshop-70.064\". If you\n *        installed Photoshop 32-bit and 64-bit on one Windows 64-bit system and invoke this interface with parameter \"photoshop-70.032\", you may\n *        receive wrong result.\n *        The specifiers for Illustrator is \"illustrator-17.032\", \"illustrator-17.064\", \"illustrator-17\" and \"illustrator\".\n *\n *        In other platforms there is no such issue, so we can use \"photoshop\" or \"photoshop-70\" as specifier.\n * @return True if the app is running, false otherwise.\n */\nVulcan.prototype.isAppRunning = function(targetSpecifier)\n{\n    if(!requiredParamsValid(targetSpecifier) )\n    {\n        return false;\n    }\n\t\n\tvar params = {};\n\tparams.targetSpecifier = targetSpecifier;\n\t\n\treturn JSON.parse(window.__adobe_cep__.invokeSync(\"vulcanIsAppRunning\", JSON.stringify(params))).result;\n};\n\n/**\n * Checks whether a CC application is installed on the local machine.\n *\n * @param targetSpecifier The application specifier; for example \"indesign\".\n *\n *        Note: In Windows 7 64-bit or Windows 8 64-bit system, some target applications (like Photoshop and Illustrator) have both 32-bit version\n *        and 64-bit version. Therefore, we need to specify the version by this parameter with \"photoshop-70.032\" or \"photoshop-70.064\". If you\n *        installed Photoshop 32-bit and 64-bit on one Windows 64-bit system and invoke this interface with parameter \"photoshop-70.032\", you may\n *        receive wrong result.\n *        The specifiers for Illustrator is \"illustrator-17.032\", \"illustrator-17.064\", \"illustrator-17\" and \"illustrator\".\n *\n *        In other platforms there is no such issue, so we can use \"photoshop\" or \"photoshop-70\" as specifier.\n * @return True if the app is installed, false otherwise.\n */\nVulcan.prototype.isAppInstalled = function(targetSpecifier)\n{\n    if(!requiredParamsValid(targetSpecifier) )\n    {\n        return false;\n    }\n\t\n\tvar params = {};\n\tparams.targetSpecifier = targetSpecifier;\n\t\n\treturn JSON.parse(window.__adobe_cep__.invokeSync(\"vulcanIsAppInstalled\", JSON.stringify(params))).result;\n};\n\n/**\n * Retrieves the local install path of a CC application.\n *\n * @param targetSpecifier The application specifier; for example \"indesign\".\n *\n *        Note: In Windows 7 64-bit or Windows 8 64-bit system, some target applications (like Photoshop and Illustrator) have both 32-bit version\n *        and 64-bit version. Therefore, we need to specify the version by this parameter with \"photoshop-70.032\" or \"photoshop-70.064\". If you\n *        installed Photoshop 32-bit and 64-bit on one Windows 64-bit system and invoke this interface with parameter \"photoshop-70.032\", you may\n *        receive wrong result.\n *        The specifiers for Illustrator is \"illustrator-17.032\", \"illustrator-17.064\", \"illustrator-17\" and \"illustrator\".\n *\n *        In other platforms there is no such issue, so we can use \"photoshop\" or \"photoshop-70\" as specifier.\n * @return The path string if the application is found, \"\" otherwise.\n */\nVulcan.prototype.getAppPath = function(targetSpecifier)\n{\n    if(!requiredParamsValid(targetSpecifier) )\n    {\n        return \"\";\n    }\n\t\n\tvar params = {};\n\tparams.targetSpecifier = targetSpecifier;\n\t\n\treturn JSON.parse(window.__adobe_cep__.invokeSync(\"vulcanGetAppPath\", JSON.stringify(params))).result;\n};\n\n/**\n * Registers a message listener callback function for a Vulcan message.\n *\n * @param type            The message type.\n * @param callback        The callback function that handles the message.\n *            Takes one argument, the message object.\n * @param obj             Optional, the object containing the callback method, if any.\n *            Default is null.\n */\nVulcan.prototype.addMessageListener = function(type, callback, obj)\n{\n    if(!requiredParamsValid(type, callback) || !strStartsWith(type, VulcanMessage.TYPE_PREFIX))\n    {\n        return;\n    }\n\n\tvar params = {};\n\tparams.type = type;\n\t\n\twindow.__adobe_cep__.invokeAsync(\"vulcanAddMessageListener\", JSON.stringify(params), callback, obj);\n};\n\n/**\n * Removes a registered message listener callback function for a Vulcan message.\n *\n * @param type            The message type.\n * @param callback        The callback function that was registered.\n *            Takes one argument, the message object.\n * @param obj             Optional, the object containing the callback method, if any.\n *            Default is null.\n */\nVulcan.prototype.removeMessageListener = function(type, callback, obj)\n{\n    if(!requiredParamsValid(type, callback) || !strStartsWith(type, VulcanMessage.TYPE_PREFIX))\n    {\n        return;\n    }\n\t\n    var params = {};\n    params.type = type;\n\t\n    window.__adobe_cep__.invokeAsync(\"vulcanRemoveMessageListener\", JSON.stringify(params), callback, obj);\n};\n\n/**\n * Dispatches a Vulcan message.\n *\n * @param vulcanMessage   The message object.\n */\nVulcan.prototype.dispatchMessage = function(vulcanMessage)\n{\n    if(!requiredParamsValid(vulcanMessage) || !strStartsWith(vulcanMessage.type, VulcanMessage.TYPE_PREFIX))\n    {\n        return;\n    }\n\n\tvar params = {};\n\tvar message = new VulcanMessage(vulcanMessage.type);\n\tmessage.initialize(vulcanMessage);\n\tparams.vulcanMessage = message;\n\t\n\twindow.__adobe_cep__.invokeSync(\"vulcanDispatchMessage\", JSON.stringify(params));\n};\n\n/**\n * Retrieves the message payload of a Vulcan message for the registered message listener callback function.\n *\n * @param vulcanMessage   The message object.\n * @return                A string containing the message payload.\n */\nVulcan.prototype.getPayload = function(vulcanMessage)\n{\n    if(!requiredParamsValid(vulcanMessage) || !strStartsWith(vulcanMessage.type, VulcanMessage.TYPE_PREFIX))\n    {\n        return null;\n    }\n\n\tvar message = new VulcanMessage(vulcanMessage.type);\n\tmessage.initialize(vulcanMessage);\n\treturn message.getPayload();\n};\n\n/** Singleton instance of Vulcan **/\nvar VulcanInterface = new Vulcan();\n\n//--------------------------------- Vulcan Message ------------------------------\n\n/**\n * @class VulcanMessage\n * Message type for sending messages between host applications.\n * A message of this type can be broadcast to all running\n * Vulcan-enabled apps.\n *\n * To send a message between extensions running within one\n * application, use the <code>CSEvent</code> type in CSInterface.js.\n *\n * @param type            The message type.\n *\n */\nfunction VulcanMessage(type)\n{\n    this.type = type;\n    this.scope = VulcanMessage.SCOPE_SUITE;\n    this.appId = VulcanMessage.DEFAULT_APP_ID;\n\tthis.appVersion = VulcanMessage.DEFAULT_APP_VERSION;\n    this.data = VulcanMessage.DEFAULT_DATA;\n}\n\nVulcanMessage.TYPE_PREFIX    = \"vulcan.SuiteMessage.\";\nVulcanMessage.SCOPE_SUITE    = \"GLOBAL\";\nVulcanMessage.DEFAULT_APP_ID = \"UNKNOWN\";\nVulcanMessage.DEFAULT_APP_VERSION = \"UNKNOWN\";\nVulcanMessage.DEFAULT_DATA = \"<data><payload></payload></data>\";\nVulcanMessage.dataTemplate = \"<data>{0}</data>\";\nVulcanMessage.payloadTemplate = \"<payload>{0}</payload>\";\n\n/**\n * Initializes this message instance.\n *\n * @param message         A \\c message instance to use for initialization.\n */\nVulcanMessage.prototype.initialize = function(message)\n{\n    this.type = message.type;\n    this.scope = message.scope;\n    this.appId = message.appId;\n    this.appVersion = message.appVersion;\n    this.data = message.data;\n};\n\n/**\n * Retrieve the message data.\n *\n * @return A data string in XML format.\n */\nVulcanMessage.prototype.xmlData = function ()\n{\n    if(this.data === undefined)\n    {\n        var str = \"\";\n\t\tstr = String.format(VulcanMessage.payloadTemplate, str);\n\t\tthis.data = String.format(VulcanMessage.dataTemplate, str);\n    }\n    return this.data;\n};\n\n/**\n * Sets the message payload of this message.\n *\n * @param payload         A string containing the message payload.\n */\nVulcanMessage.prototype.setPayload = function(payload)\n{\n    var str = cep.encoding.convertion.utf8_to_b64(payload);\n    str = String.format(VulcanMessage.payloadTemplate, str);\n    this.data = String.format(VulcanMessage.dataTemplate, str);\n};\n\n/**\n * Retrieves the message payload of this message.\n *\n * @return                A string containing the message payload.\n */\nVulcanMessage.prototype.getPayload = function()\n{\n    var str = GetValueByKey(this.data, \"payload\");\n    if(str !== null)\n    {\n        return cep.encoding.convertion.b64_to_utf8(str);\n    }\n\n    return null;\n};\n\n/**\n * Converts the properties of this instance to a string.\n *\n * @return The string version of this instance.\n */\nVulcanMessage.prototype.toString = function()\n{\n    var str = \"type=\" + this.type;\n    str += \", scope=\" + this.scope;\n    str += \", appId=\" + this.appId;\n    str += \", appVersion=\" + this.appVersion;\n    str += \", data=\" + this.xmlData();\n    return str;\n};\n\n//--------------------------------------- Util --------------------------------\n\n/**\n * Formats a string based on a template.\n *\n * @param src The format template.\n *\n * @return The formatted string\n */\nString.format = function(src)\n{\n    if (arguments.length === 0)\n    {\n        return null;\n    }\n\n    var args = Array.prototype.slice.call(arguments, 1);\n    return src.replace(/\\{(\\d+)\\}/g, function(m, i){\n        return args[i];\n  });\n};\n\n/**\n * Retrieves the content of an XML element.\n *\n * @param xmlStr    The XML string.\n * @param key       The name of the tag.\n *\n * @return          The content of the tag, or the empty string if such tag is found\n *          or the tag has no content.\n */\nfunction GetValueByKey(xmlStr, key)\n{\n    if(window.DOMParser)\n    {\n        var parser = new window.DOMParser();\n        try\n        {\n            var xmlDoc = parser.parseFromString(xmlStr, \"text/xml\");\n            var node = xmlDoc.getElementsByTagName(key)[0];\n            if(node && node.childNodes[0])\n            {\n                return node.childNodes[0].nodeValue;\n            }\n        }\n        catch(e)\n        {\n            //log the error\n        }\n    }\n    return \"\";\n}\n\n/**\n * Reports whether required parameters are valid.\n *\n * @return    True if all required parameters are valid,\n *            false if any of the required parameters are invalid.\n */\nfunction requiredParamsValid()\n{\n    for(var i = 0; i< arguments.length; i++)\n    {\n        var argument = arguments[i];\n        if(argument === undefined || argument === null)\n        {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * Reports whether a string has a given prefix.\n *\n * @param str       The target string.\n * @param prefix    The specific prefix string.\n *\n * @return          True if the string has the prefix, false if not.\n */\nfunction strStartsWith(str, prefix)\n{\n    if(typeof str != \"string\")\n    {\n        return false;\n    }\n    return str.indexOf(prefix) === 0;\n}\n"],"names":["Vulcan","VulcanMessage","type","scope","SCOPE_SUITE","appId","DEFAULT_APP_ID","appVersion","DEFAULT_APP_VERSION","data","DEFAULT_DATA","requiredParamsValid","i","arguments","length","argument","strStartsWith","str","prefix","indexOf","prototype","getTargetSpecifiers","JSON","parse","window","__adobe_cep__","invokeSync","stringify","launchApp","targetSpecifier","focus","cmdLine","params","result","isAppRunning","isAppInstalled","getAppPath","addMessageListener","callback","obj","TYPE_PREFIX","invokeAsync","removeMessageListener","dispatchMessage","vulcanMessage","message","initialize","getPayload","dataTemplate","payloadTemplate","xmlData","undefined","String","format","setPayload","payload","cep","encoding","convertion","utf8_to_b64","GetValueByKey","xmlStr","key","DOMParser","parser","node","xmlDoc","parseFromString","getElementsByTagName","childNodes","nodeValue","e","b64_to_utf8","toString","src","args","Array","slice","call","replace","m"],"version":3,"file":"index.f3e5c983.js.map"}