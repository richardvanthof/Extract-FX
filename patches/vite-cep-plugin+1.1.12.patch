diff --git a/node_modules/vite-cep-plugin/.DS_Store b/node_modules/vite-cep-plugin/.DS_Store
new file mode 100644
index 0000000..c1caafe
Binary files /dev/null and b/node_modules/vite-cep-plugin/.DS_Store differ
diff --git a/node_modules/vite-cep-plugin/lib/.tmp/Bolt ES.js b/node_modules/vite-cep-plugin/lib/.tmp/Bolt ES.js
deleted file mode 100644
index 95d0fb1..0000000
--- a/node_modules/vite-cep-plugin/lib/.tmp/Bolt ES.js	
+++ /dev/null
@@ -1,205 +0,0 @@
-(function (thisObj) {
-var name = "bolt-es";
-var version = "0.0.1";
-var scripts = {
-	go: "ts-node vite.config.ts",
-	dev: "vite",
-	debug: "cross-env DEBUG_REACT=true vite build --watch true",
-	watch: "tsc && vite build --watch true",
-	build: "rimraf dist/* && tsc && vite build --watch false",
-	symlink: "cross-env ACTION=symlink vite",
-	delsymlink: "cross-env ACTION=delsymlink vite"
-};
-var dependencies = {
-};
-var devDependencies = {
-	"@babel/core": "^7.16.10",
-	"@babel/plugin-proposal-class-properties": "^7.16.0",
-	"@babel/plugin-proposal-object-rest-spread": "^7.16.0",
-	"@babel/plugin-syntax-dynamic-import": "^7.8.3",
-	"@babel/plugin-transform-runtime": "^7.16.4",
-	"@babel/preset-env": "^7.16.4",
-	"@babel/preset-react": "^7.16.0",
-	"@babel/preset-typescript": "^7.16.0",
-	"@babel/runtime": "^7.16.3",
-	"@rollup/plugin-babel": "^5.3.1",
-	"@rollup/plugin-commonjs": "^21.0.2",
-	"@rollup/plugin-image": "^2.1.1",
-	"@rollup/plugin-json": "^4.1.0",
-	"@rollup/plugin-node-resolve": "^13.1.3",
-	"@rollup/plugin-replace": "^4.0.0",
-	"@sveltejs/vite-plugin-svelte": "^1.0.0-next.30",
-	"@types/fs-extra": "^9.0.13",
-	"@types/node": "^16.11.7",
-	"@types/trusted-types": "^2.0.2",
-	"babel-preset-env": "^1.7.0",
-	"core-js": "3",
-	"cross-env": "^7.0.3",
-	"fs-extra": "^10.0.0",
-	rimraf: "^3.0.2",
-	rollup: "^2.68.0",
-	"rollup-plugin-multi-input": "^1.3.1",
-	"rollup-plugin-node-copy": "^1.0.4",
-	"types-for-adobe": "^7.0.0",
-	"types-for-adobe-extras": "^0.0.1",
-	typescript: "^4.4.4",
-	vite: "^2.9.1",
-	"vite-cep-plugin": "^0.2.8",
-	yarn: "^1.22.17"
-};
-var main$1 = "index.js";
-var license = "MIT";
-var _package = {
-	name: name,
-	version: version,
-	scripts: scripts,
-	dependencies: dependencies,
-	devDependencies: devDependencies,
-	main: main$1,
-	license: license
-};
-
-var config = {
-  version: version,
-  id: "com.bolt.es",
-  displayName: "Bolt ES",
-  symlink: "local",
-  port: 3000,
-  servePort: 5000,
-  startingDebugPort: 8860,
-  extensionManifestVersion: 6.0,
-  requiredRuntimeVersion: 9.0,
-  hosts: [{
-    name: "AEFT",
-    version: "[0.0,99.9]"
-  }, {
-    name: "ILST",
-    version: "[0.0,99.9]"
-  }],
-  type: "Panel",
-  iconDarkNormal: "./src/assets/light-icon.png",
-  iconNormal: "./src/assets/dark-icon.png",
-  iconDarkNormalRollOver: "./src/assets/light-icon.png",
-  iconNormalRollOver: "./src/assets/dark-icon.png",
-  parameters: ["--enable-nodejs", "--mixed-context"],
-  width: 500,
-  height: 550,
-  panels: [{
-    mainPath: "./main/index.html",
-    name: "main",
-    panelDisplayName: "Bolt CEP",
-    autoVisible: true,
-    width: 600,
-    height: 650
-  }],
-  build: {
-    jsxBin: "copy",
-    sourceMap: true
-  },
-  zxp: {
-    country: "US",
-    province: "CA",
-    org: "MyCompany",
-    password: "mypassword",
-    tsa: "http://timestamp.digicert.com/",
-    sourceMap: false,
-    jsxBin: "replace"
-  },
-  installModules: [],
-  copyAssets: []
-};
-
-var ns = config.id;
-
-var _this = thisObj;
-
-var init$2 = function init() {
-  var panelGlobal = _this;
-  var dialog = panelGlobal instanceof Panel ? panelGlobal : new Window("palette");
-  if (!(panelGlobal instanceof Panel)) dialog.text = "Dialog";
-  var button1 = dialog.add("button", undefined, undefined, {
-    name: "button1"
-  });
-  button1.text = "Hello World";
-
-  button1.onClick = function () {
-    alert("Hello from After Effects!");
-  };
-
-  dialog.layout.layout(true);
-  dialog.layout.resize();
-
-  dialog.onResizing = dialog.onResize = function () {
-    this.layout.resize();
-  };
-
-  if (dialog instanceof Window) dialog.show();
-};
-
-var aeft = /*#__PURE__*/({
-  __proto__: null,
-  init: init$2
-});
-
-var init$1 = function init() {
-  var dialog = new Window("dialog", "Bolt ES");
-  var btn = dialog.add("button", undefined, undefined, {
-    name: "btn"
-  });
-  btn.text = "Hello World";
-
-  btn.onClick = function () {
-    alert("Hello from Illustrator");
-  };
-
-  dialog.show();
-};
-
-var ilst = /*#__PURE__*/({
-  __proto__: null,
-  init: init$1
-});
-
-var init = function init() {
-  var dialog = new Window("dialog", "Bolt ES");
-  var btn = dialog.add("button", undefined, undefined, {
-    name: "btn"
-  });
-  btn.text = "Hello World";
-
-  btn.onClick = function () {
-    alert("Hello from Photoshop");
-  };
-
-  dialog.show();
-};
-
-var phxs = /*#__PURE__*/({
-  __proto__: null,
-  init: init
-});
-
-// @include './lib/json2.js'
-var main;
-
-switch (BridgeTalk.appName) {
-  case "aftereffects":
-    main = aeft;
-    main.init();
-    break;
-
-  case "illustrator":
-    main = ilst;
-    main.init();
-    break;
-
-  case "photoshop":
-    main = phxs;
-    main.init();
-    break;
-} // Append to Helper Object to call functions directly from console / other scripts
-//@ts-ignore
-
-
-$[ns] = main;
-})(this);
diff --git a/node_modules/vite-cep-plugin/lib/.tmp/Bolt ES.jsxbin b/node_modules/vite-cep-plugin/lib/.tmp/Bolt ES.jsxbin
deleted file mode 100644
index 681cac0..0000000
--- a/node_modules/vite-cep-plugin/lib/.tmp/Bolt ES.jsxbin	
+++ /dev/null
@@ -1,150 +0,0 @@
-@JSXBIN@ES@2.0@MyBbyBn0ACbAn0ACJAnAUzChGhGBCzChBhdCnizGjUjZjQjFjPjGDjzEiKiTiPiOE
-feGjPjCjKjFjDjUnBjEfWzGiPjCjKjFjDjUFAnfnnJAnAENyBnAMAbyBnAEMAbyBn0ABZAnAdCzBhcG
-VzBjUHfAnndKCzBhLInVHfAeBhQnVHf0ABH40BhAB0AzBjGJ0AMAbyBn0ABZAnAEXzHjWjBjMjVjFiP
-jGKfezEjUjIjJjTLfnf0DzKjUjIjJjTifjWjBjMjVjFM0AMAbyBn0ABZAnARCBXzJjMjBjTjUiJjOjE
-jFjYNfjzMjSjYifjFjTjDjBjQjBjCjMjFOfndAfdEXzEjUjFjTjUPfjOfRBVHfAffCICInEXzHjSjFj
-QjMjBjDjFQfVHfARCjOfNyBnAMAbyBn0ACJAnASzBjFRAQzASfjzEjNjFjUjBTfVHfBnftZAnAdCzCh
-dhdUniDVRfAeGjTjUjSjJjOjHnVRfACInEXzFjTjMjJjDjFVfCInEXzIjUjPiTjUjSjJjOjHWfEXzKj
-DjIjBjSiDjPjEjFiBjUXfVHfBRBFdAffRBFdQffeEhQhQhQhQnRBFdyEffeCicjVnACH40BhAR40BiA
-BBASCAffeBhCnnneBhCCICInVHfAeBhCnnneBhCtABH40BhAB0AzFjRjVjPjUjFY0AMAbyBn0ACbAn0
-ACJAnASzBjBZFjzDjHjBjQgafnftJAnASzBjJgbGQSfVRfIVHfHnftcAnARDUBUBUBVgbfGCUniDVgb
-fGeGjPjCjKjFjDjUnnnCUniDXzGjUjPiKiTiPiOgcfVgbfGeIjGjVjOjDjUjJjPjOnnnSgbGEXgcfVg
-bfGRBVHfHffnffnnUBCUniDjzDjSjFjQgdfeIjGjVjOjDjUjJjPjOnSgbGEXzEjDjBjMjMgefjgdfRD
-VRfIVHfHVgbfGffnffnniDVgbfGtERBFeGjTjUjSjJjOjHfRBFeGjOjVjNjCjFjSfRCFeHjCjPjPjMj
-FjBjOFeEjOjVjMjMfRBFeGjPjCjKjFjDjUfEbAn0ABZAnAEjYfRBVgbfGffbAn0ABZAnAdEjzIjJjTi
-GjJjOjJjUjFgffRBVgbfGffEjzGiTjUjSjJjOjHhAfRBVgbfGffFeEjOjVjMjMbAn0ABZAnAEjhAfRB
-VgbfGffbAn0AEOAZAnAFeEjOjVjMjMAhzBhBhBVgbfGnOAbAn0ACKAJAnABQSfVJfEVzBjShCfAUzCj
-cjchDEjzDjTjUjShEfRCVhCfAVgbfGffnneEjOjVjMjMnfARCSzBjVhFDXzGjMjFjOjHjUjIhGfVgbf
-GnffShCAndAfftCGVhCfAVhFfDnnShCACInnndBntfZAnARDSzBjPhHCddCzDhdhdhdhInXhGfVJfEd
-AnFeCibidjgafCICICICICInjgafeCibKnEXzEjKjPjJjOhJfVJfERBCInjgafeChMKnffnnnneBKVZ
-fFnnnneBidCICInEXhJfVJfERBFeBhMffeBibnnneBidnffBjgafVZfFnfVhHfCtARDBjgafCInjzGj
-JjOjEjFjOjUhKfnnntSJEAnnffChInEXzFjBjQjQjMjZhLfXWfXzJjQjSjPjUjPjUjZjQjFhMfjFfRB
-VgbfGffeOibjPjCjKjFjDjUhAiBjSjSjBjZidntnOAKAJAnAUBUBCUniDQSfjgdfVhCfAeGjTjUjSjJ
-jOjHnShHCEjhEfRCSzBjOhNBQSfjgdfVhCfAnffVgbfGffnffnnEXzEjQjVjTjIhOfVJfERBCICIEjY
-fRBVhNfBffdjgafFeChahAFeBhannVhHfCnnffnnARCShFDXhGfjgdfnffShCAndAfftCGVhCfAVhFf
-DnnShCACInnndBntfAUBjgdfCUniDjgdfeGjPjCjKjFjDjUnnnLAJAnAUBUBEXgefXzOjIjBjTiPjXj
-OiQjSjPjQjFjSjUjZhPfXhMfjFfRCVgbfGVhNfBffShHCEjhEfRCVhNfBVgbfGffnffnnEXhOfVJfER
-BCICIEjYfRBVhNfBffdjgafFeChahAFeBhannVhHfCnnffnnAVhNfBVgbfGyBSfZAnARDShHCddChIn
-XhGfVJfEdAnFeCjbjdjgafCICICICICInjgafeCjbKnEXhJfVJfERBCInjgafeChMKnffnnnneBKVZf
-FnnnneBjdCICInEXhJfVJfERBFeBhMffeBjbnnneBjdnffBjgafVZfFnfVhHfCtAJgb4G0AiAH40BhA
-J4E0AiAR4B0AhAZ4F0AiAhC40BiAhN4B0AiAhH4C0AiAhF4D0AiACHAhE0ADJAnAFeKjVjTjFhAjTjU
-jSjJjDjUbAn0AGJAnASzGjSjYifjPjOjFhQAYNieibicidhMhajbjdicjTidhKhEAnftJAnASzGjSjY
-ifjUjXjPhRBYhCicichIhfhaibhCicicichPjCjGjOjSjUidjcjVibhQhNhZjBhNjGiBhNiGidjbhUj
-dhJBjHnftJAnASzIjSjYifjUjIjSjFjFhSCYhfhCibiehCicicicjOicjSidhKhCjcjUjSjVjFjcjGj
-BjMjTjFjcjOjVjMjMjchNhficjEhLhIhfhaichOicjEhKhJhfhIhfhaibjFiFidibhLichNidhficjE
-hLhJhfBjHnftJAnASzHjSjYifjGjPjVjShTDYThIhfhaiejchajchMhJhIhfhaicjThKicibhJhLBjH
-nftJAnASOEYjfibicicichCicjVhQhQhQhQhNicjVhQhQhRjGicjVhQhQhXjGhNicjVhQhQhZjGicjV
-hQhQjBjEicjVhQhWhQhQhNicjVhQhWhQhUicjVhQhXhQjGicjVhRhXjChUicjVhRhXjChVicjVhShQh
-QjDhNicjVhShQhQjGicjVhShQhShYhNicjVhShQhSjGicjVhShQhWhQhNicjVhShQhWjGicjVjGjFjG
-jGicjVjGjGjGhQhNicjVjGjGjGjGidBjHnftJAnASzMjSjYifjEjBjOjHjFjSjPjVjThUFYjHibicjV
-hQhQhQhQicjVhQhQjBjEicjVhQhWhQhQhNicjVhQhWhQhUicjVhQhXhQjGicjVhRhXjChUicjVhRhXj
-ChVicjVhShQhQjDhNicjVhShQhQjGicjVhShQhShYhNicjVhShQhSjGicjVhShQhWhQhNicjVhShQhW
-jGicjVjGjFjGjGicjVjGjGjGhQhNicjVjGjGjGjGidBjHnftbAn0ADJAnAUBCCniDXgcfXhMfjzEiEj
-BjUjFhVfeIjGjVjOjDjUjJjPjOnREBXgcfXhMfjhVfNyBnAMAbyBn0ABZAnAdEjgffRBEXKfeLfnfff
-CICICICICICICICICICICIEXzOjHjFjUiViUiDiGjVjMjMiZjFjBjShWfeLfnfnneBhNEjJfRBCIEXz
-LjHjFjUiViUiDiNjPjOjUjIhXfeLfnfnndBffnnnneBhNEjJfRBEXzKjHjFjUiViUiDiEjBjUjFhYfe
-LfnfffnnnneBiUEjJfRBEXzLjHjFjUiViUiDiIjPjVjSjThZfeLfnfffnnnneBhaEjJfRBEXzNjHjFj
-UiViUiDiNjJjOjVjUjFjThafeLfnfffnnnneBhaEjJfRBEXzNjHjFjUiViUiDiTjFjDjPjOjEjThbfe
-LfnfffnnnneBiaFb0DSCAnfBXgcfXhMfjzHiCjPjPjMjFjBjOhcfjMfnfBXgcfXhMfjzGiOjVjNjCjF
-jShdfjMfnfBXgcfXhMfjhAfjMfnftnnJAnAUBCCniDXzJjTjUjSjJjOjHjJjGjZhefjEfeIjGjVjOjD
-jUjJjPjOnRCSTIWFHzBIhfFeCicjCzBJiAFeCicjUzBKiBFeCicjOzBMiCFeCicjGzBNiDFeCicjSzB
-hCiEFeCichCzBiciFFeCicicnffBXhefjEfNyBnAMAbyBn0ADOAaAJAnABjhKfCInnneBhAntAVhNf0
-AVhCfDByBGARDBjgafneAfBjhKfneAfCUniDVhCfDeGjOjVjNjCjFjSntJAnAUBCUniDVhCfDeGjTjU
-jSjJjOjHnBjhKfVhCfDnfnnOAfAnAEjzFiFjSjSjPjSiGfRBFeOiKiTiPiOhOjTjUjSjJjOjHjJjGjZ
-ftARCBjgdfVRfCnfUBUBVRfCCCniDVRfCeIjGjVjOjDjUjJjPjOnnnUhDCCniDVRfCeGjPjCjKjFjDj
-UnCCniDXhGfVRfCeGjOjVjNjCjFjSnnnnntnZAnAEjhEfRCFeAWFBSVHfBffAEH40BhAR4B0AhAhC4C
-0AhAhN40BiADBASCAnftnnJAnAUBCCniDXzFjQjBjSjTjFiHfjEfeIjGjVjOjDjUjJjPjOnBXiHfjEf
-NyBnAMAbyBnABMAbyBn0ADJAnAShHCQSfVHfDVRfEnftOALAJAnAUBEXgefXhPfXhMfjFfRCVhHfCVh
-CfAffdCzDhBhdhdiIhzEjWjPjJjEiJFdAShNBEjzEjXjBjMjLiKfRCVhHfCVhCfAffnffnnBQSfVhHf
-CVhCfAVhNfBnfizGjEjFjMjFjUjFiLQSfVhHfCVhCfAnnAVhCfAVhHfCyBSfAUBVhHfCCUniDVhHfCe
-GjPjCjKjFjDjUnnnnZAnAEXgefjzHjSjFjWjJjWjFjSiMfRDVHfDVRfEVhHfCffAFH40BhAR4B0AhAh
-C40BiAhN4B0AiAhH4C0AiACDAiK0ACOAZAnARCSzBjKiNAEjzEjFjWjBjMiOfRBCICInVzEjUjFjYjU
-iPfBeBhInnneBhJffnffdCUniDViMfCeIjGjVjOjDjUjJjPjOnEjiKfRCWFBSViNfAFeAffViNfAtAR
-ESiPBEjhAfRBViPfBffnffBXNfjhUfndAfUBEXPfjhUfRBViPfBffSiPBEXQfViPfBRCjhUfNyBnAMA
-byBn0ABZAnACInEXVfCInEXWfEXXfVHfARBFdAffRBFdQffeEhQhQhQhQnRBFdyEffeCicjVnABH40B
-hAB0ASCAffnffnnEXPfjhQfRBEXQfEXQfEXQfViPfBRCjhRfFeBiAffRCjhSfFeBidffRCjhTfFeAff
-fftnfAnAEjzLiTjZjOjUjBjYiFjSjSjPjSiQfRBFeKiKiTiPiOhOjQjBjSjTjFftADiN40BiAiP40Bh
-AiM4B0AhACBASCAnfnnAKhQ40BiAhR4B0AiAhS4C0AiAhT4D0AiAO4E0AiAhU4F0AiAga4G0AiAhK4H
-0AiAT4I0AiAgd4J0AiAAKASCAnfJmMnAENyBnAMBbyBn0ATJCnASzEjOjBjNjFiRAneHjCjPjMjUhNj
-FjTftJDnASzHjWjFjSjTjJjPjOiSBneFhQhOhQhOhRftJEnASzHjTjDjSjJjQjUjTiTCWFHzCjHjPiU
-FeWjUjThNjOjPjEjFhAjWjJjUjFhOjDjPjOjGjJjHhOjUjTzDjEjFjWiVFeEjWjJjUjFzFjEjFjCjVj
-HiWFehSjDjSjPjTjThNjFjOjWhAiEiFiCiViHifiSiFiBiDiUhdjUjSjVjFhAjWjJjUjFhAjCjVjJjM
-jEhAhNhNjXjBjUjDjIhAjUjSjVjFzFjXjBjUjDjIiXFegejUjTjDhAhGhGhAjWjJjUjFhAjCjVjJjMj
-EhAhNhNjXjBjUjDjIhAjUjSjVjFzFjCjVjJjMjEiYFehQjSjJjNjSjBjGhAjEjJjTjUhPhKhAhGhGhA
-jUjTjDhAhGhGhAjWjJjUjFhAjCjVjJjMjEhAhNhNjXjBjUjDjIhAjGjBjMjTjFzHjTjZjNjMjJjOjLi
-ZFegdjDjSjPjTjThNjFjOjWhAiBiDiUiJiPiOhdjTjZjNjMjJjOjLhAjWjJjUjFzKjEjFjMjTjZjNjM
-jJjOjLiaFehAjDjSjPjTjThNjFjOjWhAiBiDiUiJiPiOhdjEjFjMjTjZjNjMjJjOjLhAjWjJjUjFnft
-JNnASzMjEjFjQjFjOjEjFjOjDjJjFjTibDWFAnftJPnASzPjEjFjWiEjFjQjFjOjEjFjOjDjJjFjTic
-EWFhBzLiAjCjBjCjFjMhPjDjPjSjFidFeIiehXhOhRhWhOhRhQzhHiAjCjBjCjFjMhPjQjMjVjHjJjO
-hNjQjSjPjQjPjTjBjMhNjDjMjBjTjThNjQjSjPjQjFjSjUjJjFjTieFeHiehXhOhRhWhOhQzhJiAjCj
-BjCjFjMhPjQjMjVjHjJjOhNjQjSjPjQjPjTjBjMhNjPjCjKjFjDjUhNjSjFjTjUhNjTjQjSjFjBjEif
-FeHiehXhOhRhWhOhQzhDiAjCjBjCjFjMhPjQjMjVjHjJjOhNjTjZjOjUjBjYhNjEjZjOjBjNjJjDhNj
-JjNjQjPjSjUjAFeGiehXhOhYhOhTzgfiAjCjBjCjFjMhPjQjMjVjHjJjOhNjUjSjBjOjTjGjPjSjNhN
-jSjVjOjUjJjNjFjBFeHiehXhOhRhWhOhUzRiAjCjBjCjFjMhPjQjSjFjTjFjUhNjFjOjWjCFeHiehXh
-OhRhWhOhUzTiAjCjBjCjFjMhPjQjSjFjTjFjUhNjSjFjBjDjUjDFeHiehXhOhRhWhOhQzYiAjCjBjCj
-FjMhPjQjSjFjTjFjUhNjUjZjQjFjTjDjSjJjQjUjEFeHiehXhOhRhWhOhQzOiAjCjBjCjFjMhPjSjVj
-OjUjJjNjFjFFeHiehXhOhRhWhOhTzUiAjSjPjMjMjVjQhPjQjMjVjHjJjOhNjCjBjCjFjMjGFeGiehV
-hOhThOhRzXiAjSjPjMjMjVjQhPjQjMjVjHjJjOhNjDjPjNjNjPjOjKjTjHFeHiehShRhOhQhOhSzUiA
-jSjPjMjMjVjQhPjQjMjVjHjJjOhNjJjNjBjHjFjIFeGiehShOhRhOhRzTiAjSjPjMjMjVjQhPjQjMjV
-jHjJjOhNjKjTjPjOjJFeGiehUhOhRhOhQzgbiAjSjPjMjMjVjQhPjQjMjVjHjJjOhNjOjPjEjFhNjSj
-FjTjPjMjWjFjKFeHiehRhThOhRhOhTzWiAjSjPjMjMjVjQhPjQjMjVjHjJjOhNjSjFjQjMjBjDjFjLF
-eGiehUhOhQhOhQzgciAjTjWjFjMjUjFjKjThPjWjJjUjFhNjQjMjVjHjJjOhNjTjWjFjMjUjFjMFeOi
-ehRhOhQhOhQhNjOjFjYjUhOhThQzPiAjUjZjQjFjThPjGjThNjFjYjUjSjBjNFeHiehZhOhQhOhRhTz
-LiAjUjZjQjFjThPjOjPjEjFjOFeIiehRhWhOhRhRhOhXzUiAjUjZjQjFjThPjUjSjVjTjUjFjEhNjUj
-ZjQjFjTjPFeGiehShOhQhOhSzQjCjBjCjFjMhNjQjSjFjTjFjUhNjFjOjWjQFeGiehRhOhXhOhQzHjD
-jPjSjFhNjKjTjRFeBhTzJjDjSjPjTjThNjFjOjWjSFeGiehXhOhQhOhTzIjGjThNjFjYjUjSjBjTFeH
-iehRhQhOhQhOhQzGjSjJjNjSjBjGjUFeGiehThOhQhOhSzGjSjPjMjMjVjQjVFeHiehShOhWhYhOhQz
-ZjSjPjMjMjVjQhNjQjMjVjHjJjOhNjNjVjMjUjJhNjJjOjQjVjUjWFeGiehRhOhThOhRzXjSjPjMjMj
-VjQhNjQjMjVjHjJjOhNjOjPjEjFhNjDjPjQjZjXFeGiehRhOhQhOhUzPjUjZjQjFjThNjGjPjShNjBj
-EjPjCjFjYFeGiehXhOhQhOhQzWjUjZjQjFjThNjGjPjShNjBjEjPjCjFhNjFjYjUjSjBjTjZFeGiehQ
-hOhQhOhRzKjUjZjQjFjTjDjSjJjQjUjaFeGiehUhOhUhOhUzEjWjJjUjFjbFeGiehShOhZhOhRzPjWj
-JjUjFhNjDjFjQhNjQjMjVjHjJjOjcFeGiehQhOhShOhYzEjZjBjSjOjdFeIiehRhOhShShOhRhXnftJ
-hSnASzGjNjBjJjOhEhRjeFneIjJjOjEjFjYhOjKjTftJhTnASzHjMjJjDjFjOjTjFjfGneDiNiJiUft
-JhUnASzIifjQjBjDjLjBjHjFkAHWFHiRViRfAiSViSfBiTViTfCibVibfDicVicfEzEjNjBjJjOkBVj
-efFjfVjffGnftJhenASzGjDjPjOjGjJjHkCIWFXiSViSfBzCjJjEkDFeLjDjPjNhOjCjPjMjUhOjFjT
-zLjEjJjTjQjMjBjZiOjBjNjFkEFeHiCjPjMjUhAiFiTiZFeFjMjPjDjBjMzEjQjPjSjUkFFd2lYLzJj
-TjFjSjWjFiQjPjSjUkGFd2kITzRjTjUjBjSjUjJjOjHiEjFjCjVjHiQjPjSjUkHFd2kchCzYjFjYjUj
-FjOjTjJjPjOiNjBjOjJjGjFjTjUiWjFjSjTjJjPjOkIFdGzWjSjFjRjVjJjSjFjEiSjVjOjUjJjNjFi
-WjFjSjTjJjPjOkJFdJzFjIjPjTjUjTkKARCWFCiRFeEiBiFiGiUiSFeKibhQhOhQhMhZhZhOhZidWFC
-iRFeEiJiMiTiUiSFeKibhQhOhQhMhZhZhOhZidfzEjUjZjQjFkLFeFiQjBjOjFjMzOjJjDjPjOiEjBj
-SjLiOjPjSjNjBjMkMFegbhOhPjTjSjDhPjBjTjTjFjUjThPjMjJjHjIjUhNjJjDjPjOhOjQjOjHzKjJ
-jDjPjOiOjPjSjNjBjMkNFegahOhPjTjSjDhPjBjTjTjFjUjThPjEjBjSjLhNjJjDjPjOhOjQjOjHzWj
-JjDjPjOiEjBjSjLiOjPjSjNjBjMiSjPjMjMiPjWjFjSkOFegbhOhPjTjSjDhPjBjTjTjFjUjThPjMjJ
-jHjIjUhNjJjDjPjOhOjQjOjHzSjJjDjPjOiOjPjSjNjBjMiSjPjMjMiPjWjFjSkPFegahOhPjTjSjDh
-PjBjTjTjFjUjThPjEjBjSjLhNjJjDjPjOhOjQjOjHzKjQjBjSjBjNjFjUjFjSjTkQARCFePhNhNjFjO
-jBjCjMjFhNjOjPjEjFjKjTFePhNhNjNjJjYjFjEhNjDjPjOjUjFjYjUfzFjXjJjEjUjIkRFd2nUBzGj
-IjFjJjHjIjUkSFd2hGCzGjQjBjOjFjMjTkTARBWFGzIjNjBjJjOiQjBjUjIkUFeRhOhPjNjBjJjOhPj
-JjOjEjFjYhOjIjUjNjMiRFeEjNjBjJjOzQjQjBjOjFjMiEjJjTjQjMjBjZiOjBjNjFkVFeIiCjPjMjU
-hAiDiFiQzLjBjVjUjPiWjJjTjJjCjMjFkWFctkRFd2iYCkSFd2kKCfiYWFCzGjKjTjYiCjJjOkXFeEj
-DjPjQjZzJjTjPjVjSjDjFiNjBjQkYFctzDjajYjQkZWFHzHjDjPjVjOjUjSjZkaFeCiViTzIjQjSjPj
-WjJjOjDjFkbFeCiDiBzDjPjSjHkcFeJiNjZiDjPjNjQjBjOjZzIjQjBjTjTjXjPjSjEkdFeKjNjZjQj
-BjTjTjXjPjSjEzDjUjTjBkeFegejIjUjUjQhahPhPjUjJjNjFjTjUjBjNjQhOjEjJjHjJjDjFjSjUhO
-jDjPjNhPkYFcfkXFeHjSjFjQjMjBjDjFzOjJjOjTjUjBjMjMiNjPjEjVjMjFjTkfAnzKjDjPjQjZiBj
-TjTjFjUjTlAAnnftJjQnASzCjOjTlBJXkDfVkCfInftJjSnASzFifjUjIjJjTlCKVzHjUjIjJjTiPjC
-jKlDfSnftJjUnASzGjJjOjJjUhEhSlELNyBnAMjUbyBn0AKJjVnASzLjQjBjOjFjMiHjMjPjCjBjMlF
-AjlCfnftJjWnASzGjEjJjBjMjPjHlGBdCzKjJjOjTjUjBjOjDjFjPjGlHVlFfAjzFiQjBjOjFjMlIfn
-nVlFfAEjzGiXjJjOjEjPjXlJfRBFeHjQjBjMjFjUjUjFftnftOjXJjXnABXiPfVlGfBneGiEjJjBjMj
-PjHfAhhBClHVlFfAjlIfnnnJjYnASzHjCjVjUjUjPjOhRlKCEXzDjBjEjElLfVlGfBREFeGjCjVjUjU
-jPjOjzJjVjOjEjFjGjJjOjFjElMfjlMfWFBiRFeHjCjVjUjUjPjOhRffnftJjbnABXiPfVlKfCneLiI
-jFjMjMjPhAiXjPjSjMjEfJjdnABXzHjPjOiDjMjJjDjLlNfVlKfCNyBnAMjdbyBn0ABJjenAEjzFjBj
-MjFjSjUlOfRBFeZiIjFjMjMjPhAjGjSjPjNhAiBjGjUjFjShAiFjGjGjFjDjUjThBff0DSCjfnfJkBn
-AEXzGjMjBjZjPjVjUlPfXlPfVlGfBRBFctffJkCnAEXzGjSjFjTjJjajFlQfXlPfVlGfBnfJkEnABXz
-KjPjOiSjFjTjJjajJjOjHlRfVlGfBBXzIjPjOiSjFjTjJjajFlSfVlGfBNyBnAMkEbyBn0ABJkFnAEX
-lQfXlPfeLfnf0DSCkGnfnfOkIJkInAEXzEjTjIjPjXlTfVlGfBnfAClHVlGfBjlJfnnnADlF40BiAlG
-4B0AiAlK4C0AiAADAzEjJjOjJjUlUCkJnftJkLnASzEjBjFjGjUlVMWFCzJififjQjSjPjUjPififlW
-FblUVlEfLnftJkQnASzGjJjOjJjUhEhRlXNNyBnAMkQbyBn0AFJkRnASlGAEjlJfRCFeGjEjJjBjMjP
-jHFeHiCjPjMjUhAiFiTftnftJkSnASzDjCjUjOlYBEXlLfVlGfAREFeGjCjVjUjUjPjOjlMfjlMfWFB
-iRFeDjCjUjOffnftJkVnABXiPfVlYfBneLiIjFjMjMjPhAiXjPjSjMjEfJkXnABXlNfVlYfBNyBnAMk
-XbyBn0ABJkYnAEjlOfRBFeWiIjFjMjMjPhAjGjSjPjNhAiJjMjMjVjTjUjSjBjUjPjSff0DSCkZnfJk
-bnAEXlTfVlGfAnfAClG40BiAlY4B0AiAACAlUCkcnftJkenASzEjJjMjTjUlZOWFClWFblUVlXfNnft
-JlDnASlUPNyBnAMlDbyBn0AFJlEnASlGAEjlJfRCFeGjEjJjBjMjPjHFeHiCjPjMjUhAiFiTftnftJl
-FnASlYBEXlLfVlGfAREFeGjCjVjUjUjPjOjlMfjlMfWFBiRFeDjCjUjOffnftJlInABXiPfVlYfBneL
-iIjFjMjMjPhAiXjPjSjMjEfJlKnABXlNfVlYfBNyBnAMlKbyBn0ABJlLnAEjlOfRBFeUiIjFjMjMjPh
-AjGjSjPjNhAiQjIjPjUjPjTjIjPjQff0DSClMnfJlOnAEXlTfVlGfAnfAClG40BiAlY4B0AiAACAlUC
-lPnftJlRnASzEjQjIjYjTlaQWFClWFblUVlUfPnftclYnAXzHjBjQjQiOjBjNjFlbfjzKiCjSjJjEjH
-jFiUjBjMjLlcfDRBFeMjBjGjUjFjSjFjGjGjFjDjUjTfRBFeLjJjMjMjVjTjUjSjBjUjPjSfRBFeJjQ
-jIjPjUjPjTjIjPjQfDblan0ADJlanASkBRVlVfMnffJlbnAEXlUfVkBfRnfDlcnAStblfn0ADJlfnAS
-kBRVlZfOnffJmAnAEXlUfVkBfRnfDmBnAStbmEn0ADJmEnASkBRVlafQnffJmFnAEXlUfVkBfRnfDmG
-nAStJmLnABQSfjzBhEldfVlBfJVkBfRnfATlZ4O0AiAla4Q0AiAiT4C0AiAlU4P0AiAib4D0AiAic4E
-0AiAje4F0AiAjf4G0AiAkA4H0AiAkC4I0AiAiS4B0AiAkB4R0AiAiR40BiAlB4J0AiAlC4K0AiAlE4L
-0AiAlD40BhAlV4M0AiAlX4N0AiABSASCmMRBeLfff0DSByB
\ No newline at end of file
diff --git a/node_modules/vite-cep-plugin/lib/.tmp/co.hyperbrew.klutz-gpt-cert b/node_modules/vite-cep-plugin/lib/.tmp/co.hyperbrew.klutz-gpt-cert
deleted file mode 100644
index 56384ea..0000000
Binary files a/node_modules/vite-cep-plugin/lib/.tmp/co.hyperbrew.klutz-gpt-cert and /dev/null differ
diff --git a/node_modules/vite-cep-plugin/lib/.tmp/com._test-react-cep.cep-cert b/node_modules/vite-cep-plugin/lib/.tmp/com._test-react-cep.cep-cert
deleted file mode 100644
index e697069..0000000
Binary files a/node_modules/vite-cep-plugin/lib/.tmp/com._test-react-cep.cep-cert and /dev/null differ
diff --git a/node_modules/vite-cep-plugin/lib/.tmp/com._test-svelte.cep-cert b/node_modules/vite-cep-plugin/lib/.tmp/com._test-svelte.cep-cert
deleted file mode 100644
index fe84b95..0000000
Binary files a/node_modules/vite-cep-plugin/lib/.tmp/com._test-svelte.cep-cert and /dev/null differ
diff --git a/node_modules/vite-cep-plugin/lib/.tmp/com.aescripts.proio-cert.p12 b/node_modules/vite-cep-plugin/lib/.tmp/com.aescripts.proio-cert.p12
deleted file mode 100644
index c53137c..0000000
Binary files a/node_modules/vite-cep-plugin/lib/.tmp/com.aescripts.proio-cert.p12 and /dev/null differ
diff --git a/node_modules/vite-cep-plugin/lib/.tmp/com.ancillarypost.premiereqc-cert b/node_modules/vite-cep-plugin/lib/.tmp/com.ancillarypost.premiereqc-cert
deleted file mode 100644
index f5c25db..0000000
Binary files a/node_modules/vite-cep-plugin/lib/.tmp/com.ancillarypost.premiereqc-cert and /dev/null differ
diff --git a/node_modules/vite-cep-plugin/lib/.tmp/com.bolt.cep-cert b/node_modules/vite-cep-plugin/lib/.tmp/com.bolt.cep-cert
deleted file mode 100644
index ea53c69..0000000
Binary files a/node_modules/vite-cep-plugin/lib/.tmp/com.bolt.cep-cert and /dev/null differ
diff --git a/node_modules/vite-cep-plugin/lib/.tmp/com.bolt.cep-cert.p12 b/node_modules/vite-cep-plugin/lib/.tmp/com.bolt.cep-cert.p12
deleted file mode 100644
index b43937f..0000000
Binary files a/node_modules/vite-cep-plugin/lib/.tmp/com.bolt.cep-cert.p12 and /dev/null differ
diff --git a/node_modules/vite-cep-plugin/lib/.tmp/com.hyperbrew.versionraptor-cert b/node_modules/vite-cep-plugin/lib/.tmp/com.hyperbrew.versionraptor-cert
deleted file mode 100644
index db2e56d..0000000
Binary files a/node_modules/vite-cep-plugin/lib/.tmp/com.hyperbrew.versionraptor-cert and /dev/null differ
diff --git a/node_modules/vite-cep-plugin/lib/.tmp/com.openclassrooms.edit-assist-cert.p12 b/node_modules/vite-cep-plugin/lib/.tmp/com.openclassrooms.edit-assist-cert.p12
deleted file mode 100644
index 984d901..0000000
Binary files a/node_modules/vite-cep-plugin/lib/.tmp/com.openclassrooms.edit-assist-cert.p12 and /dev/null differ
diff --git a/node_modules/vite-cep-plugin/lib/.tmp/index.js b/node_modules/vite-cep-plugin/lib/.tmp/index.js
deleted file mode 100644
index 8629d68..0000000
--- a/node_modules/vite-cep-plugin/lib/.tmp/index.js
+++ /dev/null
@@ -1,196 +0,0 @@
-(function (thisObj) {// ----- EXTENDSCRIPT INCLUDES ------ //"object"!=typeof JSON&&(JSON={}),function(){"use strict";var rx_one=/^[\],:{}\s]*$/,rx_two=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,rx_three=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,rx_four=/(?:^|:|,)(?:\s*\[)+/g,rx_escapable=/[\\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,rx_dangerous=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta,rep;function f(t){return t<10?"0"+t:t}function this_value(){return this.valueOf()}function quote(t){return rx_escapable.lastIndex=0,rx_escapable.test(t)?'"'+t.replace(rx_escapable,function(t){var e=meta[t];return"string"==typeof e?e:"\\u"+("0000"+t.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+t+'"'}function str(t,e){var r,n,o,u,f,a=gap,i=e[t];switch(i&&"object"==typeof i&&"function"==typeof i.toJSON&&(i=i.toJSON(t)),"function"==typeof rep&&(i=rep.call(e,t,i)),typeof i){case"string":return quote(i);case"number":return isFinite(i)?String(i):"null";case"boolean":case"null":return String(i);case"object":if(!i)return"null";if(gap+=indent,f=[],"[object Array]"===Object.prototype.toString.apply(i)){for(u=i.length,r=0;r<u;r+=1)f[r]=str(r,i)||"null";return o=0===f.length?"[]":gap?"[\n"+gap+f.join(",\n"+gap)+"\n"+a+"]":"["+f.join(",")+"]",gap=a,o}if(rep&&"object"==typeof rep)for(u=rep.length,r=0;r<u;r+=1)"string"==typeof rep[r]&&(o=str(n=rep[r],i))&&f.push(quote(n)+(gap?": ":":")+o);else for(n in i)Object.prototype.hasOwnProperty.call(i,n)&&(o=str(n,i))&&f.push(quote(n)+(gap?": ":":")+o);return o=0===f.length?"{}":gap?"{\n"+gap+f.join(",\n"+gap)+"\n"+a+"}":"{"+f.join(",")+"}",gap=a,o}}"function"!=typeof Date.prototype.toJSON&&(Date.prototype.toJSON=function(){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null},Boolean.prototype.toJSON=this_value,Number.prototype.toJSON=this_value,String.prototype.toJSON=this_value),"function"!=typeof JSON.stringify&&(meta={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},JSON.stringify=function(t,e,r){var n;if(gap="",indent="","number"==typeof r)for(n=0;n<r;n+=1)indent+=" ";else"string"==typeof r&&(indent=r);if(rep=e,e&&"function"!=typeof e&&("object"!=typeof e||"number"!=typeof e.length))throw new Error("JSON.stringify");return str("",{"":t})}),"function"!=typeof JSON.parse&&(JSON.parse=function(text,reviver){var j;function walk(t,e){var r,n,o=t[e];if(o&&"object"==typeof o)for(r in o)Object.prototype.hasOwnProperty.call(o,r)&&(void 0!==(n=walk(o,r))?o[r]=n:delete o[r]);return reviver.call(t,e,o)}if(text=String(text),rx_dangerous.lastIndex=0,rx_dangerous.test(text)&&(text=text.replace(rx_dangerous,function(t){return"\\u"+("0000"+t.charCodeAt(0).toString(16)).slice(-4)})),rx_one.test(text.replace(rx_two,"@").replace(rx_three,"]").replace(rx_four,"")))return j=eval("("+text+")"),"function"==typeof reviver?walk({"":j},""):j;throw new SyntaxError("JSON.parse")})}();// ---------------------------------- //// ----- EXTENDSCRIPT PONYFILLS -----function __objectFreeze(obj) { return obj; }// ---------------------------------- //var version = "0.0.1";
-
-var config = {
-  version: version,
-  id: "com._test-react-cep.cep",
-  displayName: " Test React Cep",
-  symlink: "local",
-  port: 3000,
-  servePort: 5000,
-  startingDebugPort: 8860,
-  extensionManifestVersion: 6.0,
-  requiredRuntimeVersion: 9.0,
-  hosts: [{
-    name: "AEFT",
-    version: "[0.0,99.9]"
-  }, {
-    name: "PPRO",
-    version: "[0.0,99.9]"
-  }, {
-    name: "ILST",
-    version: "[0.0,99.9]"
-  }, {
-    name: "PHXS",
-    version: "[0.0,99.9]"
-  }, {
-    name: "FLPR",
-    version: "[0.0,99.9]"
-  }],
-  type: "Panel",
-  iconDarkNormal: "./src/assets/light-icon.png",
-  iconNormal: "./src/assets/dark-icon.png",
-  iconDarkNormalRollOver: "./src/assets/light-icon.png",
-  iconNormalRollOver: "./src/assets/dark-icon.png",
-  parameters: ["--v=0", "--enable-nodejs", "--mixed-context"],
-  width: 500,
-  height: 550,
-  panels: [{
-    mainPath: "./main/index.html",
-    name: "main",
-    panelDisplayName: " Test React Cep",
-    autoVisible: true,
-    width: 600,
-    height: 650
-  }],
-  build: {
-    jsxBin: "off",
-    sourceMap: true
-  },
-  zxp: {
-    country: "US",
-    province: "CA",
-    org: "MyCompany",
-    password: "mypassword",
-    tsa: "http://timestamp.digicert.com/",
-    sourceMap: false,
-    jsxBin: "replace"
-  },
-  installModules: [],
-  copyAssets: [],
-  copyZipAssets: []
-};
-
-var ns = config.id;
-
-var helloError = function helloError(str) {
-  // Intentional Error for Error Handling Demonstration
-  
-  strr;
-};
-var helloStr = function helloStr(str) {
-  alert("ExtendScript received a string: ".concat(str));
-  return str;
-};
-var helloNum = function helloNum(n) {
-  alert("ExtendScript received a number: ".concat(n.toString()));
-  return n;
-};
-var helloArrayStr = function helloArrayStr(arr) {
-  alert("ExtendScript received an array of ".concat(arr.length, " strings: ").concat(arr.toString()));
-  return arr;
-};
-var helloObj = function helloObj(obj) {
-  alert("ExtendScript received an object: ".concat(JSON.stringify(obj)));
-  return {
-    y: obj.height,
-    x: obj.width
-  };
-};
-
-var helloWorld$4 = function helloWorld() {
-  alert("Hello from After Effects!");
-  app.project.activeItem;
-};
-
-var aeft = /*#__PURE__*/__objectFreeze({
-  __proto__: null,
-  helloError: helloError,
-  helloStr: helloStr,
-  helloNum: helloNum,
-  helloArrayStr: helloArrayStr,
-  helloObj: helloObj,
-  helloWorld: helloWorld$4
-});
-
-var helloWorld$3 = function helloWorld() {
-  alert("Hello from Illustrator");
-  app.activeDocument.path;
-};
-
-var ilst = /*#__PURE__*/__objectFreeze({
-  __proto__: null,
-  helloError: helloError,
-  helloStr: helloStr,
-  helloNum: helloNum,
-  helloArrayStr: helloArrayStr,
-  helloObj: helloObj,
-  helloWorld: helloWorld$3
-});
-
-var helloWorld$2 = function helloWorld() {
-  alert("Hello from Animate");
-};
-
-var anim = /*#__PURE__*/__objectFreeze({
-  __proto__: null,
-  helloWorld: helloWorld$2
-});
-
-var qeDomFunction = function qeDomFunction() {
-  if (typeof qe === "undefined") {
-    app.enableQE();
-  }
-  if (qe) {
-    qe.name;
-    qe.project.getVideoEffectByName("test");
-  }
-};
-var helloWorld$1 = function helloWorld() {
-  alert("Hello from Premiere Pro.");
-};
-
-var ppro = /*#__PURE__*/__objectFreeze({
-  __proto__: null,
-  helloError: helloError,
-  helloStr: helloStr,
-  helloNum: helloNum,
-  helloArrayStr: helloArrayStr,
-  helloObj: helloObj,
-  qeDomFunction: qeDomFunction,
-  helloWorld: helloWorld$1
-});
-
-var helloWorld = function helloWorld() {
-  app.activeDocument;
-  alert("Hello from Photoshop");
-};
-
-var phxs = /*#__PURE__*/__objectFreeze({
-  __proto__: null,
-  helloError: helloError,
-  helloStr: helloStr,
-  helloNum: helloNum,
-  helloArrayStr: helloArrayStr,
-  helloObj: helloObj,
-  helloWorld: helloWorld
-});
-
-var main;
-switch (BridgeTalk.appName) {
-  case "premierepro":
-  case "premiereprobeta":
-    main = ppro;
-    break;
-  case "aftereffects":
-  case "aftereffectsbeta":
-    main = aeft;
-    break;
-  case "illustrator":
-  case "illustratorbeta":
-    main = ilst;
-    break;
-  case "photoshop":
-  case "photoshopbeta":
-    main = phxs;
-    break;
-  default:
-    
-    if (app.appName === "Adobe Animate") {
-      main = anim;
-    }
-    break;
-}
-
-var host = typeof $ !== "undefined" ? $ : window;
-host[ns] = main;
-})(this);
\ No newline at end of file
diff --git a/node_modules/vite-cep-plugin/lib/.tmp/index.jsxbin b/node_modules/vite-cep-plugin/lib/.tmp/index.jsxbin
deleted file mode 100644
index f68fcff..0000000
--- a/node_modules/vite-cep-plugin/lib/.tmp/index.jsxbin
+++ /dev/null
@@ -1,132 +0,0 @@
-@JSXBIN@ES@2.0@MyBbyBn0ABJmLnAENyBnAMAbyBnABMFbyBn0ABZFnAVzDjPjCjKBf0ABB40BhAB0A
-zOififjPjCjKjFjDjUiGjSjFjFjajFCAFXbyCn0ACJCnAUzChGhGDCzChBhdEnizGjUjZjQjFjPjGFj
-zEiKiTiPiOGfeGjPjCjKjFjDjUnBjGfWzGiPjCjKjFjDjUHAnfnnJyCnAENyBnAMCbyBnAEMCbyBn0A
-BZyCnAdCzBhcIVzBjUJfAnndKCzBhLKnVJfAeBhQnVJf0ABJ40BhAB0AzBjGLACMCbyBn0ABZyCnAEX
-zHjWjBjMjVjFiPjGMfezEjUjIjJjTNfnf0DzKjUjIjJjTifjWjBjMjVjFOACMCbyBn0ABZyCnARCBXz
-JjMjBjTjUiJjOjEjFjYPfjzMjSjYifjFjTjDjBjQjBjCjMjFQfndAfdEXzEjUjFjTjURfjQfRBVJfAf
-fCKCKnEXzHjSjFjQjMjBjDjFSfVJfARCjQfNyBnAMCbyBn0ACJyCnASzBjFTAQzAUfjzEjNjFjUjBVf
-VJfBnftZyCnAdCzChdhdWniFVTfAeGjTjUjSjJjOjHnVTfACKnEXzFjTjMjJjDjFXfCKnEXzIjUjPiT
-jUjSjJjOjHYfEXzKjDjIjBjSiDjPjEjFiBjUZfVJfBRBFdAffRBFdQffeEhQhQhQhQnRBFdyEffeCic
-jVnACJ40BhAT40BiABBAUCCffeBhCnnneBhCCKCKnVJfAeBhCnnneBhCtABJ40BhAB0AzFjRjVjPjUj
-FgaACMCbyBn0ACbyCn0ACJyCnASzBjBgbFjzDjHjBjQgcfnftJyCnASzBjJgdGQUfVTfIVJfHnftcyC
-nARDUDUDUDVgdfGCWniFVgdfGeGjPjCjKjFjDjUnnnCWniFXzGjUjPiKiTiPiOgefVgdfGeIjGjVjOj
-DjUjJjPjOnnnSgdGEXgefVgdfGRBVJfHffnffnnUDCWniFjzDjSjFjQgffeIjGjVjOjDjUjJjPjOnSg
-dGEXzEjDjBjMjMhAfjgffRDVTfIVJfHVgdfGffnffnniFVgdfGtERBFeGjTjUjSjJjOjHfRBFeGjOjV
-jNjCjFjSfRCFeHjCjPjPjMjFjBjOFeEjOjVjMjMfRBFeGjPjCjKjFjDjUfEbyCn0ABZyCnAEjgafRBV
-gdfGffbyCn0ABZyCnAdEjzIjJjTiGjJjOjJjUjFhBfRBVgdfGffEjzGiTjUjSjJjOjHhCfRBVgdfGff
-FeEjOjVjMjMbyCn0ABZyCnAEjhCfRBVgdfGffbyCn0AEOyCZyCnAFeEjOjVjMjMAhzBhBhDVgdfGnOy
-CbyCn0ACKyCJyCnABQUfVLfEVzBjShEfAUzCjcjchFEjzDjTjUjShGfRCVhEfAVgdfGffnneEjOjVjM
-jMnfARCSzBjVhHDXzGjMjFjOjHjUjIhIfVgdfGnffShEAndAfftCIVhEfAVhHfDnnShEACKnnndBntf
-ZyCnARDSzBjPhJCddCzDhdhdhdhKnXhIfVLfEdAnFeCibidjgcfCKCKCKCKCKnjgcfeCibKnEXzEjKj
-PjJjOhLfVLfERBCKnjgcfeChMKnffnnnneBKVgbfFnnnneBidCKCKnEXhLfVLfERBFeBhMffeBibnnn
-eBidnffBjgcfVgbfFnfVhJfCtARDBjgcfCKnjzGjJjOjEjFjOjUhMfnnntSLEAnnffChKnEXzFjBjQj
-QjMjZhNfXYfXzJjQjSjPjUjPjUjZjQjFhOfjHfRBVgdfGffeOibjPjCjKjFjDjUhAiBjSjSjBjZidnt
-nOyCKyCJyCnAUDUDCWniFQUfjgffVhEfAeGjTjUjSjJjOjHnShJCEjhGfRCSzBjOhPBQUfjgffVhEfA
-nffVgdfGffnffnnEXzEjQjVjTjIhQfVLfERBCKCKEjgafRBVhPfBffdjgcfFeChahAFeBhannVhJfCn
-nffnnARCShHDXhIfjgffnffShEAndAfftCIVhEfAVhHfDnnShEACKnnndBntfAUDjgffCWniFjgffeG
-jPjCjKjFjDjUnnnLyCJyCnAUDUDEXhAfXzOjIjBjTiPjXjOiQjSjPjQjFjSjUjZhRfXhOfjHfRCVgdf
-GVhPfBffShJCEjhGfRCVhPfBVgdfGffnffnnEXhQfVLfERBCKCKEjgafRBVhPfBffdjgcfFeChahAFe
-BhannVhJfCnnffnnAVhPfBVgdfGyBUfZyCnARDShJCddChKnXhIfVLfEdAnFeCjbjdjgcfCKCKCKCKC
-KnjgcfeCjbKnEXhLfVLfERBCKnjgcfeChMKnffnnnneBKVgbfFnnnneBjdCKCKnEXhLfVLfERBFeBhM
-ffeBjbnnneBjdnffBjgcfVgbfFnfVhJfCtAJgd4G0AiAJ40BhAL4E0AiAT4B0AhAhE40BiAhP4B0AiA
-gb4F0AiAhJ4C0AiAhH4D0AiACHAhGACDJyCnAFeKjVjTjFhAjTjUjSjJjDjUbyCn0AGJyCnASzGjSjY
-ifjPjOjFhSAYNieibicidhMhajbjdicjTidhKhEAnftJyCnASzGjSjYifjUjXjPhTBYhCicichIhfha
-ibhCicicichPjCjGjOjSjUidjcjVibhQhNhZjBhNjGiBhNiGidjbhUjdhJBjHnftJyCnASzIjSjYifj
-UjIjSjFjFhUCYhfhCibiehCicicicjOicjSidhKhCjcjUjSjVjFjcjGjBjMjTjFjcjOjVjMjMjchNhf
-icjEhLhIhfhaichOicjEhKhJhfhIhfhaibjFiFidibhLichNidhficjEhLhJhfBjHnftJyCnASzHjSj
-YifjGjPjVjShVDYThIhfhaiejchajchMhJhIhfhaicjThKicibhJhLBjHnftJyCnASQEYjfibicicic
-hCicjVhQhQhQhQhNicjVhQhQhRjGicjVhQhQhXjGhNicjVhQhQhZjGicjVhQhQjBjEicjVhQhWhQhQh
-NicjVhQhWhQhUicjVhQhXhQjGicjVhRhXjChUicjVhRhXjChVicjVhShQhQjDhNicjVhShQhQjGicjV
-hShQhShYhNicjVhShQhSjGicjVhShQhWhQhNicjVhShQhWjGicjVjGjFjGjGicjVjGjGjGhQhNicjVj
-GjGjGjGidBjHnftJyCnASzMjSjYifjEjBjOjHjFjSjPjVjThWFYjHibicjVhQhQhQhQicjVhQhQjBjE
-icjVhQhWhQhQhNicjVhQhWhQhUicjVhQhXhQjGicjVhRhXjChUicjVhRhXjChVicjVhShQhQjDhNicj
-VhShQhQjGicjVhShQhShYhNicjVhShQhSjGicjVhShQhWhQhNicjVhShQhWjGicjVjGjFjGjGicjVjG
-jGjGhQhNicjVjGjGjGjGidBjHnftbyCn0ADJyCnAUDCEniFXgefXhOfjzEiEjBjUjFhXfeIjGjVjOjD
-jUjJjPjOnREBXgefXhOfjhXfNyBnAMCbyBn0ABZyCnAdEjhBfRBEXMfeNfnfffCKCKCKCKCKCKCKCKC
-KCKCKEXzOjHjFjUiViUiDiGjVjMjMiZjFjBjShYfeNfnfnneBhNEjLfRBCKEXzLjHjFjUiViUiDiNjP
-jOjUjIhZfeNfnfnndBffnnnneBhNEjLfRBEXzKjHjFjUiViUiDiEjBjUjFhafeNfnfffnnnneBiUEjL
-fRBEXzLjHjFjUiViUiDiIjPjVjSjThbfeNfnfffnnnneBhaEjLfRBEXzNjHjFjUiViUiDiNjJjOjVjU
-jFjThcfeNfnfffnnnneBhaEjLfRBEXzNjHjFjUiViUiDiTjFjDjPjOjEjThdfeNfnfffnnnneBiaFb0
-DUCCnfBXgefXhOfjzHiCjPjPjMjFjBjOhefjOfnfBXgefXhOfjzGiOjVjNjCjFjShffjOfnfBXgefXh
-OfjhCfjOfnftnnJyCnAUDCEniFXzJjTjUjSjJjOjHjJjGjZiAfjGfeIjGjVjOjDjUjJjPjOnRCSVIWH
-HzBIiBFeCicjCzBJiCFeCicjUzBKiDFeCicjOzBMiEFeCicjGzBNiFFeCicjSzBhCiGFeCichCzBici
-HFeCicicnffBXiAfjGfNyBnAMCbyBn0ADOyCayCJyCnABjhMfCKnnneBhAntAVhPf0AVhEfDByBIARD
-BjgcfneAfBjhMfneAfCWniFVhEfDeGjOjVjNjCjFjSntJyCnAUDCWniFVhEfDeGjTjUjSjJjOjHnBjh
-MfVhEfDnfnnOyCfyCnAEjzFiFjSjSjPjSiIfRBFeOiKiTiPiOhOjTjUjSjJjOjHjJjGjZftARCBjgff
-VTfCnfUDUDVTfCCEniFVTfCeIjGjVjOjDjUjJjPjOnnnUhFCEniFVTfCeGjPjCjKjFjDjUnCEniFXhI
-fVTfCeGjOjVjNjCjFjSnnnnntnZyCnAEjhGfRCFeAWHBUVJfBffAEJ40BhAT4B0AhAhE4C0AhAhP40B
-iADBAUCCnftnnJyCnAUDCEniFXzFjQjBjSjTjFiJfjGfeIjGjVjOjDjUjJjPjOnBXiJfjGfNyBnAMCb
-yBnABMCbyBn0ADJyCnAShJCQUfVJfDVTfEnftOyCLyCJyCnAUDEXhAfXhRfXhOfjHfRCVhJfCVhEfAf
-fdCzDhBhdhdiKhzEjWjPjJjEiLFdAShPBEjzEjXjBjMjLiMfRCVhJfCVhEfAffnffnnBQUfVhJfCVhE
-fAVhPfBnfizGjEjFjMjFjUjFiNQUfVhJfCVhEfAnnAVhEfAVhJfCyBUfAUDVhJfCCWniFVhJfCeGjPj
-CjKjFjDjUnnnnZyCnAEXhAfjzHjSjFjWjJjWjFjSiOfRDVJfDVTfEVhJfCffAFJ40BhAT4B0AhAhE40
-BiAhP4B0AiAhJ4C0AiACDAiMACCOyCZyCnARCSzBjKiPAEjzEjFjWjBjMiQfRBCKCKnVzEjUjFjYjUi
-RfBeBhInnneBhJffnffdCWniFViOfCeIjGjVjOjDjUjJjPjOnEjiMfRCWHBUViPfAFeAffViPfAtARE
-SiRBEjhCfRBViRfBffnffBXPfjhWfndAfUDEXRfjhWfRBViRfBffSiRBEXSfViRfBRCjhWfNyBnAMCb
-yBn0ABZyCnACKnEXXfCKnEXYfEXZfVJfARBFdAffRBFdQffeEhQhQhQhQnRBFdyEffeCicjVnABJ40B
-hAB0AUCCffnffnnEXRfjhSfRBEXSfEXSfEXSfViRfBRCjhTfFeBiAffRCjhUfFeBidffRCjhVfFeAff
-fftnfyCnAEjzLiTjZjOjUjBjYiFjSjSjPjSiSfRBFeKiKiTiPiOhOjQjBjSjTjFftADiP40BiAiR40B
-hAiO4B0AhACBAUCCnfnnAKhS40BiAhT4B0AiAhU4C0AiAhV4D0AiAQ4E0AiAhW4F0AiAgc4G0AiAhM4
-H0AiAV4I0AiAgf4J0AiAAKAUCCnfJHnASzHjWjFjSjTjJjPjOiTAneFhQhOhQhOhRftJJnASzGjDjPj
-OjGjJjHiUBWHYiTViTfAzCjJjEiVFeXjDjPjNhOifjUjFjTjUhNjSjFjBjDjUhNjDjFjQhOjDjFjQzL
-jEjJjTjQjMjBjZiOjBjNjFiWFePhAiUjFjTjUhAiSjFjBjDjUhAiDjFjQzHjTjZjNjMjJjOjLiXFeFj
-MjPjDjBjMzEjQjPjSjUiYFd2lYLzJjTjFjSjWjFiQjPjSjUiZFd2kITzRjTjUjBjSjUjJjOjHiEjFjC
-jVjHiQjPjSjUiaFd2kchCzYjFjYjUjFjOjTjJjPjOiNjBjOjJjGjFjTjUiWjFjSjTjJjPjOibFdGzWj
-SjFjRjVjJjSjFjEiSjVjOjUjJjNjFiWjFjSjTjJjPjOicFdJzFjIjPjTjUjTidARFWHCzEjOjBjNjFi
-eFeEiBiFiGiUiTFeKibhQhOhQhMhZhZhOhZidWHCieFeEiQiQiSiPiTFeKibhQhOhQhMhZhZhOhZidW
-HCieFeEiJiMiTiUiTFeKibhQhOhQhMhZhZhOhZidWHCieFeEiQiIiYiTiTFeKibhQhOhQhMhZhZhOhZ
-idWHCieFeEiGiMiQiSiTFeKibhQhOhQhMhZhZhOhZidfzEjUjZjQjFifFeFiQjBjOjFjMzOjJjDjPjO
-iEjBjSjLiOjPjSjNjBjMjAFegbhOhPjTjSjDhPjBjTjTjFjUjThPjMjJjHjIjUhNjJjDjPjOhOjQjOj
-HzKjJjDjPjOiOjPjSjNjBjMjBFegahOhPjTjSjDhPjBjTjTjFjUjThPjEjBjSjLhNjJjDjPjOhOjQjO
-jHzWjJjDjPjOiEjBjSjLiOjPjSjNjBjMiSjPjMjMiPjWjFjSjCFegbhOhPjTjSjDhPjBjTjTjFjUjTh
-PjMjJjHjIjUhNjJjDjPjOhOjQjOjHzSjJjDjPjOiOjPjSjNjBjMiSjPjMjMiPjWjFjSjDFegahOhPjT
-jSjDhPjBjTjTjFjUjThPjEjBjSjLhNjJjDjPjOhOjQjOjHzKjQjBjSjBjNjFjUjFjSjTjEARDFeFhNh
-NjWhdhQFePhNhNjFjOjBjCjMjFhNjOjPjEjFjKjTFePhNhNjNjJjYjFjEhNjDjPjOjUjFjYjUfzFjXj
-JjEjUjIjFFd2nUBzGjIjFjJjHjIjUjGFd2hGCzGjQjBjOjFjMjTjHARBWHGzIjNjBjJjOiQjBjUjIjI
-FeRhOhPjNjBjJjOhPjJjOjEjFjYhOjIjUjNjMieFeEjNjBjJjOzQjQjBjOjFjMiEjJjTjQjMjBjZiOj
-BjNjFjJFePhAiUjFjTjUhAiSjFjBjDjUhAiDjFjQzLjBjVjUjPiWjJjTjJjCjMjFjKFctjFFd2iYCjG
-Fd2kKCfzFjCjVjJjMjEjLWHCzGjKjTjYiCjJjOjMFeDjPjGjGzJjTjPjVjSjDjFiNjBjQjNFctzDjaj
-YjQjOWHHzHjDjPjVjOjUjSjZjPFeCiViTzIjQjSjPjWjJjOjDjFjQFeCiDiBzDjPjSjHjRFeJiNjZiD
-jPjNjQjBjOjZzIjQjBjTjTjXjPjSjEjSFeKjNjZjQjBjTjTjXjPjSjEzDjUjTjBjTFegejIjUjUjQha
-hPhPjUjJjNjFjTjUjBjNjQhOjEjJjHjJjDjFjSjUhOjDjPjNhPjNFcfjMFeHjSjFjQjMjBjDjFzOjJj
-OjTjUjBjMjMiNjPjEjVjMjFjTjUAnzKjDjPjQjZiBjTjTjFjUjTjVAnzNjDjPjQjZiajJjQiBjTjTjF
-jUjTjWAnnftJiFnASzCjOjTjXCXiVfViUfBnftJiHnASzKjIjFjMjMjPiFjSjSjPjSjYDNyBnAMiHby
-Bn0ABJiKnAjzEjTjUjSjSjZfABhG40BhAB0AjYCiLnftJiMnASzIjIjFjMjMjPiTjUjSjaENyBnAMiM
-byBn0ACJiNnAEjzFjBjMjFjSjUjbfRBEXzGjDjPjOjDjBjUjcfFehAiFjYjUjFjOjEiTjDjSjJjQjUh
-AjSjFjDjFjJjWjFjEhAjBhAjTjUjSjJjOjHhahARBVhGfAffffZiOnAVhGf0ABhG40BhAB0AjaCiPnf
-tJiQnASzIjIjFjMjMjPiOjVjNjdFNyBnAMiQbyBn0ACJiRnAEjjbfRBEXjcfFehAiFjYjUjFjOjEiTj
-DjSjJjQjUhAjSjFjDjFjJjWjFjEhAjBhAjOjVjNjCjFjShahARBEXYfVhPfAnfffffZiSnAVhPf0ABh
-P40BhAB0AjdCiTnftJiUnASzNjIjFjMjMjPiBjSjSjBjZiTjUjSjeGNyBnAMiUbyBn0ACJiVnAEjjbf
-RBEXjcfEXjcfFehCiFjYjUjFjOjEiTjDjSjJjQjUhAjSjFjDjFjJjWjFjEhAjBjOhAjBjSjSjBjZhAj
-PjGhARCXhIfVzDjBjSjSjffAFeKhAjTjUjSjJjOjHjThahAffRBEXYfVjffAnfffffZiWnAVjff0ABj
-f40BhAB0AjeCiXnftJiYnASzIjIjFjMjMjPiPjCjKkAHNyBnAMiYbyBn0ACJiZnAEjjbfRBEXjcfFeh
-BiFjYjUjFjOjEiTjDjSjJjQjUhAjSjFjDjFjJjWjFjEhAjBjOhAjPjCjKjFjDjUhahARBEXiAfjGfRB
-VBfAffffffZianAWHCzBjZkBXjGfVBfAzBjYkCXjFfVBf0ABB40BhAB0AkACienftJjAnASzMjIjFjM
-jMjPiXjPjSjMjEhEhUkDINyBnAMjAbyBn0ACJjBnAEjjbfRBFeZiIjFjMjMjPhAjGjSjPjNhAiBjGjU
-jFjShAiFjGjGjFjDjUjThBffJjCnAXzKjBjDjUjJjWjFiJjUjFjNkEfXzHjQjSjPjKjFjDjUkFfjzDj
-BjQjQkGf0DzKjIjFjMjMjPiXjPjSjMjEkHCjDnftJjFnASzEjBjFjGjUkIJEjCfRBWHHzJififjQjSj
-PjUjPififkJFbjYVjYfDjaVjafEjdVjdfFjeVjefGkAVkAfHkHVkDfIffnftJjPnASzMjIjFjMjMjPi
-XjPjSjMjEhEhTkKKNyBnAMjPbyBn0ACJjQnAEjjbfRBFeWiIjFjMjMjPhAjGjSjPjNhAiJjMjMjVjTj
-UjSjBjUjPjSffJjRnAXzEjQjBjUjIkLfXzOjBjDjUjJjWjFiEjPjDjVjNjFjOjUkMfjkGf0DkHCjSnf
-tJjUnASzEjJjMjTjUkNLEjCfRBWHHkJFbjYVjYfDjaVjafEjdVjdfFjeVjefGkAVkAfHkHVkKfKffnf
-tJjenASzMjIjFjMjMjPiXjPjSjMjEhEhSkOMNyBnAMjebyBn0ABJjfnAEjjbfRBFeSiIjFjMjMjPhAj
-GjSjPjNhAiBjOjJjNjBjUjFff0DkHCkAnftJkCnASzEjBjOjJjNkPNEjCfRBWHCkJFbkHVkOfMffnft
-JkHnASzNjRjFiEjPjNiGjVjOjDjUjJjPjOkQONyBnAMkHbyBn0ACOkIbykJn0ABJkJnAEXzIjFjOjBj
-CjMjFiRiFkRfjkGfnfAChKiFjzCjRjFkSfnneJjVjOjEjFjGjJjOjFjEnOkLbkMn0ACJkMnAXiefjkS
-fJkNnAEXzUjHjFjUiWjJjEjFjPiFjGjGjFjDjUiCjZiOjBjNjFkTfXkFfjkSfRBFeEjUjFjTjUffAjk
-Sfn0DkQCkPnftJkQnASzMjIjFjMjMjPiXjPjSjMjEhEhRkUPNyBnAMkQbyBn0ABJkRnAEjjbfRBFeYi
-IjFjMjMjPhAjGjSjPjNhAiQjSjFjNjJjFjSjFhAiQjSjPhOff0DkHCkSnftJkUnASzEjQjQjSjPkVQE
-jCfRBWHIkJFbjYVjYfDjaVjafEjdVjdfFjeVjefGkAVkAfHkQVkQfOkHVkUfPffnftJkfnASkHRNyBn
-AMkfbyBn0ACJlAnAXkMfjkGfJlBnAEjjbfRBFeUiIjFjMjMjPhAjGjSjPjNhAiQjIjPjUjPjTjIjPjQ
-ff0DkHClCnftJlEnASzEjQjIjYjTkWSEjCfRBWHHkJFbjYVjYfDjaVjafEjdVjdfFjeVjefGkAVkAfH
-kHVkHfRffnftclPnAXzHjBjQjQiOjBjNjFkXfjzKiCjSjJjEjHjFiUjBjMjLkYfFRCFeLjQjSjFjNjJ
-jFjSjFjQjSjPFePjQjSjFjNjJjFjSjFjQjSjPjCjFjUjBfRCFeMjBjGjUjFjSjFjGjGjFjDjUjTFeQj
-BjGjUjFjSjFjGjGjFjDjUjTjCjFjUjBfRCFeLjJjMjMjVjTjUjSjBjUjPjSFePjJjMjMjVjTjUjSjBj
-UjPjSjCjFjUjBfRCFeJjQjIjPjUjPjTjIjPjQFeNjQjIjPjUjPjTjIjPjQjCjFjUjBfRBnfFblSn0AC
-JlSnASzEjNjBjJjOkZTVkVfQnffDlTnAUtblWn0ACJlWnASkZTVkIfJnffDlXnAUtblan0ACJlanASk
-ZTVkNfLnffDlbnAUtblen0ACJlenASkZTVkWfSnffDlfnAUtbmCn0ACOmCbymDn0ABJmDnASkZTVkPf
-NnffAChKXkXfjkGfnneNiBjEjPjCjFhAiBjOjJjNjBjUjFnDmFnAUtJmInASzEjIjPjTjUkaUdCiKiF
-jzBhEkbfnneJjVjOjEjFjGjJjOjFjEjkbfjzGjXjJjOjEjPjXkcfnftJmJnABQUfVkafUVjXfCVkZfT
-nfAWiU4B0AiAka4U0AiAiT40BiAjX4C0AiAjY4D0AiAkZ4T0AiAja4E0AiAjd4F0AiAje4G0AiAkA4H
-0AiAkD4I0AiAkH4R0AiAkI4J0AiAkK4K0AiAkN4L0AiAkO4M0AiAkP4N0AiAkQ4O0AiAzHjUjIjJjTi
-PjCjKkd40BhAkU4P0AiAkV4Q0AiAkW4S0AiABVAUCmLRBeNfff0DUByB
\ No newline at end of file
diff --git a/node_modules/vite-cep-plugin/lib/bin/.rnd b/node_modules/vite-cep-plugin/lib/bin/.rnd
deleted file mode 100644
index 617095f..0000000
Binary files a/node_modules/vite-cep-plugin/lib/bin/.rnd and /dev/null differ
diff --git a/node_modules/vite-cep-plugin/lib/bin/ZXPSignCmd b/node_modules/vite-cep-plugin/lib/bin/ZXPSignCmd
old mode 100644
new mode 100755
diff --git a/node_modules/vite-cep-plugin/lib/index.js b/node_modules/vite-cep-plugin/lib/index.js
index d09ab68..f7355ce 100644
--- a/node_modules/vite-cep-plugin/lib/index.js
+++ b/node_modules/vite-cep-plugin/lib/index.js
@@ -213,7 +213,21 @@ const cep = (opts) => {
                     //@ts-ignore
                     const filePath = config.build.rollupOptions.input[key];
                     const relativePath = path.relative(config.root, filePath);
-                    const destPath = path.resolve(config.build.outDir, relativePath);
+                    const standardPath = '';
+                    const folderFix = (folder) => {
+                        console.log('folder fix triggered.');
+                        const dummy = 'dummy-non-existing-folder';
+                        const defaultDir = 'dist/cep/';
+                        if (folder == dummy) {
+                            console.log('Dummy folder detected.');
+                            return 'dist/cep/';
+                        }
+                        else {
+                            console.log('Dummy not detected. returning folder: ' + folder);
+                            return folder;
+                        }
+                    };
+                    const destPath = path.resolve(folderFix(config.build.outDir), relativePath);
                     const panelHtmlFile = {
                         type: "asset",
                         source: (0, dev_html_template_1.devHtmlTemplate)(Object.assign(Object.assign({}, cepConfig), { url: `http://localhost:${cepConfig.port}/${(0, lib_1.posix)(relativePath)}`, injectRequire })),
diff --git a/node_modules/vite-cep-plugin/lib/templates/html-template.d.ts b/node_modules/vite-cep-plugin/lib/templates/html-template.d.ts
deleted file mode 100644
index 3d57782..0000000
--- a/node_modules/vite-cep-plugin/lib/templates/html-template.d.ts
+++ /dev/null
@@ -1,7 +0,0 @@
-export declare const htmlTemplate: ({ displayName, debugReact, jsFileName, cssFileNames, injectRequire, }: {
-    displayName: string;
-    debugReact: boolean;
-    jsFileName: string;
-    injectRequire: string;
-    cssFileNames: string[];
-}) => string;
diff --git a/node_modules/vite-cep-plugin/lib/templates/html-template.js b/node_modules/vite-cep-plugin/lib/templates/html-template.js
deleted file mode 100644
index 3ab6603..0000000
--- a/node_modules/vite-cep-plugin/lib/templates/html-template.js
+++ /dev/null
@@ -1,12 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.htmlTemplate = void 0;
-var htmlTemplate = function (_a) {
-    var displayName = _a.displayName, debugReact = _a.debugReact, jsFileName = _a.jsFileName, cssFileNames = _a.cssFileNames, injectRequire = _a.injectRequire;
-    return "\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n    <title>".concat(displayName, "</title>\n    <script>").concat(injectRequire, "</script>\n    ").concat(cssFileNames ? cssFileNames
-        .map(function (file) { return "<link rel=\"stylesheet\" href=\"..".concat(file, "\">"); })
-        .join("\n\t\t") : "", "\n    </head>\n    <body>\n      <div id=\"root\"></div>\n      ").concat(debugReact
-        ? "\n      <!-- React Dev Tools Debugger Connection -->\n      <script src=\"http://localhost:8097\"></script>"
-        : "", "\n      <script src=\"..").concat(jsFileName, "\"></script>\n  </body>\n</html>\n");
-};
-exports.htmlTemplate = htmlTemplate;
diff --git a/node_modules/vite-cep-plugin/scripts/copy-files.js b/node_modules/vite-cep-plugin/scripts/copy-files.js
new file mode 100644
index 0000000..2cd3109
--- /dev/null
+++ b/node_modules/vite-cep-plugin/scripts/copy-files.js
@@ -0,0 +1,6 @@
+var fs = require("fs-extra");
+var path = require("path");
+var src = path.join(process.cwd(), "src", "bin");
+var dst = path.join(process.cwd(), "lib", "bin");
+fs.ensureDirSync(dst);
+fs.copySync(src, dst);
diff --git a/node_modules/vite-cep-plugin/scripts/copy-files.ts b/node_modules/vite-cep-plugin/scripts/copy-files.ts
new file mode 100644
index 0000000..0e6f6e3
--- /dev/null
+++ b/node_modules/vite-cep-plugin/scripts/copy-files.ts
@@ -0,0 +1,8 @@
+//@ts-nocheck
+import * as fs from "fs-extra";
+import * as path from "path";
+
+const src = path.join(process.cwd(), "src", "bin");
+const dst = path.join(process.cwd(), "lib", "bin");
+fs.ensureDirSync(dst);
+fs.copySync(src, dst);
diff --git a/node_modules/vite-cep-plugin/src/bin/ZXPSignCmd b/node_modules/vite-cep-plugin/src/bin/ZXPSignCmd
new file mode 100755
index 0000000..d1a2299
Binary files /dev/null and b/node_modules/vite-cep-plugin/src/bin/ZXPSignCmd differ
diff --git a/node_modules/vite-cep-plugin/src/bin/ZXPSignCmd.exe b/node_modules/vite-cep-plugin/src/bin/ZXPSignCmd.exe
new file mode 100644
index 0000000..123a92d
Binary files /dev/null and b/node_modules/vite-cep-plugin/src/bin/ZXPSignCmd.exe differ
diff --git a/node_modules/vite-cep-plugin/src/cep-config.ts b/node_modules/vite-cep-plugin/src/cep-config.ts
new file mode 100644
index 0000000..ceb775a
--- /dev/null
+++ b/node_modules/vite-cep-plugin/src/cep-config.ts
@@ -0,0 +1,142 @@
+// For more details on Manifest Preferences see:
+// https://github.com/Adobe-CEP/CEP-Resources/blob/master/CEP_11.x/Documentation/CEP%2011.1%20HTML%20Extension%20Cookbook.md
+
+type CEP_Host_Name =
+  | "PHSP"
+  | "PHXS"
+  | "IDSN"
+  | "AICY"
+  | "ILST"
+  | "PPRO"
+  | "PRLD"
+  | "AEFT"
+  | "FLPR"
+  | "AUDT"
+  | "DRWV"
+  | "KBRG"
+  | "AME"
+  | "MUSE"
+  | "LTRM"
+  | "DEMO"
+  | "BRDG"
+  | "RUSH";
+
+type CEP_Host = {
+  name: CEP_Host_Name;
+  version: string;
+};
+
+export type JSXBIN_MODE = "off" | "copy" | "replace";
+
+type CEF_Command =
+  | "--enable-media-stream"
+  | "--enable-speech-input"
+  | "--enable-file-cookies"
+  | "--enable-nodejs"
+  | "--persist-session-cookies"
+  | "--disable-image-loading"
+  | "--disable-javascript-open-windows"
+  | "--disable-javascript-close-windows"
+  | "--disable-javascript-access-clipboard"
+  | "--enable-caret-browsing"
+  | "--proxy-auto-detect"
+  | "--user-agent"
+  | "--disable-application-cache"
+  | "--disable-pinch"
+  | "--mixed-context"
+  | "--allow-file-access"
+  | "--disable-popup-blocking"
+  | "--aggressive-cache-discard"
+  | "--winhttp-proxy-resolver"
+  | "--v=0"
+  | "--v=1"
+  | "--v=2"
+  | "--v=3"
+  | "--v=4"
+  | "--v=5";
+
+type CEP_Panel_Type =
+  | "Panel"
+  | "ModalDialog"
+  | "Modeless"
+  | "Custom"
+  | "Embedded";
+
+export interface CEP_Panel {
+  mainPath: string;
+  name: string;
+  panelDisplayName?: string | null;
+  autoVisible: boolean;
+  width?: number;
+  height?: number;
+  maxWidth?: number;
+  maxHeight?: number;
+  minWidth?: number;
+  minHeight?: number;
+  scriptPath?: string;
+  host?: string;
+  type?: CEP_Panel_Type;
+  id?: string;
+  iconDarkNormal?: string;
+  iconNormal?: string;
+  iconDarkNormalRollOver?: string;
+  iconNormalRollOver?: string;
+  parameters?: CEF_Command[];
+  startOnEvents?: string[];
+}
+
+export interface CEP_Extended_Panel extends CEP_Panel {
+  id: string;
+  parameters: CEF_Command[];
+  type: CEP_Panel_Type;
+}
+
+export interface CEP_Config {
+  port: number;
+  servePort: number;
+  symlink: "local" | "global";
+  startingDebugPort: number;
+  version: string;
+  id: string;
+  displayName: string;
+  extensionManifestVersion: number;
+  requiredRuntimeVersion: number;
+  hosts: CEP_Host[];
+  type: CEP_Panel_Type;
+  iconDarkNormal?: string;
+  iconNormal?: string;
+  iconDarkNormalRollOver?: string;
+  iconNormalRollOver?: string;
+  parameters: CEF_Command[];
+  scriptPath?: string;
+  width?: number;
+  height?: number;
+  maxWidth?: number;
+  maxHeight?: number;
+  minWidth?: number;
+  minHeight?: number;
+  standalone?: boolean;
+
+  panels: CEP_Panel[];
+
+  build?: {
+    sourceMap?: boolean;
+    jsxBin?: JSXBIN_MODE;
+  };
+  zxp: {
+    country: string;
+    province: string;
+    org: string;
+    password: string;
+    tsa: string;
+    sourceMap?: boolean;
+    jsxBin?: JSXBIN_MODE;
+  };
+  installModules?: string[];
+  copyAssets?: string[];
+  copyZipAssets?: string[];
+}
+
+export interface CEP_Config_Extended extends CEP_Config {
+  panels: CEP_Extended_Panel[];
+}
diff --git a/node_modules/vite-cep-plugin/src/copy-node.ts b/node_modules/vite-cep-plugin/src/copy-node.ts
new file mode 100644
index 0000000..1900185
--- /dev/null
+++ b/node_modules/vite-cep-plugin/src/copy-node.ts
@@ -0,0 +1,121 @@
+import * as path from "path";
+import * as fs from "fs-extra";
+
+export const unique = (array: any) => {
+  return array.filter((v: string, i: number, a: string) => a.indexOf(v) === i);
+};
+
+interface NodeSolveArgs {
+  src: string;
+  pkg: string;
+  keepDevDependencies: boolean;
+}
+
+const nodeSolve = ({ src, pkg, keepDevDependencies }: NodeSolveArgs) => {
+  let allDependencies = [pkg];
+  const fullPath = path.join(src, "node_modules", pkg);
+  // console.log(`getting pkgs for ${fullPath}`);
+  const pkgJson = path.join(fullPath, "package.json");
+  if (fs.existsSync(pkgJson)) {
+    const raw = fs.readFileSync(pkgJson, { encoding: "utf-8" });
+    const json = JSON.parse(raw);
+    let { dependencies, devDependencies } = json;
+    const depList = dependencies ? Object.keys(dependencies) : [];
+    const devDepList = devDependencies ? Object.keys(devDependencies) : [];
+    const resDepList = keepDevDependencies
+      ? depList.concat(devDepList)
+      : depList;
+    if (resDepList.length > 0) {
+      allDependencies = allDependencies.concat(resDepList);
+      resDepList.map((name) => {
+        allDependencies = allDependencies.concat(
+          nodeSolve({ src, pkg: name, keepDevDependencies })
+        );
+      });
+    }
+  }
+  return allDependencies || [];
+};
+
+interface CopyModulesArgs {
+  packages: string[];
+  src: string;
+  dest: string;
+  symlink: boolean;
+}
+
+export const copyModules = ({
+  packages,
+  src,
+  dest,
+  symlink,
+}: CopyModulesArgs) => {
+  const allPkg = packages.flatMap((pkg) =>
+    nodeSolve({ src, pkg, keepDevDependencies: false })
+  );
+  const uniqePkg = unique(allPkg);
+  console.log(
+    `Copying ${packages.length} Node Module(s) (${
+      uniqePkg.length
+    } Dependencies) : ${packages.join(",")}`
+  );
+  fs.ensureDirSync(path.join(dest, "node_modules"));
+  uniqePkg.map((pkg: string) => {
+    const fullSrcPath = path.join(process.cwd(), src, "node_modules", pkg);
+    const fullDstPath = path.join(process.cwd(), dest, "node_modules", pkg);
+    fs.ensureDirSync(path.dirname(fullDstPath));
+    if (!symlink) {
+      fs.copySync(fullSrcPath, fullDstPath, {dereference: true});
+    } else {
+      fs.ensureSymlink(fullSrcPath, fullDstPath, "dir");
+    }
+  });
+};
+
+interface CopyFilesArgs {
+  src: string;
+  dest: string;
+  assets: string[];
+}
+
+export const copyFiles = ({ src, dest, assets }: CopyFilesArgs) => {
+  console.log(`Copying ${assets.length} Assets`);
+  // fs.ensureDirSync(path.join(dest, "node_modules"));
+  assets.map((asset: string) => {
+    const fullSrcPath = path.join(src, asset);
+    if (asset.indexOf("/*") === asset.length - 2) {
+      // flatten folder
+      const folder = asset.substring(0, asset.length - 2);
+      const files = fs.readdirSync(path.join(src, folder));
+
+      files.map((file) => {
+        const fullSrcPath = path.join(src, folder, file);
+        const fullDstPath = path.join(dest, file);
+        console.log(`COPY ${fullSrcPath} to ${fullDstPath}`);
+        fs.ensureDirSync(path.dirname(fullDstPath));
+        fs.copySync(fullSrcPath, fullDstPath);
+      });
+    } else {
+      const fullDstPath = path.join(dest, asset);
+      console.log(`COPY ${fullSrcPath} to ${fullDstPath}`);
+      fs.ensureDirSync(path.dirname(fullDstPath));
+      fs.copySync(fullSrcPath, fullDstPath);
+    }
+  });
+};
+
+const rollupNodeCopyPlugin = ({
+  packages,
+  src,
+  dest,
+  symlink,
+}: CopyModulesArgs) => {
+  return {
+    name: "copy-node-modules",
+    buildEnd: async () => {
+      copyModules({ packages, src, dest, symlink });
+    },
+  };
+};
+
+export default rollupNodeCopyPlugin;
diff --git a/node_modules/vite-cep-plugin/src/index.ts b/node_modules/vite-cep-plugin/src/index.ts
new file mode 100644
index 0000000..4f609bd
--- /dev/null
+++ b/node_modules/vite-cep-plugin/src/index.ts
@@ -0,0 +1,697 @@
+import * as os from "os";
+import * as path from "path";
+
+import { Plugin } from "rollup";
+
+import { copyFiles, copyModules, unique } from "./copy-node";
+const jsxbin = require("jsxbin");
+
+import * as fs from "fs-extra";
+const prettifyXml = require("prettify-xml");
+
+// import { requirejs } from "./lib/require-js";
+
+import {
+  log,
+  conColors,
+  posix,
+  resetLog,
+  fixAssetPathCSS,
+  fixAssetPathJS,
+  fixAssetPathHTML,
+  removeModuleTags,
+} from "./lib/lib";
+import { signZXP } from "./lib/zxp";
+import { manifestTemplate } from "./templates/manifest-template";
+import { debugTemplate } from "./templates/debug-template";
+import { devHtmlTemplate } from "./templates/dev-html-template";
+import type { HtmlTagDescriptor, ResolvedConfig } from "vite";
+import { menuHtmlTemplate } from "./templates/menu-html-template";
+import { CEP_Config, CEP_Config_Extended, JSXBIN_MODE } from "./cep-config";
+// export { CEP_Config } from "./cep-config";
+export type { CEP_Config };
+import { nodeBuiltIns } from "./lib/node-built-ins";
+import MagicString from "magic-string";
+import { metaPackage } from "./lib/zip";
+import { packageSync } from "./lib/package-sync";
+
+const homedir = os.homedir();
+const tmpDir = path.join(__dirname, ".tmp");
+fs.ensureDirSync(tmpDir);
+
+const ccGlobalExtensionFolder =
+  os.platform() == "win32"
+    ? "C:/Program Files (x86)/Common Files/Adobe/CEP/extensions"
+    : "/Library/Application Support/Adobe/CEP/extensions/";
+
+const ccLocalExtensionFolder =
+  os.platform() == "win32"
+    ? path.join(homedir, "/AppData/Roaming/Adobe/CEP/extensions")
+    : path.join(homedir, `/Library/Application Support/Adobe/CEP/extensions`);
+
+const makeSymlink = (dist: string, dest: string) => {
+  try {
+    if (symlinkExists(dest)) {
+      if (path.resolve(fs.readlinkSync(dest)) === path.resolve(dist)) {
+        log("symlink already exists", true);
+        return "exists";
+      } else {
+        // incorrect link, remove and re-create
+        fs.unlinkSync(dest);
+      }
+    }
+    fs.mkdirSync(path.dirname(dest), { recursive: true });
+    fs.symlinkSync(dist, dest, "junction");
+    log("symlink created", true);
+    return "created";
+  } catch (e) {
+    console.log(e);
+    log("symlink failed. Try running 'sudo yarn symlink'", false);
+    return "error";
+  }
+};
+
+const removeSymlink = (dist: string, dest: string) => {
+  try {
+    if (symlinkExists(dest)) {
+      fs.unlinkSync(dest);
+      log("symlink removed successfully", true);
+      return "removed";
+    } else {
+      log("no symlink exists", true);
+      return "none";
+    }
+  } catch (e) {
+    log(
+      "symlink removal failed. Try removing with 'sudo yarn delsymlink'",
+      false
+    );
+    return "error";
+  }
+};
+
+const symlinkExists = (dir: string) => {
+  let exists, readlink, lstat;
+  // try {
+  //   exists = fs.existsSync(dir);
+  // } catch (e) {}
+  // try {
+  //   readlink = fs.readlinkSync(dir);
+  // } catch (e) {}
+  try {
+    lstat = fs.lstatSync(dir);
+    exists = true;
+  } catch (e) {
+    exists = false;
+  }
+  return exists;
+};
+
+const injectRequire = fs.readFileSync(
+  path.join(__dirname, "./lib/require-js.js"),
+  {
+    encoding: "utf-8",
+  }
+);
+
+let foundPackages: string[] = [];
+
+interface CepOptions {
+  cepConfig: CEP_Config;
+  dir: string;
+  isProduction: boolean;
+  isPackage: boolean;
+  isMetaPackage: boolean;
+  debugReact: boolean;
+  isServe: boolean;
+  cepDist: string;
+  zxpDir: string;
+  zipDir: string;
+  packages: string[];
+}
+export const cep = (opts: CepOptions) => {
+  const {
+    cepConfig,
+    dir,
+    isProduction,
+    isPackage,
+    isMetaPackage,
+    isServe,
+    debugReact,
+    cepDist,
+    zxpDir,
+    zipDir,
+    packages,
+  } = opts;
+
+  if (cepConfig && cepConfig.panels && isServe) {
+    console.clear();
+    console.log(`${conColors.green}CEP Panels Served at:`);
+    console.log("");
+    cepConfig.panels.map((panel) => {
+      const relativePath = panel.mainPath;
+      const name = panel.name;
+      console.log(
+        `${conColors.white}   > ${name}: ${conColors.cyan}http://localhost:${cepConfig.servePort}/${name}/`
+      );
+    });
+    resetLog();
+    console.log("");
+  }
+
+  return {
+    name: "cep",
+    transformIndexHtml(code: string, opts: any) {
+      const browserRequireIgnore: HtmlTagDescriptor = {
+        tag: "script",
+        children: injectRequire,
+      };
+
+      if (opts && opts.bundle) {
+        Object.keys(opts.bundle).filter((file) => {
+          if (path.extname(file) === ".css") {
+            let newCode = opts.bundle[file].source;
+            if (newCode) {
+              opts.bundle[file].source = fixAssetPathCSS(newCode);
+            } else {
+              console.log("missing code: ", file);
+            }
+          }
+        });
+      }
+
+      // console.log("HTML Transform");
+      const isDev = opts.server !== undefined;
+      if (isDev) {
+        const tags: HtmlTagDescriptor[] = [browserRequireIgnore];
+        return tags;
+      }
+      let cssFileNameMatches = code.match(/(href=\".*.css\")/g);
+      const cssFileNames =
+        cssFileNameMatches &&
+        Array.from(cssFileNameMatches).map((file) =>
+          file.replace('href="', "").replace('"', "")
+        );
+      const jsFileNameMatch = code.match(/(src=\".*.js\")/);
+      const jsFileName =
+        jsFileNameMatch &&
+        //@ts-ignore
+        jsFileNameMatch.pop().replace('src="', "").replace('"', "");
+
+      // TODO: better require transformations
+      //@ts-ignore
+      const jsName = jsFileName.substr(1);
+
+      let newCode = opts.bundle[jsName].code;
+
+      const allRequires = newCode.match(
+        /(require\(\"([A-z]|[0-9]|\.|\/|\-)*\"\)(\;|\,))/g
+      );
+      if (allRequires) {
+        const requireNames = allRequires.map((req: string) =>
+          //@ts-ignore
+          req.match(/(["'])(?:(?=(\\?))\2.)*?\1/)[0].replace(/\"/g, "")
+        );
+        const copyModules = requireNames.filter(
+          (name: string) =>
+            !nodeBuiltIns.includes(name) && ![".", "/", "\\"].includes(name[0])
+        );
+        foundPackages = foundPackages.concat(copyModules);
+      }
+
+      const matches = newCode.match(
+        /(require\(\"\.([A-z]|[0-9]|\.|\/|\-)*\"\)(\;|\,|\)))/g
+      );
+      // console.log(`REQUIRE USED ${matches?.length} times!`);
+      matches?.map((match: string) => {
+        const jsPath = match.match(/\".*\"/);
+        //@ts-ignore
+        const jsBasename = path.basename(jsPath[0]);
+        if (jsPath) {
+          newCode = newCode.replace(
+            match.substring(0, match.length - 1),
+            `typeof cep_node !== 'undefined'?cep_node.require(cep_node.global["__dir"+"name"] + "/assets/${jsBasename}):require("../assets/${jsBasename})`
+          );
+        }
+      });
+      newCode = newCode.replace(
+        `"use strict"`,
+        `"use strict";var exports = typeof exports === "undefined" ? {} : exports;`
+      );
+      opts.bundle[jsName].code = newCode;
+
+      Object.keys(opts.bundle).map((key) => {
+        if (path.extname(key) === ".js") {
+          let { code, source } = opts.bundle[key];
+          if (code && code.replace) {
+            opts.bundle[key].code = fixAssetPathJS(code);
+          } else if (source && source.replace) {
+            opts.bundle[key].source = fixAssetPathJS(source);
+          } else {
+            console.log("missing code and source: ", opts.bundle[key]);
+          }
+        }
+      });
+
+      const tags: HtmlTagDescriptor[] = [
+        browserRequireIgnore,
+        {
+          tag: "script",
+          attrs: { src: `..${jsFileName}` },
+          injectTo: "body",
+        },
+      ];
+
+      code = removeModuleTags(code);
+      code = fixAssetPathHTML(code);
+
+      if (debugReact) {
+        tags.push({
+          tag: "script",
+          attrs: { src: "http://localhost:8097" },
+          injectTo: "body",
+        });
+      }
+
+      return {
+        tags,
+        html: code,
+      };
+    },
+
+    configResolved(config: ResolvedConfig | any) {
+      if (!isProduction) {
+        console.clear();
+        console.log(`${conColors.green}CEP Panels Served at:`);
+        console.log("");
+        //@ts-ignore
+        Object.keys(config.build.rollupOptions.input).map((key: string) => {
+          //@ts-ignore
+          const filePath = config.build.rollupOptions.input[key];
+          const relativePath = path.relative(config.root, filePath);
+          
+          const standardPath = ''
+          
+          const folderFix = (folder: string) => {
+            console.log('folder fix triggered.')
+            const dummy = 'dummy-non-existing-folder';
+            const defaultDir = 'dist/cep/';
+            if (folder == dummy) {
+                console.log('Dummy folder detected.');
+                return 'dist/cep/';
+            }
+            else {
+                console.log('Dummy not detected. returning folder: ' + folder);
+                return folder;
+            }
+        };
+          
+
+          const destPath = path.resolve(folderFix(config.build.outDir), relativePath);
+          const panelHtmlFile = {
+            type: "asset",
+            source: devHtmlTemplate({
+              ...cepConfig,
+              url: `http://localhost:${cepConfig.port}/${posix(relativePath)}`,
+              injectRequire,
+            }),
+            name: "CEP HTML Dev File",
+            fileName: "index.html",
+          };
+          fs.writeFileSync(destPath, panelHtmlFile.source);
+          console.log(
+            `${conColors.white}   > ${path.dirname(relativePath)}: ${
+              conColors.cyan
+            }http://localhost:${cepConfig.port}/${posix(
+              path.dirname(relativePath)
+            )}/`
+          );
+        });
+      }
+    },
+    async writeBundle() {
+      // console.log(" BUILD END");
+      const root = "./";
+      const src = "./src";
+      const dest = "dist/cep";
+      const symlink = false;
+      const allPackages = unique(packages.concat(foundPackages));
+      copyModules({ packages: allPackages, src: root, dest, symlink });
+      if (cepConfig.copyAssets) {
+        copyFiles({
+          src: path.join(process.cwd(), src),
+          dest: path.join(process.cwd(), dest),
+          assets: cepConfig.copyAssets,
+        });
+      }
+
+      // console.log("FINISH");
+      if (isPackage) {
+        const zxpPath = await signZXP(
+          cepConfig,
+          path.join(dir, cepDist),
+          zxpDir,
+          tmpDir
+        );
+        if (isMetaPackage) {
+          await metaPackage(
+            cepConfig,
+            zipDir,
+            zxpPath,
+            src,
+            cepConfig.copyZipAssets
+          );
+        }
+      }
+    },
+    async generateBundle(output: any, bundle: any) {
+      console.log(
+        `${conColors.green}cep process: ${
+          (isPackage && "zxp package") || (isProduction && "build") || "dev"
+        }`
+      );
+
+      // Fill any empty panel fields with extension's defaults
+      const fillPanelFields = (config: CEP_Config) => {
+        let newConfig: CEP_Config_Extended = {
+          ...config,
+          panels: config.panels.map((panel) => {
+            let newProps: any = { ...config, ...panel };
+            return {
+              id: panel.id ? panel.id : `${config.id}.${panel.name}`,
+              name: newProps.name,
+              parameters: newProps.parameters,
+              autoVisible: newProps.autoVisible,
+              mainPath: newProps.mainPath,
+              type: newProps.type,
+              host: newProps.host,
+              panelDisplayName: newProps.panelDisplayName,
+              width: newProps.width,
+              height: newProps.height,
+              minWidth: newProps.minWidth,
+              minHeight: newProps.minHeight,
+              maxWidth: newProps.maxWidth,
+              maxHeight: newProps.maxHeight,
+              iconNormal: newProps.iconNormal,
+              iconDarkNormal: newProps.iconDarkNormal,
+              iconNormalRollOver: newProps.iconNormalRollOver,
+              iconDarkNormalRollOver: newProps.iconDarkNormalRollOver,
+              scriptPath: newProps.scriptPath,
+              startOnEvents: newProps.startOnEvents,
+            };
+          }),
+        };
+        return newConfig;
+      };
+
+      const extendedConfig = fillPanelFields(cepConfig);
+
+      const manifestFile = {
+        type: "asset",
+        source: prettifyXml(manifestTemplate(extendedConfig), {
+          indent: 2,
+          newline: "\n",
+        }),
+        name: "CEP Manifest File",
+        fileName: path.join("CSXS", "manifest.xml"),
+      };
+      //@ts-ignore
+      this.emitFile(manifestFile);
+      log("manifest created", true);
+
+      // const menuFile = {
+      //   type: "asset",
+      //   source: menuHtmlTemplate({
+      //     displayName: cepConfig.displayName,
+      //     menu: cepConfig.panels.map((panel) => {
+      //       return {
+      //         name: panel.name,
+      //         url: panel.mainPath,
+      //       };
+      //     }),
+      //   }),
+      //   name: "Menu File",
+      //   fileName: path.join("index.html"),
+      // };
+      //@ts-ignore
+      // this.emitFile(menuFile);
+      // log("menu created", true);
+
+      const debugFile = {
+        type: "asset",
+
+        source: prettifyXml(debugTemplate(extendedConfig)),
+        name: "CEP Debug File",
+        fileName: path.join(".debug"),
+      };
+      //@ts-ignore
+      this.emitFile(debugFile);
+      log("debug file created", true);
+
+      try {
+        const symlinkPath =
+          cepConfig.symlink === "global"
+            ? ccGlobalExtensionFolder
+            : ccLocalExtensionFolder;
+        const res = makeSymlink(
+          path.join(dir, cepDist),
+          path.join(symlinkPath, cepConfig.id)
+        );
+      } catch (e) {
+        console.warn(e);
+      }
+
+      console.log("");
+    },
+  };
+};
+
+export const jsxInclude = ({
+  iife,
+  globalThis,
+}: {
+  iife: boolean;
+  globalThis: string;
+}): Plugin | any => {
+  const foundIncludes: string[] = [];
+  return {
+    name: "extendscript-include-resolver",
+    generateBundle: (
+      output: any,
+      bundle: { [key: string]: { code: string } }
+    ) => {
+      const esFile = Object.keys(bundle).pop() as keyof object;
+      const core = [
+        "// ----- EXTENDSCRIPT INCLUDES ------ //",
+        ...foundIncludes,
+        "// ---------------------------------- //",
+        bundle[esFile].code,
+      ];
+      if (iife) {
+        const banner = `(function (${globalThis}) {`;
+        const footer = "})(this);";
+        bundle[esFile].code = [banner, ...core, footer].join("\r");
+      } else {
+        bundle[esFile].code = core.join("\r");
+      }
+    },
+    transform: (code: string, id: string) => {
+      const s = new MagicString(code);
+      // console.log("looking for JSXINCLUDE");
+      const includeMatches = code.match(/^\/\/(\s|)\@include(.*)/gm);
+      if (includeMatches) {
+        // console.log("FOUND!", matches);
+        includeMatches.map((match: string) => {
+          const innerMatches = match.match(/(?:'|").*(?:'|")/);
+          const firstMatch = innerMatches?.pop();
+          if (firstMatch) {
+            const relativeDir = firstMatch.replace(/(\"|\')/g, "");
+            const filePath = path.join(path.dirname(id), relativeDir);
+            let text = "";
+            if (fs.existsSync(filePath)) {
+              text = fs.readFileSync(filePath, { encoding: "utf-8" });
+              foundIncludes.push(text);
+            } else {
+              console.warn(
+                `WARNING: File cannot be found for include ${match}`
+              );
+            }
+            // console.log("INDEX :: ", code.indexOf(match));
+            // console.log("CODE :: ", code);
+            s.overwrite(
+              code.indexOf(match),
+              code.indexOf(match) + match.length,
+              ""
+            );
+          }
+        });
+      }
+      const commentMatches = code.match(/\/\/(\s|)\@(.*)/gm);
+      if (commentMatches) {
+        let end = 0;
+        commentMatches.map((comment) => {
+          const start = code.indexOf(comment, end);
+          end = start + comment.length;
+          s.overwrite(start, end, "");
+        });
+      }
+      return {
+        code: s.toString(),
+        map: s.generateMap({
+          source: id,
+          file: `${id}.map`,
+          includeContent: true,
+        }),
+      };
+    },
+  };
+};
+
+interface PonyFillItem {
+  find: string;
+  replace: string;
+  inject: string;
+}
+export const jsxPonyfill = (extraPonyfills?: PonyFillItem[]): Plugin | any => {
+  let usedPonyfills = new Set<PonyFillItem>();
+  let ponyfills: PonyFillItem[] = [
+    {
+      find: "Object.freeze",
+      replace: "__objectFreeze",
+      inject: `function __objectFreeze(obj) { return obj; }`,
+    },
+    {
+      find: "Array.isArray",
+      replace: "__isArray",
+      inject: `function __isArray(arr) { try { return arr instanceof Array; } catch (e) { return false; } };`,
+    },
+  ];
+  if (extraPonyfills) {
+    ponyfills = [...ponyfills, ...extraPonyfills];
+  }
+  return {
+    name: "extendscript-ponyfill-resolver",
+    generateBundle: (
+      output: any,
+      bundle: { [key: string]: { code: string } }
+    ) => {
+      const esFile = Object.keys(bundle).pop() as keyof object;
+
+      let ponyfillStr = [
+        `// ----- EXTENDSCRIPT PONYFILLS -----`,
+        Array.from(usedPonyfills)
+          .map((p) => p.inject)
+          .join("\r"),
+        "// ---------------------------------- //",
+      ].join("\r");
+
+      const core = [ponyfillStr, bundle[esFile].code];
+      bundle[esFile].code = core.join("\r");
+    },
+    renderChunk: (code: string, chunk: any) => {
+      const id = chunk.fileName;
+      const s = new MagicString(code);
+      // console.log("Ponyfill Time");
+
+      ponyfills.map((pony) => {
+        const regexp = new RegExp(pony.find, "g");
+        const gen = code.matchAll(regexp);
+        // console.log("GEN", gen);
+        if (gen) {
+          const matches = [...gen];
+          // console.log("FOUND!", pony.find);
+          matches.map((match) => {
+            usedPonyfills.add(pony);
+            const index = match.index;
+            const length = match[0].length;
+            if (index) {
+              // console.log("REPLACING :: ", index, index + length);
+              s.overwrite(
+                index,
+                index + length,
+                pony.replace
+                // text
+              );
+            }
+          });
+        }
+      });
+
+      return {
+        code: s.toString(),
+        map: s.generateMap({
+          source: id,
+          file: `${id}.map`,
+          includeContent: true,
+        }),
+      };
+    },
+  };
+};
+
+export const runAction = (opts: CepOptions, action: string) => {
+  const {
+    cepConfig,
+    dir,
+    isProduction,
+    isPackage,
+    isServe,
+    debugReact,
+    cepDist,
+    zxpDir,
+    packages,
+  } = opts;
+
+  const symlinkPath =
+    cepConfig.symlink === "global"
+      ? ccGlobalExtensionFolder
+      : ccLocalExtensionFolder;
+  const symlinkSrc = path.join(dir, cepDist);
+  const symlinkDst = path.join(symlinkPath, cepConfig.id);
+
+  if (action === "symlink") {
+    makeSymlink(symlinkSrc, symlinkDst);
+  } else if (action === "delsymlink") {
+    removeSymlink(symlinkSrc, symlinkDst);
+  } else if (action === "dependencyCheck") {
+    console.log("Checking Dependencies");
+    packageSync();
+  } else {
+    console.warn(`Unknown Action: ${action}`);
+  }
+  resetLog();
+};
+
+export const jsxBin = (jsxBinMode?: JSXBIN_MODE) => {
+  return {
+    name: "extendscript-jsxbin",
+    generateBundle: async function (output: any, bundle: any) {
+      if (jsxBinMode === "copy" || jsxBinMode === "replace") {
+        const esFile = Object.keys(bundle).pop();
+        if (esFile) {
+          // console.log("GENERATE JSXBIN");
+          const srcFilePathTmp = path.join(tmpDir, esFile);
+          const esFileBin = esFile.replace("js", "jsxbin");
+          const dstFilePathTmp = path.join(tmpDir, esFileBin);
+          const tmpSrc = fs.writeFileSync(srcFilePathTmp, bundle[esFile].code, {
+            encoding: "utf-8",
+          });
+          await jsxbin(srcFilePathTmp, dstFilePathTmp);
+          const output = fs.readFileSync(dstFilePathTmp, { encoding: "utf-8" });
+          const jsxBinFile = {
+            type: "asset",
+            source: output,
+            name: "JSXBIN",
+            fileName: esFileBin,
+          };
+          //@ts-ignore
+          this.emitFile(jsxBinFile);
+          console.log(`JSXBIN Created: ${esFileBin}`);
+          if (jsxBinMode === "replace") {
+            delete bundle[esFile];
+          }
+        }
+      }
+    },
+  };
+};
diff --git a/node_modules/vite-cep-plugin/src/lib/lib.ts b/node_modules/vite-cep-plugin/src/lib/lib.ts
new file mode 100644
index 0000000..c8930ce
--- /dev/null
+++ b/node_modules/vite-cep-plugin/src/lib/lib.ts
@@ -0,0 +1,81 @@
+import * as os from "os";
+import * as fs from "fs-extra";
+
+export const conColors = {
+  white: "\u001b[0m",
+  whiteBold: "\u001b[1;37m",
+  cyan: "\u001b[1;36m",
+  purple: "\u001b[1;35m",
+  blue: "\u001b[1;34m",
+  yellow: "\u001b[1;33m",
+  green: "\u001b[1;32m",
+  red: "\u001b[1;31m",
+  grey: "\u001b[1;30m",
+};
+
+export const log = (str: string, succeeded: boolean, info?: string) => {
+  const res = succeeded ? "succeeded √" : "failed ×";
+  const color = succeeded ? conColors.cyan : conColors.red;
+  console.log(`${color}${str} → ${res} ${(info && ":") || ""} ${info || ""}`);
+  if (!succeeded) throw info;
+};
+
+export const resetLog = () => {
+  console.log(conColors.white);
+};
+
+export const sep = os.platform() == "win32" ? "\\" : "/";
+
+export const removeIfExists = (dir: string) => {
+  try {
+    fs.existsSync(dir) && fs.removeSync(dir);
+    return [true, "Removed"];
+  } catch (e) {
+    return [false, e];
+  }
+};
+
+export const safeCreate = (dir: string) => {
+  try {
+    if (!fs.existsSync(dir)) {
+      fs.mkdirSync(dir);
+      return [true, "Created"];
+    }
+    return [true, "Already Exists"];
+  } catch (e) {
+    return [false, e];
+  }
+};
+
+export const posix = (str: string) => str.replace(/\\/g, "/");
+
+export const fixAssetPathJS = (code: string) => {
+  code = code.replace(/\=\"\.\/assets/g, `="../assets`);
+  code = code.replace(/\=\"\/assets/g, `="../assets`);
+  code = code.replace(/\(\"\.\/assets/g, `("../assets`);
+  code = code.replace(/\(\"\/assets/g, `("../assets`);
+  return code;
+};
+
+export const fixAssetPathCSS = (code: string) => {
+  code = code.replace(/\(\.\/assets/g, `(../assets`);
+  code = code.replace(/\(\/assets/g, `(./`);
+  return code;
+};
+
+export const fixAssetPathHTML = (code: string) => {
+  code = code.replace(/\=\"\/assets/g, `="../assets`);
+  return code;
+};
+
+export const removeModuleTags = (code: string) => {
+  code = code.replace(/\<link rel=\"modulepreload\" (.*)\>/g, "");
+  code = code.replace(/\<script type=\"module\" (.*)\>/g, "");
+  return code;
+};
+
+export const pause = (ms: number) => {
+  return new Promise((resolve) => {
+    setTimeout(() => resolve(""), ms);
+  });
+};
diff --git a/node_modules/vite-cep-plugin/src/lib/node-built-ins.ts b/node_modules/vite-cep-plugin/src/lib/node-built-ins.ts
new file mode 100644
index 0000000..9a1e5da
--- /dev/null
+++ b/node_modules/vite-cep-plugin/src/lib/node-built-ins.ts
@@ -0,0 +1,31 @@
+export const nodeBuiltIns = [
+  "crypto",
+  "assert",
+  "buffer",
+  "child_process",
+  "worker_threads",
+  "cluster",
+  "dgram",
+  "dns",
+  "domain",
+  "events",
+  "fs",
+  "http",
+  "https",
+  "net",
+  "os",
+  "path",
+  "punycode",
+  "querystring",
+  "readline",
+  "stream",
+  "string_decoder",
+  "timers",
+  "tls",
+  "tty",
+  "url",
+  "util",
+  "v8",
+  "vm",
+  "zlib",
+];
diff --git a/node_modules/vite-cep-plugin/src/lib/package-sync.ts b/node_modules/vite-cep-plugin/src/lib/package-sync.ts
new file mode 100644
index 0000000..c0c744e
--- /dev/null
+++ b/node_modules/vite-cep-plugin/src/lib/package-sync.ts
@@ -0,0 +1,75 @@
+import { readFileSync } from "fs";
+
+type PackageJSON = {
+  name: string;
+  version: string;
+  scripts: {
+    [key: string]: string;
+  };
+  dependencies: { [key: string]: string };
+  devDependencies: { [key: string]: string };
+  main: string;
+  license: string;
+};
+
+export const packageSync = () => {
+  const pack = readFileSync("package.json", "utf-8");
+  const packJson = JSON.parse(pack) as PackageJSON;
+
+  const packSvelte = readFileSync("package.svelte.json", "utf-8");
+  const svelte = JSON.parse(packSvelte) as PackageJSON;
+
+  const packVue = readFileSync("package.vue.json", "utf-8");
+  const vue = JSON.parse(packVue) as PackageJSON;
+
+  const packReact = readFileSync("package.react.json", "utf-8");
+  const react = JSON.parse(packReact) as PackageJSON;
+
+  const svelteWarnings: string[] = [];
+  const vueWarnings: string[] = [];
+  const reactWarnings: string[] = [];
+
+  Object.keys(packJson.dependencies).map((dep) => {
+    const version = packJson.dependencies[dep];
+    const svelteVersion = svelte.dependencies[dep];
+    const vueVersion = vue.dependencies[dep];
+    const reactVersion = react.dependencies[dep];
+
+    if (svelteVersion && svelteVersion !== version) {
+      svelteWarnings.push(`svelte: ${dep} ${svelteVersion} -> ${version}`);
+    }
+    if (vueVersion && vueVersion !== version) {
+      vueWarnings.push(`vue: ${dep} ${vueVersion} -> ${version}`);
+    }
+    if (reactVersion && reactVersion !== version) {
+      reactWarnings.push(`react: ${dep} ${reactVersion} -> ${version}`);
+    }
+  });
+
+  Object.keys(packJson.devDependencies).map((dep) => {
+    const version = packJson.devDependencies[dep];
+    const svelteVersion = svelte.devDependencies[dep];
+    const vueVersion = vue.devDependencies[dep];
+    const reactVersion = react.devDependencies[dep];
+
+    if (svelteVersion && svelteVersion !== version) {
+      svelteWarnings.push(
+        `svelte (devDependencies): ${dep} ${svelteVersion} -> ${version}`
+      );
+    }
+    if (vueVersion && vueVersion !== version) {
+      vueWarnings.push(
+        `vue (devDependencies): ${dep} ${vueVersion} -> ${version}`
+      );
+    }
+    if (reactVersion && reactVersion !== version) {
+      reactWarnings.push(
+        `react (devDependencies): ${dep} ${reactVersion} -> ${version}`
+      );
+    }
+  });
+
+  console.log("Svelte Warnings", svelteWarnings);
+  console.log("Vue Warnings", vueWarnings);
+  console.log("React Warnings", reactWarnings);
+};
diff --git a/node_modules/vite-cep-plugin/src/lib/require-js.js b/node_modules/vite-cep-plugin/src/lib/require-js.js
new file mode 100644
index 0000000..fe52a4c
--- /dev/null
+++ b/node_modules/vite-cep-plugin/src/lib/require-js.js
@@ -0,0 +1 @@
+"use strict";window.require=typeof require==="function"?function(require,document){var tmp=document.querySelector("script[data-main]");if(tmp){require(tmp.dataset.main)}return require}(require,document):function(document){var COMMA_DELIMITER=/,[ ]*/gim;var SLASH_DELIMITER=/[\/]+/gim;function loadPrerequisites(){var head=document.head;var tmpScripts=document.querySelector("script[data-scripts]");var tmpStyles=document.querySelector("script[data-styles]");var styles=tmpStyles?tmpStyles.dataset.styles:"";var scripts=tmpScripts?tmpScripts.dataset.scripts:"";var tmpBaseDir=document.querySelector("script[data-base_dir]");var tag;var baseDir=tmpBaseDir&&tmpBaseDir.dataset.base_dir;baseDir=baseDir&&typeof baseDir==="string"?baseDir:"./";baseDir=new URL(baseDir,location.href).href;if(baseDir){tag=document.createElement("base");tag.setAttribute("href",baseDir);head.append(tag)}if(typeof styles==="string"){styles.trim().replace(COMMA_DELIMITER,",").split(",").forEach(function(url){tag=document.createElement("link");tag.setAttribute("rel","stylesheet");tag.setAttribute("type","text/css");tag.setAttribute("href",url.trim());head.append(tag)})}if(typeof scripts==="string"){scripts.trim().replace(COMMA_DELIMITER,",").split(",").forEach(function(url){tag=document.createElement("script");tag.setAttribute("type","text/javascript");tag.setAttribute("src",url.trim());head.append(tag)})}return baseDir}function getSynchXHR(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send();return xhr}function getFileName(filePath){filePath=typeof filePath==="string"?filePath:"";if(filePath.indexOf(".")<0){var xhr=getSynchXHR("".concat(filePath,"/package.json"));if(xhr.status===200){var pack=JSON.parse(xhr.responseText);filePath=filePath+"/"+pack.main}}return filePath}return function(){var modules={};var baseDir=loadPrerequisites();var tmpMain=document.querySelector("script[data-main]");var mainStr=tmpMain?tmpMain.dataset.main:null;function require(dirname,file){file=typeof file==="string"?file.trim():"";var uri=new URL(file,dirname);uri.pathname=getFileName(uri.pathname);dirname=uri.href.substr(0,uri.href.lastIndexOf("/")+1);var filename=uri.pathname.substr(uri.pathname.lastIndexOf("/")+1);if(modules.hasOwnProperty(uri.href)){return modules[uri.href]}else{var xhr=getSynchXHR(uri.href);if(xhr.status===200){var module={};if(/(.json)$/gi.test(filename)){module.exports=JSON.parse(xhr.responseText)}else{module.exports={};new Function("exports","require","module","__filename","__dirname","\n              ".concat(xhr.responseText,"\n              //# sourceURL=").concat(uri.href,"\n            ")).call(this,module.exports,require.bind(this,dirname),module,filename,dirname);modules[uri.href]=module.exports}return module.exports}}return}Object.defineProperty(require,"modules",{set:Function.prototype,get:function get(){return modules}});var req=require.bind(this,baseDir);if(mainStr){window.addEventListener("load",req.bind(this,new URL(mainStr,baseDir).href))}return req}()}(document);
diff --git a/node_modules/vite-cep-plugin/src/lib/zip.ts b/node_modules/vite-cep-plugin/src/lib/zip.ts
new file mode 100644
index 0000000..07fecdf
--- /dev/null
+++ b/node_modules/vite-cep-plugin/src/lib/zip.ts
@@ -0,0 +1,71 @@
+import * as os from "os";
+import * as fs from "fs";
+import * as path from "path";
+import * as archiver from "archiver";
+import * as child_process from "child_process";
+const { execSync } = child_process;
+
+import { removeIfExists, safeCreate, log, resetLog } from "./lib";
+import { CEP_Config } from "../cep-config";
+import { copyFiles } from "../copy-node";
+
+const createZip = (src: string, dst: string, name: string): Promise<string> => {
+  return new Promise((resolve, reject) => {
+    const archive = archiver("zip");
+    const zipDest = path.join(dst, `${name}.zip`);
+    const output = fs.createWriteStream(zipDest);
+    output.on("close", () => {
+      // console.log(`zip archive created. ( ${archive.pointer()} bytes )`);
+      resolve(zipDest);
+    });
+    archive.on("error", (err) => {
+      reject(err.message);
+    });
+
+    archive.pipe(output);
+
+    // append files from a sub-directory, putting its contents at the root of archive
+    archive.directory(src, false);
+
+    // append files from a sub-directory and naming it `new-subdir` within the archive
+    //   archive.directory(dst, "new-subdir");
+
+    archive.finalize();
+  });
+};
+
+export const metaPackage = async (
+  config: CEP_Config,
+  dest: string,
+  zxp: string,
+  src: string,
+  assets?: string[]
+) => {
+  const tmpDir = path.join(dest, "tmp");
+  console.log({
+    dest,
+    zxp,
+    src,
+    assets,
+  });
+  fs.mkdirSync(tmpDir, { recursive: true });
+  fs.copyFileSync(zxp, path.join(tmpDir, path.basename(zxp)));
+
+  if (assets) {
+    copyFiles({
+      src,
+      dest: tmpDir,
+      assets,
+    });
+  }
+
+  const zip = await createZip(
+    tmpDir,
+    dest,
+    `${config.displayName}_${config.version}`
+  );
+  log("built zip", true, zip);
+  fs.rmSync(tmpDir, { recursive: true });
+  resetLog();
+  return zip;
+};
diff --git a/node_modules/vite-cep-plugin/src/lib/zxp.ts b/node_modules/vite-cep-plugin/src/lib/zxp.ts
new file mode 100644
index 0000000..f26c3f8
--- /dev/null
+++ b/node_modules/vite-cep-plugin/src/lib/zxp.ts
@@ -0,0 +1,41 @@
+import * as os from "os";
+import * as path from "path";
+import * as child_process from "child_process";
+const { execSync } = child_process;
+
+import { removeIfExists, safeCreate, log, pause } from "./lib";
+import { CEP_Config } from "../cep-config";
+import { existsSync, readdirSync } from "fs";
+
+export const signZXP = async (
+  config: CEP_Config,
+  input: string,
+  zxpDir: string,
+  tmpDir: string
+) => {
+  const zxpCmd = os.platform() == "win32" ? `ZXPSignCmd` : `./ZXPSignCmd`;
+  const name = config.id;
+  const data = config.zxp;
+  const output = path.join(zxpDir, `${name}.zxp`);
+  const certPath = path.join(tmpDir, `${name}-cert.p12`);
+  const signPrepStr = `${zxpCmd} -selfSignedCert ${data.country} ${data.province} ${data.org} ${name} ${data.password} "${certPath}"`;
+  const signStr = `${zxpCmd} -sign "${input}" "${output}" "${certPath}" ${data.password} -tsa ${data.tsa}`;
+  const cwdDir = path.join(__dirname, "..", "bin");
+
+  removeIfExists(output);
+  safeCreate(zxpDir);
+  console.log({ signPrepStr });
+  execSync(signPrepStr, { cwd: cwdDir, encoding: "utf-8" });
+  console.log({ signStr });
+
+  const jsx = path.join(input, "jsx");
+  let waits = 1;
+  while (!existsSync(jsx) || readdirSync(jsx).length === 0) {
+    console.log(`waiting for ExtendScript to finish... ${100 * waits++}ms`);
+    await pause(100);
+  }
+
+  execSync(signStr, { cwd: cwdDir, encoding: "utf-8" });
+  log("built zxp", true, output);
+  return output;
+};
diff --git a/node_modules/vite-cep-plugin/src/templates/debug-template.ts b/node_modules/vite-cep-plugin/src/templates/debug-template.ts
new file mode 100644
index 0000000..d1943af
--- /dev/null
+++ b/node_modules/vite-cep-plugin/src/templates/debug-template.ts
@@ -0,0 +1,22 @@
+import type { CEP_Config_Extended } from "../cep-config";
+
+export const debugTemplate = (props: CEP_Config_Extended) => {
+  const { id, hosts, startingDebugPort, panels } = props;
+  let port = startingDebugPort;
+  return `
+<?xml version="1.0" encoding="UTF-8"?>
+<ExtensionList>${panels
+    .map(
+      ({ id }) =>
+        `<Extension Id="${id}">
+      <HostList>
+      ${hosts
+        .map((host) => `<Host Name="${host.name}" Port="${port++}"/>`)
+        .join("")}
+      </HostList>
+      </Extension>`
+    )
+    .join("")}
+</ExtensionList>
+`;
+};
diff --git a/node_modules/vite-cep-plugin/src/templates/dev-html-template.ts b/node_modules/vite-cep-plugin/src/templates/dev-html-template.ts
new file mode 100644
index 0000000..0ea4653
--- /dev/null
+++ b/node_modules/vite-cep-plugin/src/templates/dev-html-template.ts
@@ -0,0 +1,28 @@
+export const devHtmlTemplate = ({
+  displayName,
+  url,
+  injectRequire,
+}: {
+  displayName: string;
+  url: string;
+  injectRequire: string;
+}) => `
+<!DOCTYPE html>
+<html>
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
+    <title>${displayName}</title>
+    <script>${injectRequire}</script>
+  </head>
+
+  <body>
+    <div id="root"></div>
+    <script>
+      window.location.href = '${url}';
+    </script>
+  </body>
+</html>
+
+`;
diff --git a/node_modules/vite-cep-plugin/src/templates/extension-template.ts b/node_modules/vite-cep-plugin/src/templates/extension-template.ts
new file mode 100644
index 0000000..482d25a
--- /dev/null
+++ b/node_modules/vite-cep-plugin/src/templates/extension-template.ts
@@ -0,0 +1,81 @@
+import type { CEP_Extended_Panel } from "../cep-config";
+
+export const extensionTemplate = ({
+  id,
+  name,
+  parameters,
+  autoVisible,
+  mainPath,
+  type,
+  host,
+  panelDisplayName,
+  width,
+  height,
+  minWidth,
+  minHeight,
+  maxWidth,
+  maxHeight,
+  iconNormal,
+  iconDarkNormal,
+  iconNormalRollOver,
+  iconDarkNormalRollOver,
+  scriptPath,
+  startOnEvents,
+}: CEP_Extended_Panel) => `<Extension Id="${id}">
+<DispatchInfo${host ? ` Host="${host}"` : ""}>
+  <Resources>
+    <MainPath>${mainPath}</MainPath>${
+  (scriptPath && `<ScriptPath>${scriptPath}</ScriptPath>`) || ""
+}<CEFCommandLine>${
+  (parameters &&
+    parameters
+      .map((item) => `\n<Parameter>${item.toString()}</Parameter>`)
+      .join("")) ||
+  ""
+}
+    </CEFCommandLine>
+  </Resources>
+  <Lifecycle>
+    <AutoVisible>${autoVisible}</AutoVisible>${
+  (startOnEvents &&
+    `<StartOn>${startOnEvents
+      .map((event) => `\n<Event>${event}</Event>`)
+      .join("")}</StartOn>`) ||
+  ""
+} 
+  </Lifecycle>
+  <UI>
+    <Type>${type}</Type>
+    ${panelDisplayName ? `<Menu>${panelDisplayName}</Menu>` : ""}
+    <Geometry>${
+      width && height
+        ? `<Size>
+        <Width>${width}</Width>
+        <Height>${height}</Height>
+      </Size>`
+        : ""
+    }${
+  maxWidth && maxHeight
+    ? `<MaxSize>
+        <Width>${maxWidth}</Width>
+        <Height>${maxHeight}</Height>
+      </MaxSize>`
+    : ""
+}${
+  minWidth && minHeight
+    ? `<MinSize>
+        <Width>${minWidth}</Width>
+        <Height>${minHeight}</Height>
+      </MinSize>`
+    : ""
+}</Geometry>
+    <Icons>
+      <Icon Type="Normal">${iconNormal}</Icon>
+      <Icon Type="DarkNormal">${iconDarkNormal}</Icon>
+      <Icon Type="RollOver">${iconNormalRollOver}</Icon>
+      <Icon Type="DarkRollOver">${iconDarkNormalRollOver}</Icon>
+    </Icons>
+  </UI>
+</DispatchInfo>
+</Extension>
+`;
diff --git a/node_modules/vite-cep-plugin/src/templates/manifest-template.ts b/node_modules/vite-cep-plugin/src/templates/manifest-template.ts
new file mode 100644
index 0000000..6568740
--- /dev/null
+++ b/node_modules/vite-cep-plugin/src/templates/manifest-template.ts
@@ -0,0 +1,47 @@
+import type { CEP_Config_Extended } from "../cep-config";
+import { extensionTemplate } from "./extension-template";
+export const manifestTemplate = (props: CEP_Config_Extended) => {
+  const {
+    extensionManifestVersion,
+    id,
+    displayName,
+    version,
+    hosts,
+    requiredRuntimeVersion,
+    standalone,
+    panels,
+  } = props;
+  return `<?xml version="1.0" encoding="UTF-8" standalone="${
+    standalone ? "yes" : "no"
+  }"?>
+<ExtensionManifest
+    Version="${extensionManifestVersion.toFixed(1)}" 
+    ExtensionBundleId="${id}"
+    ExtensionBundleVersion="${version}"
+    ExtensionBundleName="${displayName}" 
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+  >
+  <ExtensionList>
+    ${panels
+      .map((panel) => `<Extension Id="${panel.id}" Version="${version}" />`)
+      .filter((value, index, self) => self.indexOf(value) === index) // remove duplicates
+      .join("")}
+	</ExtensionList>
+	<ExecutionEnvironment>
+    <HostList>
+    ${hosts
+      .map((host) => `<Host Name="${host.name}" Version="${host.version}" />`)
+      .join("")}
+		</HostList>
+		<LocaleList>
+			<Locale Code="All" />
+		</LocaleList>
+		<RequiredRuntimeList>
+			<RequiredRuntime Name="CSXS" Version="${requiredRuntimeVersion.toFixed(1)}" />
+		</RequiredRuntimeList>
+	</ExecutionEnvironment>
+	<DispatchInfoList>${panels
+    .map((panel) => extensionTemplate(panel))
+    .join("")}</DispatchInfoList>
+	</ExtensionManifest>`;
+};
diff --git a/node_modules/vite-cep-plugin/src/templates/menu-html-template.ts b/node_modules/vite-cep-plugin/src/templates/menu-html-template.ts
new file mode 100644
index 0000000..e246e11
--- /dev/null
+++ b/node_modules/vite-cep-plugin/src/templates/menu-html-template.ts
@@ -0,0 +1,46 @@
+export const menuHtmlTemplate = ({
+  displayName,
+  menu,
+}: {
+  displayName: string;
+  menu: [{ name: string; url: string }];
+}) => `
+<!DOCTYPE html>
+<html>
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
+    <title>${displayName}</title>
+    <style>
+    body {
+      background-color: #222;
+      color: #eee;
+      font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
+    }
+    .menu{
+    }
+    a {
+      display: block;
+      font-size: 1rem;
+      color: #eee;
+      text-decoration: none;
+      cursor: pointer;
+    }
+    a:hover {
+      color: #4ea9ff;
+    }
+  </style>
+  </head>
+
+  <body>
+  <h2>Select Panel</h2>
+    <div class="menu">
+      ${menu
+        .map((item) => `<a href="${item.url}">- ${item.name}</a>`)
+        .join("\n\t\t\t")}
+    </div>
+  </body>
+</html>
+
+`;
diff --git a/node_modules/vite-cep-plugin/tsconfig.json b/node_modules/vite-cep-plugin/tsconfig.json
new file mode 100644
index 0000000..0e25296
--- /dev/null
+++ b/node_modules/vite-cep-plugin/tsconfig.json
@@ -0,0 +1,13 @@
+{
+  "compilerOptions": {
+    "target": "ES2015",
+    "module": "commonjs",
+    "declaration": true,
+    "outDir": "./lib",
+    "strict": true,
+    "allowJs": true,
+    "skipLibCheck": true
+  },
+  "include": ["src", "src/lib/require-js.js", "src/bin/*"],
+  "exclude": ["node_modules"]
+}
diff --git a/node_modules/vite-cep-plugin/yarn.lock b/node_modules/vite-cep-plugin/yarn.lock
new file mode 100644
index 0000000..b7c2ef5
--- /dev/null
+++ b/node_modules/vite-cep-plugin/yarn.lock
@@ -0,0 +1,1024 @@
+# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
+# yarn lockfile v1
+
+
+"@cspotcode/source-map-consumer@0.8.0":
+  version "0.8.0"
+  resolved "https://registry.yarnpkg.com/@cspotcode/source-map-consumer/-/source-map-consumer-0.8.0.tgz#33bf4b7b39c178821606f669bbc447a6a629786b"
+  integrity sha512-41qniHzTU8yAGbCp04ohlmSrZf8bkf/iJsl3V0dRGsQN/5GFfx+LbCSsCpp2gqrqjTVg/K6O8ycoV35JIwAzAg==
+
+"@cspotcode/source-map-support@0.7.0":
+  version "0.7.0"
+  resolved "https://registry.yarnpkg.com/@cspotcode/source-map-support/-/source-map-support-0.7.0.tgz#4789840aa859e46d2f3173727ab707c66bf344f5"
+  integrity sha512-X4xqRHqN8ACt2aHVe51OxeA2HjbcL4MqFqXkrmQszJ1NOUuUu5u6Vqx/0lZSVNku7velL5FC/s5uEAj1lsBMhA==
+  dependencies:
+    "@cspotcode/source-map-consumer" "0.8.0"
+
+"@dabh/diagnostics@^2.0.2":
+  version "2.0.2"
+  resolved "https://registry.yarnpkg.com/@dabh/diagnostics/-/diagnostics-2.0.2.tgz#290d08f7b381b8f94607dc8f471a12c675f9db31"
+  integrity sha512-+A1YivoVDNNVCdfozHSR8v/jyuuLTMXwjWuxPFlFlUapXoGc+Gj9mDlTDDfrwl7rXCl2tNZ0kE8sIBO6YOn96Q==
+  dependencies:
+    colorspace "1.1.x"
+    enabled "2.0.x"
+    kuler "^2.0.0"
+
+"@esbuild/android-arm64@0.18.20":
+  version "0.18.20"
+  resolved "https://registry.yarnpkg.com/@esbuild/android-arm64/-/android-arm64-0.18.20.tgz#984b4f9c8d0377443cc2dfcef266d02244593622"
+  integrity sha512-Nz4rJcchGDtENV0eMKUNa6L12zz2zBDXuhj/Vjh18zGqB44Bi7MBMSXjgunJgjRhCmKOjnPuZp4Mb6OKqtMHLQ==
+
+"@esbuild/android-arm@0.18.20":
+  version "0.18.20"
+  resolved "https://registry.yarnpkg.com/@esbuild/android-arm/-/android-arm-0.18.20.tgz#fedb265bc3a589c84cc11f810804f234947c3682"
+  integrity sha512-fyi7TDI/ijKKNZTUJAQqiG5T7YjJXgnzkURqmGj13C6dCqckZBLdl4h7bkhHt/t0WP+zO9/zwroDvANaOqO5Sw==
+
+"@esbuild/android-x64@0.18.20":
+  version "0.18.20"
+  resolved "https://registry.yarnpkg.com/@esbuild/android-x64/-/android-x64-0.18.20.tgz#35cf419c4cfc8babe8893d296cd990e9e9f756f2"
+  integrity sha512-8GDdlePJA8D6zlZYJV/jnrRAi6rOiNaCC/JclcXpB+KIuvfBN4owLtgzY2bsxnx666XjJx2kDPUmnTtR8qKQUg==
+
+"@esbuild/darwin-arm64@0.18.20":
+  version "0.18.20"
+  resolved "https://registry.yarnpkg.com/@esbuild/darwin-arm64/-/darwin-arm64-0.18.20.tgz#08172cbeccf95fbc383399a7f39cfbddaeb0d7c1"
+  integrity sha512-bxRHW5kHU38zS2lPTPOyuyTm+S+eobPUnTNkdJEfAddYgEcll4xkT8DB9d2008DtTbl7uJag2HuE5NZAZgnNEA==
+
+"@esbuild/darwin-x64@0.18.20":
+  version "0.18.20"
+  resolved "https://registry.yarnpkg.com/@esbuild/darwin-x64/-/darwin-x64-0.18.20.tgz#d70d5790d8bf475556b67d0f8b7c5bdff053d85d"
+  integrity sha512-pc5gxlMDxzm513qPGbCbDukOdsGtKhfxD1zJKXjCCcU7ju50O7MeAZ8c4krSJcOIJGFR+qx21yMMVYwiQvyTyQ==
+
+"@esbuild/freebsd-arm64@0.18.20":
+  version "0.18.20"
+  resolved "https://registry.yarnpkg.com/@esbuild/freebsd-arm64/-/freebsd-arm64-0.18.20.tgz#98755cd12707f93f210e2494d6a4b51b96977f54"
+  integrity sha512-yqDQHy4QHevpMAaxhhIwYPMv1NECwOvIpGCZkECn8w2WFHXjEwrBn3CeNIYsibZ/iZEUemj++M26W3cNR5h+Tw==
+
+"@esbuild/freebsd-x64@0.18.20":
+  version "0.18.20"
+  resolved "https://registry.yarnpkg.com/@esbuild/freebsd-x64/-/freebsd-x64-0.18.20.tgz#c1eb2bff03915f87c29cece4c1a7fa1f423b066e"
+  integrity sha512-tgWRPPuQsd3RmBZwarGVHZQvtzfEBOreNuxEMKFcd5DaDn2PbBxfwLcj4+aenoh7ctXcbXmOQIn8HI6mCSw5MQ==
+
+"@esbuild/linux-arm64@0.18.20":
+  version "0.18.20"
+  resolved "https://registry.yarnpkg.com/@esbuild/linux-arm64/-/linux-arm64-0.18.20.tgz#bad4238bd8f4fc25b5a021280c770ab5fc3a02a0"
+  integrity sha512-2YbscF+UL7SQAVIpnWvYwM+3LskyDmPhe31pE7/aoTMFKKzIc9lLbyGUpmmb8a8AixOL61sQ/mFh3jEjHYFvdA==
+
+"@esbuild/linux-arm@0.18.20":
+  version "0.18.20"
+  resolved "https://registry.yarnpkg.com/@esbuild/linux-arm/-/linux-arm-0.18.20.tgz#3e617c61f33508a27150ee417543c8ab5acc73b0"
+  integrity sha512-/5bHkMWnq1EgKr1V+Ybz3s1hWXok7mDFUMQ4cG10AfW3wL02PSZi5kFpYKrptDsgb2WAJIvRcDm+qIvXf/apvg==
+
+"@esbuild/linux-ia32@0.18.20":
+  version "0.18.20"
+  resolved "https://registry.yarnpkg.com/@esbuild/linux-ia32/-/linux-ia32-0.18.20.tgz#699391cccba9aee6019b7f9892eb99219f1570a7"
+  integrity sha512-P4etWwq6IsReT0E1KHU40bOnzMHoH73aXp96Fs8TIT6z9Hu8G6+0SHSw9i2isWrD2nbx2qo5yUqACgdfVGx7TA==
+
+"@esbuild/linux-loong64@0.18.20":
+  version "0.18.20"
+  resolved "https://registry.yarnpkg.com/@esbuild/linux-loong64/-/linux-loong64-0.18.20.tgz#e6fccb7aac178dd2ffb9860465ac89d7f23b977d"
+  integrity sha512-nXW8nqBTrOpDLPgPY9uV+/1DjxoQ7DoB2N8eocyq8I9XuqJ7BiAMDMf9n1xZM9TgW0J8zrquIb/A7s3BJv7rjg==
+
+"@esbuild/linux-mips64el@0.18.20":
+  version "0.18.20"
+  resolved "https://registry.yarnpkg.com/@esbuild/linux-mips64el/-/linux-mips64el-0.18.20.tgz#eeff3a937de9c2310de30622a957ad1bd9183231"
+  integrity sha512-d5NeaXZcHp8PzYy5VnXV3VSd2D328Zb+9dEq5HE6bw6+N86JVPExrA6O68OPwobntbNJ0pzCpUFZTo3w0GyetQ==
+
+"@esbuild/linux-ppc64@0.18.20":
+  version "0.18.20"
+  resolved "https://registry.yarnpkg.com/@esbuild/linux-ppc64/-/linux-ppc64-0.18.20.tgz#2f7156bde20b01527993e6881435ad79ba9599fb"
+  integrity sha512-WHPyeScRNcmANnLQkq6AfyXRFr5D6N2sKgkFo2FqguP44Nw2eyDlbTdZwd9GYk98DZG9QItIiTlFLHJHjxP3FA==
+
+"@esbuild/linux-riscv64@0.18.20":
+  version "0.18.20"
+  resolved "https://registry.yarnpkg.com/@esbuild/linux-riscv64/-/linux-riscv64-0.18.20.tgz#6628389f210123d8b4743045af8caa7d4ddfc7a6"
+  integrity sha512-WSxo6h5ecI5XH34KC7w5veNnKkju3zBRLEQNY7mv5mtBmrP/MjNBCAlsM2u5hDBlS3NGcTQpoBvRzqBcRtpq1A==
+
+"@esbuild/linux-s390x@0.18.20":
+  version "0.18.20"
+  resolved "https://registry.yarnpkg.com/@esbuild/linux-s390x/-/linux-s390x-0.18.20.tgz#255e81fb289b101026131858ab99fba63dcf0071"
+  integrity sha512-+8231GMs3mAEth6Ja1iK0a1sQ3ohfcpzpRLH8uuc5/KVDFneH6jtAJLFGafpzpMRO6DzJ6AvXKze9LfFMrIHVQ==
+
+"@esbuild/linux-x64@0.18.20":
+  version "0.18.20"
+  resolved "https://registry.yarnpkg.com/@esbuild/linux-x64/-/linux-x64-0.18.20.tgz#c7690b3417af318a9b6f96df3031a8865176d338"
+  integrity sha512-UYqiqemphJcNsFEskc73jQ7B9jgwjWrSayxawS6UVFZGWrAAtkzjxSqnoclCXxWtfwLdzU+vTpcNYhpn43uP1w==
+
+"@esbuild/netbsd-x64@0.18.20":
+  version "0.18.20"
+  resolved "https://registry.yarnpkg.com/@esbuild/netbsd-x64/-/netbsd-x64-0.18.20.tgz#30e8cd8a3dded63975e2df2438ca109601ebe0d1"
+  integrity sha512-iO1c++VP6xUBUmltHZoMtCUdPlnPGdBom6IrO4gyKPFFVBKioIImVooR5I83nTew5UOYrk3gIJhbZh8X44y06A==
+
+"@esbuild/openbsd-x64@0.18.20":
+  version "0.18.20"
+  resolved "https://registry.yarnpkg.com/@esbuild/openbsd-x64/-/openbsd-x64-0.18.20.tgz#7812af31b205055874c8082ea9cf9ab0da6217ae"
+  integrity sha512-e5e4YSsuQfX4cxcygw/UCPIEP6wbIL+se3sxPdCiMbFLBWu0eiZOJ7WoD+ptCLrmjZBK1Wk7I6D/I3NglUGOxg==
+
+"@esbuild/sunos-x64@0.18.20":
+  version "0.18.20"
+  resolved "https://registry.yarnpkg.com/@esbuild/sunos-x64/-/sunos-x64-0.18.20.tgz#d5c275c3b4e73c9b0ecd38d1ca62c020f887ab9d"
+  integrity sha512-kDbFRFp0YpTQVVrqUd5FTYmWo45zGaXe0X8E1G/LKFC0v8x0vWrhOWSLITcCn63lmZIxfOMXtCfti/RxN/0wnQ==
+
+"@esbuild/win32-arm64@0.18.20":
+  version "0.18.20"
+  resolved "https://registry.yarnpkg.com/@esbuild/win32-arm64/-/win32-arm64-0.18.20.tgz#73bc7f5a9f8a77805f357fab97f290d0e4820ac9"
+  integrity sha512-ddYFR6ItYgoaq4v4JmQQaAI5s7npztfV4Ag6NrhiaW0RrnOXqBkgwZLofVTlq1daVTQNhtI5oieTvkRPfZrePg==
+
+"@esbuild/win32-ia32@0.18.20":
+  version "0.18.20"
+  resolved "https://registry.yarnpkg.com/@esbuild/win32-ia32/-/win32-ia32-0.18.20.tgz#ec93cbf0ef1085cc12e71e0d661d20569ff42102"
+  integrity sha512-Wv7QBi3ID/rROT08SABTS7eV4hX26sVduqDOTe1MvGMjNd3EjOz4b7zeexIR62GTIEKrfJXKL9LFxTYgkyeu7g==
+
+"@esbuild/win32-x64@0.18.20":
+  version "0.18.20"
+  resolved "https://registry.yarnpkg.com/@esbuild/win32-x64/-/win32-x64-0.18.20.tgz#786c5f41f043b07afb1af37683d7c33668858f6d"
+  integrity sha512-kTdfRcSiDfQca/y9QIkng02avJ+NCaQvrMejlsB3RRv5sE9rRoeBPISaZpKxHELzRxZyLvNts1P27W3wV+8geQ==
+
+"@tsconfig/node10@^1.0.7":
+  version "1.0.8"
+  resolved "https://registry.yarnpkg.com/@tsconfig/node10/-/node10-1.0.8.tgz#c1e4e80d6f964fbecb3359c43bd48b40f7cadad9"
+  integrity sha512-6XFfSQmMgq0CFLY1MslA/CPUfhIL919M1rMsa5lP2P097N2Wd1sSX0tx1u4olM16fLNhtHZpRhedZJphNJqmZg==
+
+"@tsconfig/node12@^1.0.7":
+  version "1.0.9"
+  resolved "https://registry.yarnpkg.com/@tsconfig/node12/-/node12-1.0.9.tgz#62c1f6dee2ebd9aead80dc3afa56810e58e1a04c"
+  integrity sha512-/yBMcem+fbvhSREH+s14YJi18sp7J9jpuhYByADT2rypfajMZZN4WQ6zBGgBKp53NKmqI36wFYDb3yaMPurITw==
+
+"@tsconfig/node14@^1.0.0":
+  version "1.0.1"
+  resolved "https://registry.yarnpkg.com/@tsconfig/node14/-/node14-1.0.1.tgz#95f2d167ffb9b8d2068b0b235302fafd4df711f2"
+  integrity sha512-509r2+yARFfHHE7T6Puu2jjkoycftovhXRqW328PDXTVGKihlb1P8Z9mMZH04ebyajfRY7dedfGynlrFHJUQCg==
+
+"@tsconfig/node16@^1.0.2":
+  version "1.0.2"
+  resolved "https://registry.yarnpkg.com/@tsconfig/node16/-/node16-1.0.2.tgz#423c77877d0569db20e1fc80885ac4118314010e"
+  integrity sha512-eZxlbI8GZscaGS7kkc/trHTT5xgrjH3/1n2JDwusC9iahPKWMRvRjJSAN5mCXviuTGQ/lHnhvv8Q1YTpnfz9gA==
+
+"@types/archiver@^5.3.1":
+  version "5.3.1"
+  resolved "https://registry.yarnpkg.com/@types/archiver/-/archiver-5.3.1.tgz#02991e940a03dd1a32678fead4b4ca03d0e387ca"
+  integrity sha512-wKYZaSXaDvTZuInAWjCeGG7BEAgTWG2zZW0/f7IYFcoHB2X2d9lkVFnrOlXl3W6NrvO6Ml3FLLu8Uksyymcpnw==
+  dependencies:
+    "@types/glob" "*"
+
+"@types/fs-extra@^9.0.13":
+  version "9.0.13"
+  resolved "https://registry.yarnpkg.com/@types/fs-extra/-/fs-extra-9.0.13.tgz#7594fbae04fe7f1918ce8b3d213f74ff44ac1f45"
+  integrity sha512-nEnwB++1u5lVDM2UI4c1+5R+FYaKfaAzS4OococimjVm3nQw3TuzH5UNsocrcTBbhnerblyHj4A49qXbIiZdpA==
+  dependencies:
+    "@types/node" "*"
+
+"@types/glob@*":
+  version "8.0.0"
+  resolved "https://registry.yarnpkg.com/@types/glob/-/glob-8.0.0.tgz#321607e9cbaec54f687a0792b2d1d370739455d2"
+  integrity sha512-l6NQsDDyQUVeoTynNpC9uRvCUint/gSUXQA2euwmTuWGvPY5LSDUu6tkCtJB2SvGQlJQzLaKqcGZP4//7EDveA==
+  dependencies:
+    "@types/minimatch" "*"
+    "@types/node" "*"
+
+"@types/minimatch@*":
+  version "5.1.2"
+  resolved "https://registry.yarnpkg.com/@types/minimatch/-/minimatch-5.1.2.tgz#07508b45797cb81ec3f273011b054cd0755eddca"
+  integrity sha512-K0VQKziLUWkVKiRVrx4a40iPaxTUefQmjtkQofBkYRcoaaL/8rhwDWww9qWbrgicNOgnpIsMxyNIUM4+n6dUIA==
+
+"@types/node@*":
+  version "16.11.12"
+  resolved "https://registry.yarnpkg.com/@types/node/-/node-16.11.12.tgz#ac7fb693ac587ee182c3780c26eb65546a1a3c10"
+  integrity sha512-+2Iggwg7PxoO5Kyhvsq9VarmPbIelXP070HMImEpbtGCoyWNINQj4wzjbQCXzdHTRXnqufutJb5KAURZANNBAw==
+
+"@types/ws@^8.2.2":
+  version "8.2.2"
+  resolved "https://registry.yarnpkg.com/@types/ws/-/ws-8.2.2.tgz#7c5be4decb19500ae6b3d563043cd407bf366c21"
+  integrity sha512-NOn5eIcgWLOo6qW8AcuLZ7G8PycXu0xTxxkS6Q18VWFxgPUSOwV0pBj2a/4viNZVu25i7RIB7GttdkAIUUXOOg==
+  dependencies:
+    "@types/node" "*"
+
+acorn-walk@^8.1.1:
+  version "8.2.0"
+  resolved "https://registry.yarnpkg.com/acorn-walk/-/acorn-walk-8.2.0.tgz#741210f2e2426454508853a2f44d0ab83b7f69c1"
+  integrity sha512-k+iyHEuPgSw6SbuDpGQM+06HQUa04DZ3o+F6CSzXMvvI5KMvnaEqXe+YVe555R9nn6GPt404fos4wcgpw12SDA==
+
+acorn@^8.4.1:
+  version "8.7.0"
+  resolved "https://registry.yarnpkg.com/acorn/-/acorn-8.7.0.tgz#90951fde0f8f09df93549481e5fc141445b791cf"
+  integrity sha512-V/LGr1APy+PXIwKebEWrkZPwoeoF+w1jiOBUmuxuiUIaOHtob8Qc9BTrYo7VuI5fR8tqsy+buA2WFooR5olqvQ==
+
+ansi-styles@^3.2.1:
+  version "3.2.1"
+  resolved "https://registry.yarnpkg.com/ansi-styles/-/ansi-styles-3.2.1.tgz#41fbb20243e50b12be0f04b8dedbf07520ce841d"
+  integrity sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==
+  dependencies:
+    color-convert "^1.9.0"
+
+archiver-utils@^2.1.0:
+  version "2.1.0"
+  resolved "https://registry.yarnpkg.com/archiver-utils/-/archiver-utils-2.1.0.tgz#e8a460e94b693c3e3da182a098ca6285ba9249e2"
+  integrity sha512-bEL/yUb/fNNiNTuUz979Z0Yg5L+LzLxGJz8x79lYmR54fmTIb6ob/hNQgkQnIUDWIFjZVQwl9Xs356I6BAMHfw==
+  dependencies:
+    glob "^7.1.4"
+    graceful-fs "^4.2.0"
+    lazystream "^1.0.0"
+    lodash.defaults "^4.2.0"
+    lodash.difference "^4.5.0"
+    lodash.flatten "^4.4.0"
+    lodash.isplainobject "^4.0.6"
+    lodash.union "^4.6.0"
+    normalize-path "^3.0.0"
+    readable-stream "^2.0.0"
+
+archiver@^5.3.1:
+  version "5.3.1"
+  resolved "https://registry.yarnpkg.com/archiver/-/archiver-5.3.1.tgz#21e92811d6f09ecfce649fbefefe8c79e57cbbb6"
+  integrity sha512-8KyabkmbYrH+9ibcTScQ1xCJC/CGcugdVIwB+53f5sZziXgwUh3iXlAlANMxcZyDEfTHMe6+Z5FofV8nopXP7w==
+  dependencies:
+    archiver-utils "^2.1.0"
+    async "^3.2.3"
+    buffer-crc32 "^0.2.1"
+    readable-stream "^3.6.0"
+    readdir-glob "^1.0.0"
+    tar-stream "^2.2.0"
+    zip-stream "^4.1.0"
+
+arg@^4.1.0:
+  version "4.1.3"
+  resolved "https://registry.yarnpkg.com/arg/-/arg-4.1.3.tgz#269fc7ad5b8e42cb63c896d5666017261c144089"
+  integrity sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA==
+
+array-back@^3.0.1, array-back@^3.1.0:
+  version "3.1.0"
+  resolved "https://registry.yarnpkg.com/array-back/-/array-back-3.1.0.tgz#b8859d7a508871c9a7b2cf42f99428f65e96bfb0"
+  integrity sha512-TkuxA4UCOvxuDK6NZYXCalszEzj+TLszyASooky+i742l9TqsOdYCMJJupxRic61hwquNtppB3hgcuq9SVSH1Q==
+
+array-back@^4.0.1:
+  version "4.0.2"
+  resolved "https://registry.yarnpkg.com/array-back/-/array-back-4.0.2.tgz#8004e999a6274586beeb27342168652fdb89fa1e"
+  integrity sha512-NbdMezxqf94cnNfWLL7V/im0Ub+Anbb0IoZhvzie8+4HJ4nMQuzHuy49FkGYCJK2yAloZ3meiB6AVMClbrI1vg==
+
+async@^3.2.3:
+  version "3.2.3"
+  resolved "https://registry.yarnpkg.com/async/-/async-3.2.3.tgz#ac53dafd3f4720ee9e8a160628f18ea91df196c9"
+  integrity sha512-spZRyzKL5l5BZQrr/6m/SqFdBN0q3OCI0f9rjfBzCMBIP4p75P620rR3gTmaksNOhmzgdxcaxdNfMy6anrbM0g==
+
+balanced-match@^1.0.0:
+  version "1.0.2"
+  resolved "https://registry.yarnpkg.com/balanced-match/-/balanced-match-1.0.2.tgz#e83e3a7e3f300b34cb9d87f615fa0cbf357690ee"
+  integrity sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==
+
+base64-js@^1.3.1:
+  version "1.5.1"
+  resolved "https://registry.yarnpkg.com/base64-js/-/base64-js-1.5.1.tgz#1b1b440160a5bf7ad40b650f095963481903930a"
+  integrity sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==
+
+bl@^4.0.3:
+  version "4.1.0"
+  resolved "https://registry.yarnpkg.com/bl/-/bl-4.1.0.tgz#451535264182bec2fbbc83a62ab98cf11d9f7b3a"
+  integrity sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==
+  dependencies:
+    buffer "^5.5.0"
+    inherits "^2.0.4"
+    readable-stream "^3.4.0"
+
+brace-expansion@^1.1.7:
+  version "1.1.11"
+  resolved "https://registry.yarnpkg.com/brace-expansion/-/brace-expansion-1.1.11.tgz#3c7fcbf529d87226f3d2f52b966ff5271eb441dd"
+  integrity sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==
+  dependencies:
+    balanced-match "^1.0.0"
+    concat-map "0.0.1"
+
+brace-expansion@^2.0.1:
+  version "2.0.1"
+  resolved "https://registry.yarnpkg.com/brace-expansion/-/brace-expansion-2.0.1.tgz#1edc459e0f0c548486ecf9fc99f2221364b9a0ae"
+  integrity sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==
+  dependencies:
+    balanced-match "^1.0.0"
+
+buffer-crc32@^0.2.1, buffer-crc32@^0.2.13:
+  version "0.2.13"
+  resolved "https://registry.yarnpkg.com/buffer-crc32/-/buffer-crc32-0.2.13.tgz#0d333e3f00eac50aa1454abd30ef8c2a5d9a7242"
+  integrity sha512-VO9Ht/+p3SN7SKWqcrgEzjGbRSJYTx+Q1pTQC0wrWqHx0vpJraQ6GtHx8tvcg1rlK1byhU5gccxgOgj7B0TDkQ==
+
+buffer@^5.5.0:
+  version "5.7.1"
+  resolved "https://registry.yarnpkg.com/buffer/-/buffer-5.7.1.tgz#ba62e7c13133053582197160851a8f648e99eed0"
+  integrity sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==
+  dependencies:
+    base64-js "^1.3.1"
+    ieee754 "^1.1.13"
+
+chalk@^2.4.2:
+  version "2.4.2"
+  resolved "https://registry.yarnpkg.com/chalk/-/chalk-2.4.2.tgz#cd42541677a54333cf541a49108c1432b44c9424"
+  integrity sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==
+  dependencies:
+    ansi-styles "^3.2.1"
+    escape-string-regexp "^1.0.5"
+    supports-color "^5.3.0"
+
+color-convert@^1.9.0, color-convert@^1.9.3:
+  version "1.9.3"
+  resolved "https://registry.yarnpkg.com/color-convert/-/color-convert-1.9.3.tgz#bb71850690e1f136567de629d2d5471deda4c1e8"
+  integrity sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==
+  dependencies:
+    color-name "1.1.3"
+
+color-name@1.1.3:
+  version "1.1.3"
+  resolved "https://registry.yarnpkg.com/color-name/-/color-name-1.1.3.tgz#a7d0558bd89c42f795dd42328f740831ca53bc25"
+  integrity sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=
+
+color-name@^1.0.0:
+  version "1.1.4"
+  resolved "https://registry.yarnpkg.com/color-name/-/color-name-1.1.4.tgz#c2a09a87acbde69543de6f63fa3995c826c536a2"
+  integrity sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==
+
+color-string@^1.6.0:
+  version "1.9.0"
+  resolved "https://registry.yarnpkg.com/color-string/-/color-string-1.9.0.tgz#63b6ebd1bec11999d1df3a79a7569451ac2be8aa"
+  integrity sha512-9Mrz2AQLefkH1UvASKj6v6hj/7eWgjnT/cVsR8CumieLoT+g900exWeNogqtweI8dxloXN9BDQTYro1oWu/5CQ==
+  dependencies:
+    color-name "^1.0.0"
+    simple-swizzle "^0.2.2"
+
+color@^3.1.3:
+  version "3.2.1"
+  resolved "https://registry.yarnpkg.com/color/-/color-3.2.1.tgz#3544dc198caf4490c3ecc9a790b54fe9ff45e164"
+  integrity sha512-aBl7dZI9ENN6fUGC7mWpMTPNHmWUSNan9tuWN6ahh5ZLNk9baLJOnSMlrQkHcrfFgz2/RigjUVAjdx36VcemKA==
+  dependencies:
+    color-convert "^1.9.3"
+    color-string "^1.6.0"
+
+colors@1.4.0:
+  version "1.4.0"
+  resolved "https://registry.yarnpkg.com/colors/-/colors-1.4.0.tgz#c50491479d4c1bdaed2c9ced32cf7c7dc2360f78"
+  integrity sha512-a+UqTh4kgZg/SlGvfbzDHpgRu7AAQOmmqRHJnxhRZICKFUT91brVhNNt58CMWU9PsBbv3PDCZUHbVxuDiH2mtA==
+
+colorspace@1.1.x:
+  version "1.1.4"
+  resolved "https://registry.yarnpkg.com/colorspace/-/colorspace-1.1.4.tgz#8d442d1186152f60453bf8070cd66eb364e59243"
+  integrity sha512-BgvKJiuVu1igBUF2kEjRCZXol6wiiGbY5ipL/oVPwm0BL9sIpMIzM8IK7vwuxIIzOXMV3Ey5w+vxhm0rR/TN8w==
+  dependencies:
+    color "^3.1.3"
+    text-hex "1.0.x"
+
+command-line-args@^5.1.1:
+  version "5.2.1"
+  resolved "https://registry.yarnpkg.com/command-line-args/-/command-line-args-5.2.1.tgz#c44c32e437a57d7c51157696893c5909e9cec42e"
+  integrity sha512-H4UfQhZyakIjC74I9d34fGYDwk3XpSr17QhEd0Q3I9Xq1CETHo4Hcuo87WyWHpAF1aSLjLRf5lD9ZGX2qStUvg==
+  dependencies:
+    array-back "^3.1.0"
+    find-replace "^3.0.0"
+    lodash.camelcase "^4.3.0"
+    typical "^4.0.0"
+
+command-line-usage@^6.1.1:
+  version "6.1.1"
+  resolved "https://registry.yarnpkg.com/command-line-usage/-/command-line-usage-6.1.1.tgz#c908e28686108917758a49f45efb4f02f76bc03f"
+  integrity sha512-F59pEuAR9o1SF/bD0dQBDluhpT4jJQNWUHEuVBqpDmCUo6gPjCi+m9fCWnWZVR/oG6cMTUms4h+3NPl74wGXvA==
+  dependencies:
+    array-back "^4.0.1"
+    chalk "^2.4.2"
+    table-layout "^1.0.1"
+    typical "^5.2.0"
+
+compress-commons@^4.1.0:
+  version "4.1.1"
+  resolved "https://registry.yarnpkg.com/compress-commons/-/compress-commons-4.1.1.tgz#df2a09a7ed17447642bad10a85cc9a19e5c42a7d"
+  integrity sha512-QLdDLCKNV2dtoTorqgxngQCMA+gWXkM/Nwu7FpeBhk/RdkzimqC3jueb/FDmaZeXh+uby1jkBqE3xArsLBE5wQ==
+  dependencies:
+    buffer-crc32 "^0.2.13"
+    crc32-stream "^4.0.2"
+    normalize-path "^3.0.0"
+    readable-stream "^3.6.0"
+
+concat-map@0.0.1:
+  version "0.0.1"
+  resolved "https://registry.yarnpkg.com/concat-map/-/concat-map-0.0.1.tgz#d8a96bd77fd68df7793a73036a3ba0d5405d477b"
+  integrity sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=
+
+core-util-is@~1.0.0:
+  version "1.0.3"
+  resolved "https://registry.yarnpkg.com/core-util-is/-/core-util-is-1.0.3.tgz#a6042d3634c2b27e9328f837b965fac83808db85"
+  integrity sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==
+
+crc-32@^1.2.0:
+  version "1.2.2"
+  resolved "https://registry.yarnpkg.com/crc-32/-/crc-32-1.2.2.tgz#3cad35a934b8bf71f25ca524b6da51fb7eace2ff"
+  integrity sha512-ROmzCKrTnOwybPcJApAA6WBWij23HVfGVNKqqrZpuyZOHqK2CwHSvpGuyt/UNNvaIjEd8X5IFGp4Mh+Ie1IHJQ==
+
+crc32-stream@^4.0.2:
+  version "4.0.2"
+  resolved "https://registry.yarnpkg.com/crc32-stream/-/crc32-stream-4.0.2.tgz#c922ad22b38395abe9d3870f02fa8134ed709007"
+  integrity sha512-DxFZ/Hk473b/muq1VJ///PMNLj0ZMnzye9thBpmjpJKCc5eMgB95aK8zCGrGfQ90cWo561Te6HK9D+j4KPdM6w==
+  dependencies:
+    crc-32 "^1.2.0"
+    readable-stream "^3.4.0"
+
+create-require@^1.1.0:
+  version "1.1.1"
+  resolved "https://registry.yarnpkg.com/create-require/-/create-require-1.1.1.tgz#c1d7e8f1e5f6cfc9ff65f9cd352d37348756c333"
+  integrity sha512-dcKFX3jn0MpIaXjisoRvexIJVEKzaq7z2rZKxf+MSr9TkdmHmsU4m2lcLojrj/FHl8mk5VxMmYA+ftRkP/3oKQ==
+
+deep-extend@~0.6.0:
+  version "0.6.0"
+  resolved "https://registry.yarnpkg.com/deep-extend/-/deep-extend-0.6.0.tgz#c4fa7c95404a17a9c3e8ca7e1537312b736330ac"
+  integrity sha512-LOHxIOaPYdHlJRtCQfDIVZtfw/ufM8+rVj649RIHzcm/vGwQRXFt6OPqIFWsm2XEMrNIEtWR64sY1LEKD2vAOA==
+
+diff@^4.0.1:
+  version "4.0.2"
+  resolved "https://registry.yarnpkg.com/diff/-/diff-4.0.2.tgz#60f3aecb89d5fae520c11aa19efc2bb982aade7d"
+  integrity sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==
+
+enabled@2.0.x:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/enabled/-/enabled-2.0.0.tgz#f9dd92ec2d6f4bbc0d5d1e64e21d61cd4665e7c2"
+  integrity sha512-AKrN98kuwOzMIdAizXGI86UFBoo26CL21UM763y1h/GMSJ4/OHU9k2YlsmBpyScFo/wbLzWQJBMCW4+IO3/+OQ==
+
+end-of-stream@^1.4.1:
+  version "1.4.4"
+  resolved "https://registry.yarnpkg.com/end-of-stream/-/end-of-stream-1.4.4.tgz#5ae64a5f45057baf3626ec14da0ca5e4b2431eb0"
+  integrity sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==
+  dependencies:
+    once "^1.4.0"
+
+esbuild@^0.18.10:
+  version "0.18.20"
+  resolved "https://registry.yarnpkg.com/esbuild/-/esbuild-0.18.20.tgz#4709f5a34801b43b799ab7d6d82f7284a9b7a7a6"
+  integrity sha512-ceqxoedUrcayh7Y7ZX6NdbbDzGROiyVBgC4PriJThBKSVPWnnFHZAkfI1lJT8QFkOwH4qOS2SJkS4wvpGl8BpA==
+  optionalDependencies:
+    "@esbuild/android-arm" "0.18.20"
+    "@esbuild/android-arm64" "0.18.20"
+    "@esbuild/android-x64" "0.18.20"
+    "@esbuild/darwin-arm64" "0.18.20"
+    "@esbuild/darwin-x64" "0.18.20"
+    "@esbuild/freebsd-arm64" "0.18.20"
+    "@esbuild/freebsd-x64" "0.18.20"
+    "@esbuild/linux-arm" "0.18.20"
+    "@esbuild/linux-arm64" "0.18.20"
+    "@esbuild/linux-ia32" "0.18.20"
+    "@esbuild/linux-loong64" "0.18.20"
+    "@esbuild/linux-mips64el" "0.18.20"
+    "@esbuild/linux-ppc64" "0.18.20"
+    "@esbuild/linux-riscv64" "0.18.20"
+    "@esbuild/linux-s390x" "0.18.20"
+    "@esbuild/linux-x64" "0.18.20"
+    "@esbuild/netbsd-x64" "0.18.20"
+    "@esbuild/openbsd-x64" "0.18.20"
+    "@esbuild/sunos-x64" "0.18.20"
+    "@esbuild/win32-arm64" "0.18.20"
+    "@esbuild/win32-ia32" "0.18.20"
+    "@esbuild/win32-x64" "0.18.20"
+
+escape-string-regexp@^1.0.5:
+  version "1.0.5"
+  resolved "https://registry.yarnpkg.com/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz#1b61c0562190a8dff6ae3bb2cf0200ca130b86d4"
+  integrity sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=
+
+fecha@^4.2.0:
+  version "4.2.1"
+  resolved "https://registry.yarnpkg.com/fecha/-/fecha-4.2.1.tgz#0a83ad8f86ef62a091e22bb5a039cd03d23eecce"
+  integrity sha512-MMMQ0ludy/nBs1/o0zVOiKTpG7qMbonKUzjJgQFEuvq6INZ1OraKPRAWkBq5vlKLOUMpmNYG1JoN3oDPUQ9m3Q==
+
+find-replace@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/find-replace/-/find-replace-3.0.0.tgz#3e7e23d3b05167a76f770c9fbd5258b0def68c38"
+  integrity sha512-6Tb2myMioCAgv5kfvP5/PkZZ/ntTpVK39fHY7WkWBgvbeE+VHd/tZuZ4mrC+bxh4cfOZeYKVPaJIZtZXV7GNCQ==
+  dependencies:
+    array-back "^3.0.1"
+
+fn.name@1.x.x:
+  version "1.1.0"
+  resolved "https://registry.yarnpkg.com/fn.name/-/fn.name-1.1.0.tgz#26cad8017967aea8731bc42961d04a3d5988accc"
+  integrity sha512-GRnmB5gPyJpAhTQdSZTSp9uaPSvl09KoYcMQtsB9rQoOmzs9dH6ffeccH+Z+cv6P68Hu5bC6JjRh4Ah/mHSNRw==
+
+fs-constants@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/fs-constants/-/fs-constants-1.0.0.tgz#6be0de9be998ce16af8afc24497b9ee9b7ccd9ad"
+  integrity sha512-y6OAwoSIf7FyjMIv94u+b5rdheZEjzR63GTyZJm5qh4Bi+2YgwLCcI/fPFZkL5PSixOt6ZNKm+w+Hfp/Bciwow==
+
+fs-extra@^10.0.0:
+  version "10.0.0"
+  resolved "https://registry.yarnpkg.com/fs-extra/-/fs-extra-10.0.0.tgz#9ff61b655dde53fb34a82df84bb214ce802e17c1"
+  integrity sha512-C5owb14u9eJwizKGdchcDUQeFtlSHHthBk8pbX9Vc1PFZrLombudjDnNns88aYslCyF6IY5SUw3Roz6xShcEIQ==
+  dependencies:
+    graceful-fs "^4.2.0"
+    jsonfile "^6.0.1"
+    universalify "^2.0.0"
+
+fs.realpath@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/fs.realpath/-/fs.realpath-1.0.0.tgz#1504ad2523158caa40db4a2787cb01411994ea4f"
+  integrity sha1-FQStJSMVjKpA20onh8sBQRmU6k8=
+
+fsevents@~2.3.2:
+  version "2.3.2"
+  resolved "https://registry.yarnpkg.com/fsevents/-/fsevents-2.3.2.tgz#8a526f78b8fdf4623b709e0b975c52c24c02fd1a"
+  integrity sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==
+
+glob@^7.1.4:
+  version "7.2.3"
+  resolved "https://registry.yarnpkg.com/glob/-/glob-7.2.3.tgz#b8df0fb802bbfa8e89bd1d938b4e16578ed44f2b"
+  integrity sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==
+  dependencies:
+    fs.realpath "^1.0.0"
+    inflight "^1.0.4"
+    inherits "2"
+    minimatch "^3.1.1"
+    once "^1.3.0"
+    path-is-absolute "^1.0.0"
+
+glob@^7.1.6:
+  version "7.2.0"
+  resolved "https://registry.yarnpkg.com/glob/-/glob-7.2.0.tgz#d15535af7732e02e948f4c41628bd910293f6023"
+  integrity sha512-lmLf6gtyrPq8tTjSmrO94wBeQbFR3HbLHbuyD69wuyQkImp2hWqMGB47OX65FBkPffO641IP9jWa1z4ivqG26Q==
+  dependencies:
+    fs.realpath "^1.0.0"
+    inflight "^1.0.4"
+    inherits "2"
+    minimatch "^3.0.4"
+    once "^1.3.0"
+    path-is-absolute "^1.0.0"
+
+graceful-fs@^4.1.6, graceful-fs@^4.2.0:
+  version "4.2.8"
+  resolved "https://registry.yarnpkg.com/graceful-fs/-/graceful-fs-4.2.8.tgz#e412b8d33f5e006593cbd3cee6df9f2cebbe802a"
+  integrity sha512-qkIilPUYcNhJpd33n0GBXTB1MMPp14TxEsEs0pTrsSVucApsYzW5V+Q8Qxhik6KU3evy+qkAAowTByymK0avdg==
+
+has-flag@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/has-flag/-/has-flag-3.0.0.tgz#b5d454dc2199ae225699f3467e5a07f3b955bafd"
+  integrity sha1-tdRU3CGZriJWmfNGfloH87lVuv0=
+
+ieee754@^1.1.13:
+  version "1.2.1"
+  resolved "https://registry.yarnpkg.com/ieee754/-/ieee754-1.2.1.tgz#8eb7a10a63fff25d15a57b001586d177d1b0d352"
+  integrity sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==
+
+immediate@~3.0.5:
+  version "3.0.6"
+  resolved "https://registry.yarnpkg.com/immediate/-/immediate-3.0.6.tgz#9db1dbd0faf8de6fbe0f5dd5e56bb606280de69b"
+  integrity sha512-XXOFtyqDjNDAQxVfYxuF7g9Il/IbWmmlQg2MYKOH8ExIT1qg6xc4zyS3HaEEATgs1btfzxq15ciUiY7gjSXRGQ==
+
+inflight@^1.0.4:
+  version "1.0.6"
+  resolved "https://registry.yarnpkg.com/inflight/-/inflight-1.0.6.tgz#49bd6331d7d02d0c09bc910a1075ba8165b56df9"
+  integrity sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=
+  dependencies:
+    once "^1.3.0"
+    wrappy "1"
+
+inherits@2, inherits@^2.0.3, inherits@^2.0.4, inherits@~2.0.3:
+  version "2.0.4"
+  resolved "https://registry.yarnpkg.com/inherits/-/inherits-2.0.4.tgz#0fa2c64f932917c3433a0ded55363aae37416b7c"
+  integrity sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==
+
+is-arrayish@^0.3.1:
+  version "0.3.2"
+  resolved "https://registry.yarnpkg.com/is-arrayish/-/is-arrayish-0.3.2.tgz#4574a2ae56f7ab206896fb431eaeed066fdf8f03"
+  integrity sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==
+
+is-stream@^2.0.0:
+  version "2.0.1"
+  resolved "https://registry.yarnpkg.com/is-stream/-/is-stream-2.0.1.tgz#fac1e3d53b97ad5a9d0ae9cef2389f5810a5c077"
+  integrity sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==
+
+isarray@~1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/isarray/-/isarray-1.0.0.tgz#bb935d48582cba168c06834957a54a3e07124f11"
+  integrity sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==
+
+jsonfile@^6.0.1:
+  version "6.1.0"
+  resolved "https://registry.yarnpkg.com/jsonfile/-/jsonfile-6.1.0.tgz#bc55b2634793c679ec6403094eb13698a6ec0aae"
+  integrity sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==
+  dependencies:
+    universalify "^2.0.0"
+  optionalDependencies:
+    graceful-fs "^4.1.6"
+
+jsxbin@^2.2.0:
+  version "2.2.0"
+  resolved "https://registry.yarnpkg.com/jsxbin/-/jsxbin-2.2.0.tgz#7058827ed3fa1591e2252caf9f457fd92810b2ec"
+  integrity sha512-FHrqG02s5FW9N1a9Cjv2b+fjr1vtXgE8NUbYd103O6DEUdKunvY7b/UZSGx9+Fz/y9Grz09d+n/9vbH1Cz21lw==
+  dependencies:
+    command-line-args "^5.1.1"
+    command-line-usage "^6.1.1"
+    glob "^7.1.6"
+    mkdirp "^1.0.4"
+    winston "^3.3.3"
+
+jszip@^3.10.1:
+  version "3.10.1"
+  resolved "https://registry.yarnpkg.com/jszip/-/jszip-3.10.1.tgz#34aee70eb18ea1faec2f589208a157d1feb091c2"
+  integrity sha512-xXDvecyTpGLrqFrvkrUSoxxfJI5AH7U8zxxtVclpsUtMCq4JQ290LY8AW5c7Ggnr/Y/oK+bQMbqK2qmtk3pN4g==
+  dependencies:
+    lie "~3.3.0"
+    pako "~1.0.2"
+    readable-stream "~2.3.6"
+    setimmediate "^1.0.5"
+
+kuler@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/kuler/-/kuler-2.0.0.tgz#e2c570a3800388fb44407e851531c1d670b061b3"
+  integrity sha512-Xq9nH7KlWZmXAtodXDDRE7vs6DU1gTU8zYDHDiWLSip45Egwq3plLHzPn27NgvzL2r1LMPC1vdqh98sQxtqj4A==
+
+lazystream@^1.0.0:
+  version "1.0.1"
+  resolved "https://registry.yarnpkg.com/lazystream/-/lazystream-1.0.1.tgz#494c831062f1f9408251ec44db1cba29242a2638"
+  integrity sha512-b94GiNHQNy6JNTrt5w6zNyffMrNkXZb3KTkCZJb2V1xaEGCk093vkZ2jk3tpaeP33/OiXC+WvK9AxUebnf5nbw==
+  dependencies:
+    readable-stream "^2.0.5"
+
+lie@~3.3.0:
+  version "3.3.0"
+  resolved "https://registry.yarnpkg.com/lie/-/lie-3.3.0.tgz#dcf82dee545f46074daf200c7c1c5a08e0f40f6a"
+  integrity sha512-UaiMJzeWRlEujzAuw5LokY1L5ecNQYZKfmyZ9L7wDHb/p5etKaxXhohBcrw0EYby+G/NA52vRSN4N39dxHAIwQ==
+  dependencies:
+    immediate "~3.0.5"
+
+lodash.camelcase@^4.3.0:
+  version "4.3.0"
+  resolved "https://registry.yarnpkg.com/lodash.camelcase/-/lodash.camelcase-4.3.0.tgz#b28aa6288a2b9fc651035c7711f65ab6190331a6"
+  integrity sha1-soqmKIorn8ZRA1x3EfZathkDMaY=
+
+lodash.defaults@^4.2.0:
+  version "4.2.0"
+  resolved "https://registry.yarnpkg.com/lodash.defaults/-/lodash.defaults-4.2.0.tgz#d09178716ffea4dde9e5fb7b37f6f0802274580c"
+  integrity sha512-qjxPLHd3r5DnsdGacqOMU6pb/avJzdh9tFX2ymgoZE27BmjXrNy/y4LoaiTeAb+O3gL8AfpJGtqfX/ae2leYYQ==
+
+lodash.difference@^4.5.0:
+  version "4.5.0"
+  resolved "https://registry.yarnpkg.com/lodash.difference/-/lodash.difference-4.5.0.tgz#9ccb4e505d486b91651345772885a2df27fd017c"
+  integrity sha512-dS2j+W26TQ7taQBGN8Lbbq04ssV3emRw4NY58WErlTO29pIqS0HmoT5aJ9+TUQ1N3G+JOZSji4eugsWwGp9yPA==
+
+lodash.flatten@^4.4.0:
+  version "4.4.0"
+  resolved "https://registry.yarnpkg.com/lodash.flatten/-/lodash.flatten-4.4.0.tgz#f31c22225a9632d2bbf8e4addbef240aa765a61f"
+  integrity sha512-C5N2Z3DgnnKr0LOpv/hKCgKdb7ZZwafIrsesve6lmzvZIRZRGaZ/l6Q8+2W7NaT+ZwO3fFlSCzCzrDCFdJfZ4g==
+
+lodash.isplainobject@^4.0.6:
+  version "4.0.6"
+  resolved "https://registry.yarnpkg.com/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz#7c526a52d89b45c45cc690b88163be0497f550cb"
+  integrity sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==
+
+lodash.union@^4.6.0:
+  version "4.6.0"
+  resolved "https://registry.yarnpkg.com/lodash.union/-/lodash.union-4.6.0.tgz#48bb5088409f16f1821666641c44dd1aaae3cd88"
+  integrity sha512-c4pB2CdGrGdjMKYLA+XiRDO7Y0PRQbm/Gzg8qMj+QH+pFVAoTp5sBpO0odL3FjoPCGjK96p6qsP+yQoiLoOBcw==
+
+logform@^2.3.2:
+  version "2.3.2"
+  resolved "https://registry.yarnpkg.com/logform/-/logform-2.3.2.tgz#68babe6a74ab09a1fd15a9b1e6cbc7713d41cb5b"
+  integrity sha512-V6JiPThZzTsbVRspNO6TmHkR99oqYTs8fivMBYQkjZj6rxW92KxtDCPE6IkAk1DNBnYKNkjm4jYBm6JDUcyhOA==
+  dependencies:
+    colors "1.4.0"
+    fecha "^4.2.0"
+    ms "^2.1.1"
+    safe-stable-stringify "^1.1.0"
+    triple-beam "^1.3.0"
+
+magic-string@^0.25.7:
+  version "0.25.7"
+  resolved "https://registry.yarnpkg.com/magic-string/-/magic-string-0.25.7.tgz#3f497d6fd34c669c6798dcb821f2ef31f5445051"
+  integrity sha512-4CrMT5DOHTDk4HYDlzmwu4FVCcIYI8gauveasrdCu2IKIFOJ3f0v/8MDGJCDL9oD2ppz/Av1b0Nj345H9M+XIA==
+  dependencies:
+    sourcemap-codec "^1.4.4"
+
+make-error@^1.1.1:
+  version "1.3.6"
+  resolved "https://registry.yarnpkg.com/make-error/-/make-error-1.3.6.tgz#2eb2e37ea9b67c4891f684a1394799af484cf7a2"
+  integrity sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==
+
+minimatch@^3.0.4:
+  version "3.0.5"
+  resolved "https://registry.yarnpkg.com/minimatch/-/minimatch-3.0.5.tgz#4da8f1290ee0f0f8e83d60ca69f8f134068604a3"
+  integrity sha512-tUpxzX0VAzJHjLu0xUfFv1gwVp9ba3IOuRAVH2EGuRW8a5emA2FlACLqiT/lDVtS1W+TGNwqz3sWaNyLgDJWuw==
+  dependencies:
+    brace-expansion "^1.1.7"
+
+minimatch@^3.1.1:
+  version "3.1.2"
+  resolved "https://registry.yarnpkg.com/minimatch/-/minimatch-3.1.2.tgz#19cd194bfd3e428f049a70817c038d89ab4be35b"
+  integrity sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==
+  dependencies:
+    brace-expansion "^1.1.7"
+
+minimatch@^5.1.0:
+  version "5.1.2"
+  resolved "https://registry.yarnpkg.com/minimatch/-/minimatch-5.1.2.tgz#0939d7d6f0898acbd1508abe534d1929368a8fff"
+  integrity sha512-bNH9mmM9qsJ2X4r2Nat1B//1dJVcn3+iBLa3IgqJ7EbGaDNepL9QSHOxN4ng33s52VMMhhIfgCYDk3C4ZmlDAg==
+  dependencies:
+    brace-expansion "^2.0.1"
+
+mkdirp@^1.0.4:
+  version "1.0.4"
+  resolved "https://registry.yarnpkg.com/mkdirp/-/mkdirp-1.0.4.tgz#3eb5ed62622756d79a5f0e2a221dfebad75c2f7e"
+  integrity sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==
+
+ms@^2.1.1:
+  version "2.1.3"
+  resolved "https://registry.yarnpkg.com/ms/-/ms-2.1.3.tgz#574c8138ce1d2b5861f0b44579dbadd60c6615b2"
+  integrity sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==
+
+nanoid@^3.3.7:
+  version "3.3.7"
+  resolved "https://registry.yarnpkg.com/nanoid/-/nanoid-3.3.7.tgz#d0c301a691bc8d54efa0a2226ccf3fe2fd656bd8"
+  integrity sha512-eSRppjcPIatRIMC1U6UngP8XFcz8MQWGQdt1MTBQ7NaAmvXDfvNxbvWV3x2y6CdEUciCSsDHDQZbhYaB8QEo2g==
+
+normalize-path@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/normalize-path/-/normalize-path-3.0.0.tgz#0dcd69ff23a1c9b11fd0978316644a0388216a65"
+  integrity sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==
+
+once@^1.3.0, once@^1.4.0:
+  version "1.4.0"
+  resolved "https://registry.yarnpkg.com/once/-/once-1.4.0.tgz#583b1aa775961d4b113ac17d9c50baef9dd76bd1"
+  integrity sha1-WDsap3WWHUsROsF9nFC6753Xa9E=
+  dependencies:
+    wrappy "1"
+
+one-time@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/one-time/-/one-time-1.0.0.tgz#e06bc174aed214ed58edede573b433bbf827cb45"
+  integrity sha512-5DXOiRKwuSEcQ/l0kGCF6Q3jcADFv5tSmRaJck/OqkVFcOzutB134KRSfF0xDrL39MNnqxbHBbUUcjZIhTgb2g==
+  dependencies:
+    fn.name "1.x.x"
+
+pako@~1.0.2:
+  version "1.0.11"
+  resolved "https://registry.yarnpkg.com/pako/-/pako-1.0.11.tgz#6c9599d340d54dfd3946380252a35705a6b992bf"
+  integrity sha512-4hLB8Py4zZce5s4yd9XzopqwVv/yGNhV1Bl8NTmCq1763HeK2+EwVTv+leGeL13Dnh2wfbqowVPXCIO0z4taYw==
+
+path-is-absolute@^1.0.0:
+  version "1.0.1"
+  resolved "https://registry.yarnpkg.com/path-is-absolute/-/path-is-absolute-1.0.1.tgz#174b9268735534ffbc7ace6bf53a5a9e1b5c5f5f"
+  integrity sha1-F0uSaHNVNP+8es5r9TpanhtcX18=
+
+picocolors@^1.0.0:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/picocolors/-/picocolors-1.0.0.tgz#cb5bdc74ff3f51892236eaf79d68bc44564ab81c"
+  integrity sha512-1fygroTLlHu66zi26VoTDv8yRgm0Fccecssto+MhsZ0D/DGW2sm8E8AjW7NU5VVTRt5GxbeZ5qBuJr+HyLYkjQ==
+
+postcss@^8.4.27:
+  version "8.4.32"
+  resolved "https://registry.yarnpkg.com/postcss/-/postcss-8.4.32.tgz#1dac6ac51ab19adb21b8b34fd2d93a86440ef6c9"
+  integrity sha512-D/kj5JNu6oo2EIy+XL/26JEDTlIbB8hw85G8StOE6L74RQAVVP5rej6wxCNqyMbR4RkPfqvezVbPw81Ngd6Kcw==
+  dependencies:
+    nanoid "^3.3.7"
+    picocolors "^1.0.0"
+    source-map-js "^1.0.2"
+
+prettify-xml@^1.2.0:
+  version "1.2.0"
+  resolved "https://registry.yarnpkg.com/prettify-xml/-/prettify-xml-1.2.0.tgz#46dcf1ee8a8d8b73db30b7e06ef26dc9cf3f6f18"
+  integrity sha1-Rtzx7oqNi3PbMLfgbvJtyc8/bxg=
+
+process-nextick-args@~2.0.0:
+  version "2.0.1"
+  resolved "https://registry.yarnpkg.com/process-nextick-args/-/process-nextick-args-2.0.1.tgz#7820d9b16120cc55ca9ae7792680ae7dba6d7fe2"
+  integrity sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==
+
+readable-stream@^2.0.0, readable-stream@^2.0.5, readable-stream@~2.3.6:
+  version "2.3.7"
+  resolved "https://registry.yarnpkg.com/readable-stream/-/readable-stream-2.3.7.tgz#1eca1cf711aef814c04f62252a36a62f6cb23b57"
+  integrity sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==
+  dependencies:
+    core-util-is "~1.0.0"
+    inherits "~2.0.3"
+    isarray "~1.0.0"
+    process-nextick-args "~2.0.0"
+    safe-buffer "~5.1.1"
+    string_decoder "~1.1.1"
+    util-deprecate "~1.0.1"
+
+readable-stream@^3.1.1, readable-stream@^3.4.0, readable-stream@^3.6.0:
+  version "3.6.0"
+  resolved "https://registry.yarnpkg.com/readable-stream/-/readable-stream-3.6.0.tgz#337bbda3adc0706bd3e024426a286d4b4b2c9198"
+  integrity sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==
+  dependencies:
+    inherits "^2.0.3"
+    string_decoder "^1.1.1"
+    util-deprecate "^1.0.1"
+
+readdir-glob@^1.0.0:
+  version "1.1.2"
+  resolved "https://registry.yarnpkg.com/readdir-glob/-/readdir-glob-1.1.2.tgz#b185789b8e6a43491635b6953295c5c5e3fd224c"
+  integrity sha512-6RLVvwJtVwEDfPdn6X6Ille4/lxGl0ATOY4FN/B9nxQcgOazvvI0nodiD19ScKq0PvA/29VpaOQML36o5IzZWA==
+  dependencies:
+    minimatch "^5.1.0"
+
+reduce-flatten@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/reduce-flatten/-/reduce-flatten-2.0.0.tgz#734fd84e65f375d7ca4465c69798c25c9d10ae27"
+  integrity sha512-EJ4UNY/U1t2P/2k6oqotuX2Cc3T6nxJwsM0N0asT7dhrtH1ltUxDn4NalSYmPE2rCkVpcf/X6R0wDwcFpzhd4w==
+
+rollup@^3.27.1:
+  version "3.29.4"
+  resolved "https://registry.yarnpkg.com/rollup/-/rollup-3.29.4.tgz#4d70c0f9834146df8705bfb69a9a19c9e1109981"
+  integrity sha512-oWzmBZwvYrU0iJHtDmhsm662rC15FRXmcjCk1xD771dFDx5jJ02ufAQQTn0etB2emNk4J9EZg/yWKpsn9BWGRw==
+  optionalDependencies:
+    fsevents "~2.3.2"
+
+safe-buffer@~5.1.0, safe-buffer@~5.1.1:
+  version "5.1.2"
+  resolved "https://registry.yarnpkg.com/safe-buffer/-/safe-buffer-5.1.2.tgz#991ec69d296e0313747d59bdfd2b745c35f8828d"
+  integrity sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==
+
+safe-buffer@~5.2.0:
+  version "5.2.1"
+  resolved "https://registry.yarnpkg.com/safe-buffer/-/safe-buffer-5.2.1.tgz#1eaf9fa9bdb1fdd4ec75f58f9cdb4e6b7827eec6"
+  integrity sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==
+
+safe-stable-stringify@^1.1.0:
+  version "1.1.1"
+  resolved "https://registry.yarnpkg.com/safe-stable-stringify/-/safe-stable-stringify-1.1.1.tgz#c8a220ab525cd94e60ebf47ddc404d610dc5d84a"
+  integrity sha512-ERq4hUjKDbJfE4+XtZLFPCDi8Vb1JqaxAPTxWFLBx8XcAlf9Bda/ZJdVezs/NAfsMQScyIlUMx+Yeu7P7rx5jw==
+
+safe-stable-stringify@^2.3.1:
+  version "2.3.1"
+  resolved "https://registry.yarnpkg.com/safe-stable-stringify/-/safe-stable-stringify-2.3.1.tgz#ab67cbe1fe7d40603ca641c5e765cb942d04fc73"
+  integrity sha512-kYBSfT+troD9cDA85VDnHZ1rpHC50O0g1e6WlGHVCz/g+JS+9WKLj+XwFYyR8UbrZN8ll9HUpDAAddY58MGisg==
+
+setimmediate@^1.0.5:
+  version "1.0.5"
+  resolved "https://registry.yarnpkg.com/setimmediate/-/setimmediate-1.0.5.tgz#290cbb232e306942d7d7ea9b83732ab7856f8285"
+  integrity sha512-MATJdZp8sLqDl/68LfQmbP8zKPLQNV6BIZoIgrscFDQ+RsvK/BxeDQOgyxKKoh0y/8h3BqVFnCqQ/gd+reiIXA==
+
+simple-swizzle@^0.2.2:
+  version "0.2.2"
+  resolved "https://registry.yarnpkg.com/simple-swizzle/-/simple-swizzle-0.2.2.tgz#a4da6b635ffcccca33f70d17cb92592de95e557a"
+  integrity sha1-pNprY1/8zMoz9w0Xy5JZLeleVXo=
+  dependencies:
+    is-arrayish "^0.3.1"
+
+source-map-js@^1.0.2:
+  version "1.0.2"
+  resolved "https://registry.yarnpkg.com/source-map-js/-/source-map-js-1.0.2.tgz#adbc361d9c62df380125e7f161f71c826f1e490c"
+  integrity sha512-R0XvVJ9WusLiqTCEiGCmICCMplcCkIwwR11mOSD9CR5u+IXYdiseeEuXCVAjS54zqwkLcPNnmU4OeJ6tUrWhDw==
+
+sourcemap-codec@^1.4.4:
+  version "1.4.8"
+  resolved "https://registry.yarnpkg.com/sourcemap-codec/-/sourcemap-codec-1.4.8.tgz#ea804bd94857402e6992d05a38ef1ae35a9ab4c4"
+  integrity sha512-9NykojV5Uih4lgo5So5dtw+f0JgJX30KCNI8gwhz2J9A15wD0Ml6tjHKwf6fTSa6fAdVBdZeNOs9eJ71qCk8vA==
+
+stack-trace@0.0.x:
+  version "0.0.10"
+  resolved "https://registry.yarnpkg.com/stack-trace/-/stack-trace-0.0.10.tgz#547c70b347e8d32b4e108ea1a2a159e5fdde19c0"
+  integrity sha1-VHxws0fo0ytOEI6hoqFZ5f3eGcA=
+
+string_decoder@^1.1.1:
+  version "1.3.0"
+  resolved "https://registry.yarnpkg.com/string_decoder/-/string_decoder-1.3.0.tgz#42f114594a46cf1a8e30b0a84f56c78c3edac21e"
+  integrity sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==
+  dependencies:
+    safe-buffer "~5.2.0"
+
+string_decoder@~1.1.1:
+  version "1.1.1"
+  resolved "https://registry.yarnpkg.com/string_decoder/-/string_decoder-1.1.1.tgz#9cf1611ba62685d7030ae9e4ba34149c3af03fc8"
+  integrity sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==
+  dependencies:
+    safe-buffer "~5.1.0"
+
+supports-color@^5.3.0:
+  version "5.5.0"
+  resolved "https://registry.yarnpkg.com/supports-color/-/supports-color-5.5.0.tgz#e2e69a44ac8772f78a1ec0b35b689df6530efc8f"
+  integrity sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==
+  dependencies:
+    has-flag "^3.0.0"
+
+table-layout@^1.0.1:
+  version "1.0.2"
+  resolved "https://registry.yarnpkg.com/table-layout/-/table-layout-1.0.2.tgz#c4038a1853b0136d63365a734b6931cf4fad4a04"
+  integrity sha512-qd/R7n5rQTRFi+Zf2sk5XVVd9UQl6ZkduPFC3S7WEGJAmetDTjY3qPN50eSKzwuzEyQKy5TN2TiZdkIjos2L6A==
+  dependencies:
+    array-back "^4.0.1"
+    deep-extend "~0.6.0"
+    typical "^5.2.0"
+    wordwrapjs "^4.0.0"
+
+tar-stream@^2.2.0:
+  version "2.2.0"
+  resolved "https://registry.yarnpkg.com/tar-stream/-/tar-stream-2.2.0.tgz#acad84c284136b060dc3faa64474aa9aebd77287"
+  integrity sha512-ujeqbceABgwMZxEJnk2HDY2DlnUZ+9oEcb1KzTVfYHio0UE6dG71n60d8D2I4qNvleWrrXpmjpt7vZeF1LnMZQ==
+  dependencies:
+    bl "^4.0.3"
+    end-of-stream "^1.4.1"
+    fs-constants "^1.0.0"
+    inherits "^2.0.3"
+    readable-stream "^3.1.1"
+
+text-hex@1.0.x:
+  version "1.0.0"
+  resolved "https://registry.yarnpkg.com/text-hex/-/text-hex-1.0.0.tgz#69dc9c1b17446ee79a92bf5b884bb4b9127506f5"
+  integrity sha512-uuVGNWzgJ4yhRaNSiubPY7OjISw4sw4E5Uv0wbjp+OzcbmVU/rsT8ujgcXJhn9ypzsgr5vlzpPqP+MBBKcGvbg==
+
+triple-beam@^1.3.0:
+  version "1.3.0"
+  resolved "https://registry.yarnpkg.com/triple-beam/-/triple-beam-1.3.0.tgz#a595214c7298db8339eeeee083e4d10bd8cb8dd9"
+  integrity sha512-XrHUvV5HpdLmIj4uVMxHggLbFSZYIn7HEWsqePZcI50pco+MPqJ50wMGY794X7AOOhxOBAjbkqfAbEe/QMp2Lw==
+
+ts-node@^10.4.0:
+  version "10.4.0"
+  resolved "https://registry.yarnpkg.com/ts-node/-/ts-node-10.4.0.tgz#680f88945885f4e6cf450e7f0d6223dd404895f7"
+  integrity sha512-g0FlPvvCXSIO1JDF6S232P5jPYqBkRL9qly81ZgAOSU7rwI0stphCgd2kLiCrU9DjQCrJMWEqcNSjQL02s6d8A==
+  dependencies:
+    "@cspotcode/source-map-support" "0.7.0"
+    "@tsconfig/node10" "^1.0.7"
+    "@tsconfig/node12" "^1.0.7"
+    "@tsconfig/node14" "^1.0.0"
+    "@tsconfig/node16" "^1.0.2"
+    acorn "^8.4.1"
+    acorn-walk "^8.1.1"
+    arg "^4.1.0"
+    create-require "^1.1.0"
+    diff "^4.0.1"
+    make-error "^1.1.1"
+    yn "3.1.1"
+
+typescript@^4.6.4:
+  version "4.9.5"
+  resolved "https://registry.yarnpkg.com/typescript/-/typescript-4.9.5.tgz#095979f9bcc0d09da324d58d03ce8f8374cbe65a"
+  integrity sha512-1FXk9E2Hm+QzZQ7z+McJiHL4NW1F2EzMu9Nq9i3zAaGqibafqYwCVU6WyWAuyQRRzOlxou8xZSyXLEN8oKj24g==
+
+typical@^4.0.0:
+  version "4.0.0"
+  resolved "https://registry.yarnpkg.com/typical/-/typical-4.0.0.tgz#cbeaff3b9d7ae1e2bbfaf5a4e6f11eccfde94fc4"
+  integrity sha512-VAH4IvQ7BDFYglMd7BPRDfLgxZZX4O4TFcRDA6EN5X7erNJJq+McIEp8np9aVtxrCJ6qx4GTYVfOWNjcqwZgRw==
+
+typical@^5.2.0:
+  version "5.2.0"
+  resolved "https://registry.yarnpkg.com/typical/-/typical-5.2.0.tgz#4daaac4f2b5315460804f0acf6cb69c52bb93066"
+  integrity sha512-dvdQgNDNJo+8B2uBQoqdb11eUCE1JQXhvjC/CZtgvZseVd5TYMXnq0+vuUemXbd/Se29cTaUuPX3YIc2xgbvIg==
+
+universalify@^2.0.0:
+  version "2.0.0"
+  resolved "https://registry.yarnpkg.com/universalify/-/universalify-2.0.0.tgz#75a4984efedc4b08975c5aeb73f530d02df25717"
+  integrity sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ==
+
+util-deprecate@^1.0.1, util-deprecate@~1.0.1:
+  version "1.0.2"
+  resolved "https://registry.yarnpkg.com/util-deprecate/-/util-deprecate-1.0.2.tgz#450d4dc9fa70de732762fbd2d4a28981419a0ccf"
+  integrity sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=
+
+vite@^4.0.5:
+  version "4.5.1"
+  resolved "https://registry.yarnpkg.com/vite/-/vite-4.5.1.tgz#3370986e1ed5dbabbf35a6c2e1fb1e18555b968a"
+  integrity sha512-AXXFaAJ8yebyqzoNB9fu2pHoo/nWX+xZlaRwoeYUxEqBO+Zj4msE5G+BhGBll9lYEKv9Hfks52PAF2X7qDYXQA==
+  dependencies:
+    esbuild "^0.18.10"
+    postcss "^8.4.27"
+    rollup "^3.27.1"
+  optionalDependencies:
+    fsevents "~2.3.2"
+
+winston-transport@^4.4.2:
+  version "4.5.0"
+  resolved "https://registry.yarnpkg.com/winston-transport/-/winston-transport-4.5.0.tgz#6e7b0dd04d393171ed5e4e4905db265f7ab384fa"
+  integrity sha512-YpZzcUzBedhlTAfJg6vJDlyEai/IFMIVcaEZZyl3UXIl4gmqRpU7AE89AHLkbzLUsv0NVmw7ts+iztqKxxPW1Q==
+  dependencies:
+    logform "^2.3.2"
+    readable-stream "^3.6.0"
+    triple-beam "^1.3.0"
+
+winston@^3.3.3:
+  version "3.5.1"
+  resolved "https://registry.yarnpkg.com/winston/-/winston-3.5.1.tgz#b25cc899d015836dbf8c583dec8c4c4483a0da2e"
+  integrity sha512-tbRtVy+vsSSCLcZq/8nXZaOie/S2tPXPFt4be/Q3vI/WtYwm7rrwidxVw2GRa38FIXcJ1kUM6MOZ9Jmnk3F3UA==
+  dependencies:
+    "@dabh/diagnostics" "^2.0.2"
+    async "^3.2.3"
+    is-stream "^2.0.0"
+    logform "^2.3.2"
+    one-time "^1.0.0"
+    readable-stream "^3.4.0"
+    safe-stable-stringify "^2.3.1"
+    stack-trace "0.0.x"
+    triple-beam "^1.3.0"
+    winston-transport "^4.4.2"
+
+wordwrapjs@^4.0.0:
+  version "4.0.1"
+  resolved "https://registry.yarnpkg.com/wordwrapjs/-/wordwrapjs-4.0.1.tgz#d9790bccfb110a0fc7836b5ebce0937b37a8b98f"
+  integrity sha512-kKlNACbvHrkpIw6oPeYDSmdCTu2hdMHoyXLTcUKala++lx5Y+wjJ/e474Jqv5abnVmwxw08DiTuHmw69lJGksA==
+  dependencies:
+    reduce-flatten "^2.0.0"
+    typical "^5.2.0"
+
+wrappy@1:
+  version "1.0.2"
+  resolved "https://registry.yarnpkg.com/wrappy/-/wrappy-1.0.2.tgz#b5243d8f3ec1aa35f1364605bc0d1036e30ab69f"
+  integrity sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=
+
+yn@3.1.1:
+  version "3.1.1"
+  resolved "https://registry.yarnpkg.com/yn/-/yn-3.1.1.tgz#1e87401a09d767c1d5eab26a6e4c185182d2eb50"
+  integrity sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q==
+
+zip-stream@^4.1.0:
+  version "4.1.0"
+  resolved "https://registry.yarnpkg.com/zip-stream/-/zip-stream-4.1.0.tgz#51dd326571544e36aa3f756430b313576dc8fc79"
+  integrity sha512-zshzwQW7gG7hjpBlgeQP9RuyPGNxvJdzR8SUM3QhxCnLjWN2E7j3dOvpeDcQoETfHx0urRS7EtmVToql7YpU4A==
+  dependencies:
+    archiver-utils "^2.1.0"
+    compress-commons "^4.1.0"
+    readable-stream "^3.6.0"
